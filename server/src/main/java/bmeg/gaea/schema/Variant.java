// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: server/src/main/protobuf/bmeg/gaea/schema/variant.proto

package bmeg.gaea.schema;

public final class Variant {
  private Variant() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface PositionOrBuilder extends
      // @@protoc_insertion_point(interface_extends:bmeg.gaea.schema.Position)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional string reference = 1;</code>
     *
     * <pre>
     * The name of the `Reference` on which the `Position` is located.
     * (e.g. `chr20` or `X`)
     * </pre>
     */
    java.lang.String getReference();
    /**
     * <code>optional string reference = 1;</code>
     *
     * <pre>
     * The name of the `Reference` on which the `Position` is located.
     * (e.g. `chr20` or `X`)
     * </pre>
     */
    com.google.protobuf.ByteString
        getReferenceBytes();

    /**
     * <code>optional int64 start = 2;</code>
     *
     * <pre>
     * The 0-based offset from the start of the forward strand for that
     * `Reference`. Genomic positions are non-negative integers less than
     * `Reference` length.
     * For Variant Calls: The start position at which this variant occurs (0-based).
     * This corresponds to the first base of the string of reference bases.
     * Genomic positions are non-negative integers less than reference length.
     * Variants spanning the join of circular genomes are represented as
     * two variants one on each side of the join (position 0).
     * </pre>
     */
    long getStart();

    /**
     * <code>optional int64 end = 3;</code>
     *
     * <pre>
     * The end position (exclusive), resulting in [start, end) closed-open
     * interval.
     * For Variantcalls: This is typically calculated by `start + referenceBases.length`.
     * </pre>
     */
    long getEnd();

    /**
     * <code>optional string strand = 4;</code>
     *
     * <pre>
     * // Strand the position is associated with.
     * Strand strand = 4;
     * </pre>
     */
    java.lang.String getStrand();
    /**
     * <code>optional string strand = 4;</code>
     *
     * <pre>
     * // Strand the position is associated with.
     * Strand strand = 4;
     * </pre>
     */
    com.google.protobuf.ByteString
        getStrandBytes();
  }
  /**
   * Protobuf type {@code bmeg.gaea.schema.Position}
   *
   * <pre>
   * A `Position` is one or more (consecutive***) bases in some `Reference`. A `Position` is
   * represented by a `Reference` name, and a base number on that `Reference`
   * (0-based).
   * ***Modified from GA4GH to include end position.***
   * </pre>
   */
  public  static final class Position extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:bmeg.gaea.schema.Position)
      PositionOrBuilder {
    // Use Position.newBuilder() to construct.
    private Position(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private Position() {
      reference_ = "";
      start_ = 0L;
      end_ = 0L;
      strand_ = "";
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private Position(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry) {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              reference_ = s;
              break;
            }
            case 16: {

              start_ = input.readInt64();
              break;
            }
            case 24: {

              end_ = input.readInt64();
              break;
            }
            case 34: {
              java.lang.String s = input.readStringRequireUtf8();

              strand_ = s;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw new RuntimeException(e.setUnfinishedMessage(this));
      } catch (java.io.IOException e) {
        throw new RuntimeException(
            new com.google.protobuf.InvalidProtocolBufferException(
                e.getMessage()).setUnfinishedMessage(this));
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return bmeg.gaea.schema.Variant.internal_static_bmeg_gaea_schema_Position_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return bmeg.gaea.schema.Variant.internal_static_bmeg_gaea_schema_Position_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              bmeg.gaea.schema.Variant.Position.class, bmeg.gaea.schema.Variant.Position.Builder.class);
    }

    public static final int REFERENCE_FIELD_NUMBER = 1;
    private volatile java.lang.Object reference_;
    /**
     * <code>optional string reference = 1;</code>
     *
     * <pre>
     * The name of the `Reference` on which the `Position` is located.
     * (e.g. `chr20` or `X`)
     * </pre>
     */
    public java.lang.String getReference() {
      java.lang.Object ref = reference_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        reference_ = s;
        return s;
      }
    }
    /**
     * <code>optional string reference = 1;</code>
     *
     * <pre>
     * The name of the `Reference` on which the `Position` is located.
     * (e.g. `chr20` or `X`)
     * </pre>
     */
    public com.google.protobuf.ByteString
        getReferenceBytes() {
      java.lang.Object ref = reference_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        reference_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int START_FIELD_NUMBER = 2;
    private long start_;
    /**
     * <code>optional int64 start = 2;</code>
     *
     * <pre>
     * The 0-based offset from the start of the forward strand for that
     * `Reference`. Genomic positions are non-negative integers less than
     * `Reference` length.
     * For Variant Calls: The start position at which this variant occurs (0-based).
     * This corresponds to the first base of the string of reference bases.
     * Genomic positions are non-negative integers less than reference length.
     * Variants spanning the join of circular genomes are represented as
     * two variants one on each side of the join (position 0).
     * </pre>
     */
    public long getStart() {
      return start_;
    }

    public static final int END_FIELD_NUMBER = 3;
    private long end_;
    /**
     * <code>optional int64 end = 3;</code>
     *
     * <pre>
     * The end position (exclusive), resulting in [start, end) closed-open
     * interval.
     * For Variantcalls: This is typically calculated by `start + referenceBases.length`.
     * </pre>
     */
    public long getEnd() {
      return end_;
    }

    public static final int STRAND_FIELD_NUMBER = 4;
    private volatile java.lang.Object strand_;
    /**
     * <code>optional string strand = 4;</code>
     *
     * <pre>
     * // Strand the position is associated with.
     * Strand strand = 4;
     * </pre>
     */
    public java.lang.String getStrand() {
      java.lang.Object ref = strand_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        strand_ = s;
        return s;
      }
    }
    /**
     * <code>optional string strand = 4;</code>
     *
     * <pre>
     * // Strand the position is associated with.
     * Strand strand = 4;
     * </pre>
     */
    public com.google.protobuf.ByteString
        getStrandBytes() {
      java.lang.Object ref = strand_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        strand_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getReferenceBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessage.writeString(output, 1, reference_);
      }
      if (start_ != 0L) {
        output.writeInt64(2, start_);
      }
      if (end_ != 0L) {
        output.writeInt64(3, end_);
      }
      if (!getStrandBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessage.writeString(output, 4, strand_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getReferenceBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(1, reference_);
      }
      if (start_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, start_);
      }
      if (end_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(3, end_);
      }
      if (!getStrandBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(4, strand_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    public static bmeg.gaea.schema.Variant.Position parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static bmeg.gaea.schema.Variant.Position parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static bmeg.gaea.schema.Variant.Position parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static bmeg.gaea.schema.Variant.Position parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static bmeg.gaea.schema.Variant.Position parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static bmeg.gaea.schema.Variant.Position parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static bmeg.gaea.schema.Variant.Position parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static bmeg.gaea.schema.Variant.Position parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static bmeg.gaea.schema.Variant.Position parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static bmeg.gaea.schema.Variant.Position parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(bmeg.gaea.schema.Variant.Position prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code bmeg.gaea.schema.Position}
     *
     * <pre>
     * A `Position` is one or more (consecutive***) bases in some `Reference`. A `Position` is
     * represented by a `Reference` name, and a base number on that `Reference`
     * (0-based).
     * ***Modified from GA4GH to include end position.***
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:bmeg.gaea.schema.Position)
        bmeg.gaea.schema.Variant.PositionOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return bmeg.gaea.schema.Variant.internal_static_bmeg_gaea_schema_Position_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return bmeg.gaea.schema.Variant.internal_static_bmeg_gaea_schema_Position_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                bmeg.gaea.schema.Variant.Position.class, bmeg.gaea.schema.Variant.Position.Builder.class);
      }

      // Construct using bmeg.gaea.schema.Variant.Position.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        reference_ = "";

        start_ = 0L;

        end_ = 0L;

        strand_ = "";

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return bmeg.gaea.schema.Variant.internal_static_bmeg_gaea_schema_Position_descriptor;
      }

      public bmeg.gaea.schema.Variant.Position getDefaultInstanceForType() {
        return bmeg.gaea.schema.Variant.Position.getDefaultInstance();
      }

      public bmeg.gaea.schema.Variant.Position build() {
        bmeg.gaea.schema.Variant.Position result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public bmeg.gaea.schema.Variant.Position buildPartial() {
        bmeg.gaea.schema.Variant.Position result = new bmeg.gaea.schema.Variant.Position(this);
        result.reference_ = reference_;
        result.start_ = start_;
        result.end_ = end_;
        result.strand_ = strand_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof bmeg.gaea.schema.Variant.Position) {
          return mergeFrom((bmeg.gaea.schema.Variant.Position)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(bmeg.gaea.schema.Variant.Position other) {
        if (other == bmeg.gaea.schema.Variant.Position.getDefaultInstance()) return this;
        if (!other.getReference().isEmpty()) {
          reference_ = other.reference_;
          onChanged();
        }
        if (other.getStart() != 0L) {
          setStart(other.getStart());
        }
        if (other.getEnd() != 0L) {
          setEnd(other.getEnd());
        }
        if (!other.getStrand().isEmpty()) {
          strand_ = other.strand_;
          onChanged();
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        bmeg.gaea.schema.Variant.Position parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (bmeg.gaea.schema.Variant.Position) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object reference_ = "";
      /**
       * <code>optional string reference = 1;</code>
       *
       * <pre>
       * The name of the `Reference` on which the `Position` is located.
       * (e.g. `chr20` or `X`)
       * </pre>
       */
      public java.lang.String getReference() {
        java.lang.Object ref = reference_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          reference_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string reference = 1;</code>
       *
       * <pre>
       * The name of the `Reference` on which the `Position` is located.
       * (e.g. `chr20` or `X`)
       * </pre>
       */
      public com.google.protobuf.ByteString
          getReferenceBytes() {
        java.lang.Object ref = reference_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          reference_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string reference = 1;</code>
       *
       * <pre>
       * The name of the `Reference` on which the `Position` is located.
       * (e.g. `chr20` or `X`)
       * </pre>
       */
      public Builder setReference(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        reference_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string reference = 1;</code>
       *
       * <pre>
       * The name of the `Reference` on which the `Position` is located.
       * (e.g. `chr20` or `X`)
       * </pre>
       */
      public Builder clearReference() {
        
        reference_ = getDefaultInstance().getReference();
        onChanged();
        return this;
      }
      /**
       * <code>optional string reference = 1;</code>
       *
       * <pre>
       * The name of the `Reference` on which the `Position` is located.
       * (e.g. `chr20` or `X`)
       * </pre>
       */
      public Builder setReferenceBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        reference_ = value;
        onChanged();
        return this;
      }

      private long start_ ;
      /**
       * <code>optional int64 start = 2;</code>
       *
       * <pre>
       * The 0-based offset from the start of the forward strand for that
       * `Reference`. Genomic positions are non-negative integers less than
       * `Reference` length.
       * For Variant Calls: The start position at which this variant occurs (0-based).
       * This corresponds to the first base of the string of reference bases.
       * Genomic positions are non-negative integers less than reference length.
       * Variants spanning the join of circular genomes are represented as
       * two variants one on each side of the join (position 0).
       * </pre>
       */
      public long getStart() {
        return start_;
      }
      /**
       * <code>optional int64 start = 2;</code>
       *
       * <pre>
       * The 0-based offset from the start of the forward strand for that
       * `Reference`. Genomic positions are non-negative integers less than
       * `Reference` length.
       * For Variant Calls: The start position at which this variant occurs (0-based).
       * This corresponds to the first base of the string of reference bases.
       * Genomic positions are non-negative integers less than reference length.
       * Variants spanning the join of circular genomes are represented as
       * two variants one on each side of the join (position 0).
       * </pre>
       */
      public Builder setStart(long value) {
        
        start_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 start = 2;</code>
       *
       * <pre>
       * The 0-based offset from the start of the forward strand for that
       * `Reference`. Genomic positions are non-negative integers less than
       * `Reference` length.
       * For Variant Calls: The start position at which this variant occurs (0-based).
       * This corresponds to the first base of the string of reference bases.
       * Genomic positions are non-negative integers less than reference length.
       * Variants spanning the join of circular genomes are represented as
       * two variants one on each side of the join (position 0).
       * </pre>
       */
      public Builder clearStart() {
        
        start_ = 0L;
        onChanged();
        return this;
      }

      private long end_ ;
      /**
       * <code>optional int64 end = 3;</code>
       *
       * <pre>
       * The end position (exclusive), resulting in [start, end) closed-open
       * interval.
       * For Variantcalls: This is typically calculated by `start + referenceBases.length`.
       * </pre>
       */
      public long getEnd() {
        return end_;
      }
      /**
       * <code>optional int64 end = 3;</code>
       *
       * <pre>
       * The end position (exclusive), resulting in [start, end) closed-open
       * interval.
       * For Variantcalls: This is typically calculated by `start + referenceBases.length`.
       * </pre>
       */
      public Builder setEnd(long value) {
        
        end_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 end = 3;</code>
       *
       * <pre>
       * The end position (exclusive), resulting in [start, end) closed-open
       * interval.
       * For Variantcalls: This is typically calculated by `start + referenceBases.length`.
       * </pre>
       */
      public Builder clearEnd() {
        
        end_ = 0L;
        onChanged();
        return this;
      }

      private java.lang.Object strand_ = "";
      /**
       * <code>optional string strand = 4;</code>
       *
       * <pre>
       * // Strand the position is associated with.
       * Strand strand = 4;
       * </pre>
       */
      public java.lang.String getStrand() {
        java.lang.Object ref = strand_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          strand_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string strand = 4;</code>
       *
       * <pre>
       * // Strand the position is associated with.
       * Strand strand = 4;
       * </pre>
       */
      public com.google.protobuf.ByteString
          getStrandBytes() {
        java.lang.Object ref = strand_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          strand_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string strand = 4;</code>
       *
       * <pre>
       * // Strand the position is associated with.
       * Strand strand = 4;
       * </pre>
       */
      public Builder setStrand(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        strand_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string strand = 4;</code>
       *
       * <pre>
       * // Strand the position is associated with.
       * Strand strand = 4;
       * </pre>
       */
      public Builder clearStrand() {
        
        strand_ = getDefaultInstance().getStrand();
        onChanged();
        return this;
      }
      /**
       * <code>optional string strand = 4;</code>
       *
       * <pre>
       * // Strand the position is associated with.
       * Strand strand = 4;
       * </pre>
       */
      public Builder setStrandBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        strand_ = value;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:bmeg.gaea.schema.Position)
    }

    // @@protoc_insertion_point(class_scope:bmeg.gaea.schema.Position)
    private static final bmeg.gaea.schema.Variant.Position DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new bmeg.gaea.schema.Variant.Position();
    }

    public static bmeg.gaea.schema.Variant.Position getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Position>
        PARSER = new com.google.protobuf.AbstractParser<Position>() {
      public Position parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        try {
          return new Position(input, extensionRegistry);
        } catch (RuntimeException e) {
          if (e.getCause() instanceof
              com.google.protobuf.InvalidProtocolBufferException) {
            throw (com.google.protobuf.InvalidProtocolBufferException)
                e.getCause();
          }
          throw e;
        }
      }
    };

    public static com.google.protobuf.Parser<Position> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Position> getParserForType() {
      return PARSER;
    }

    public bmeg.gaea.schema.Variant.Position getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface FeatureOrBuilder extends
      // @@protoc_insertion_point(interface_extends:bmeg.gaea.schema.Feature)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional .bmeg.gaea.schema.Position position = 1;</code>
     *
     * <pre>
     * position at which this feature occurs (0-based).
     * Features spanning the join of circular genomes are represented as
     * two features one on each side of the join (position 0).
     * </pre>
     */
    boolean hasPosition();
    /**
     * <code>optional .bmeg.gaea.schema.Position position = 1;</code>
     *
     * <pre>
     * position at which this feature occurs (0-based).
     * Features spanning the join of circular genomes are represented as
     * two features one on each side of the join (position 0).
     * </pre>
     */
    bmeg.gaea.schema.Variant.Position getPosition();
    /**
     * <code>optional .bmeg.gaea.schema.Position position = 1;</code>
     *
     * <pre>
     * position at which this feature occurs (0-based).
     * Features spanning the join of circular genomes are represented as
     * two features one on each side of the join (position 0).
     * </pre>
     */
    bmeg.gaea.schema.Variant.PositionOrBuilder getPositionOrBuilder();

    /**
     * <code>optional string featureType = 2;</code>
     *
     * <pre>
     * Feature that is annotated by this region.  Normally, this will be a term in
     * the Sequence Ontology. Identified features as "gene", etc...
     * For now, just use strings instead of OntologyTerms
     * OntologyTerm featureType;
     * </pre>
     */
    java.lang.String getFeatureType();
    /**
     * <code>optional string featureType = 2;</code>
     *
     * <pre>
     * Feature that is annotated by this region.  Normally, this will be a term in
     * the Sequence Ontology. Identified features as "gene", etc...
     * For now, just use strings instead of OntologyTerms
     * OntologyTerm featureType;
     * </pre>
     */
    com.google.protobuf.ByteString
        getFeatureTypeBytes();

    /**
     * <code>map&lt;string, string&gt; attributes = 3;</code>
     *
     * <pre>
     * Data dump/placeholder field.
     * 
     * Name/value attributes of the annotation.  Attribute names follow the GFF3
     * naming convention of reserved names starting with an upper cases
     * character, and user-define names start with lower-case.  Most GFF3
     * pre-defined attributes apply, the exceptions are ID and Parent, which are
     * defined as fields. Additional, the following attributes are added:
     * * Score - the GFF3 score column
     * * Phase - the GFF3 phase column for CDS features.
     * </pre>
     */
    java.util.Map<java.lang.String, java.lang.String>
    getAttributes();
  }
  /**
   * Protobuf type {@code bmeg.gaea.schema.Feature}
   *
   * <pre>
   * Annotation of a contiguous region of a sequence.
   * An example might be a gene or a protein.
   * For example, a position X might corresponds to gene/Feature TP53.
   * </pre>
   */
  public  static final class Feature extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:bmeg.gaea.schema.Feature)
      FeatureOrBuilder {
    // Use Feature.newBuilder() to construct.
    private Feature(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private Feature() {
      featureType_ = "";
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private Feature(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry) {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bmeg.gaea.schema.Variant.Position.Builder subBuilder = null;
              if (position_ != null) {
                subBuilder = position_.toBuilder();
              }
              position_ = input.readMessage(bmeg.gaea.schema.Variant.Position.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(position_);
                position_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              featureType_ = s;
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                attributes_ = com.google.protobuf.MapField.newMapField(
                    AttributesDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000004;
              }
              com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
              attributes = input.readMessage(
                  AttributesDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              attributes_.getMutableMap().put(attributes.getKey(), attributes.getValue());
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw new RuntimeException(e.setUnfinishedMessage(this));
      } catch (java.io.IOException e) {
        throw new RuntimeException(
            new com.google.protobuf.InvalidProtocolBufferException(
                e.getMessage()).setUnfinishedMessage(this));
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return bmeg.gaea.schema.Variant.internal_static_bmeg_gaea_schema_Feature_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 3:
          return internalGetAttributes();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return bmeg.gaea.schema.Variant.internal_static_bmeg_gaea_schema_Feature_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              bmeg.gaea.schema.Variant.Feature.class, bmeg.gaea.schema.Variant.Feature.Builder.class);
    }

    private int bitField0_;
    public static final int POSITION_FIELD_NUMBER = 1;
    private bmeg.gaea.schema.Variant.Position position_;
    /**
     * <code>optional .bmeg.gaea.schema.Position position = 1;</code>
     *
     * <pre>
     * position at which this feature occurs (0-based).
     * Features spanning the join of circular genomes are represented as
     * two features one on each side of the join (position 0).
     * </pre>
     */
    public boolean hasPosition() {
      return position_ != null;
    }
    /**
     * <code>optional .bmeg.gaea.schema.Position position = 1;</code>
     *
     * <pre>
     * position at which this feature occurs (0-based).
     * Features spanning the join of circular genomes are represented as
     * two features one on each side of the join (position 0).
     * </pre>
     */
    public bmeg.gaea.schema.Variant.Position getPosition() {
      return position_ == null ? bmeg.gaea.schema.Variant.Position.getDefaultInstance() : position_;
    }
    /**
     * <code>optional .bmeg.gaea.schema.Position position = 1;</code>
     *
     * <pre>
     * position at which this feature occurs (0-based).
     * Features spanning the join of circular genomes are represented as
     * two features one on each side of the join (position 0).
     * </pre>
     */
    public bmeg.gaea.schema.Variant.PositionOrBuilder getPositionOrBuilder() {
      return getPosition();
    }

    public static final int FEATURETYPE_FIELD_NUMBER = 2;
    private volatile java.lang.Object featureType_;
    /**
     * <code>optional string featureType = 2;</code>
     *
     * <pre>
     * Feature that is annotated by this region.  Normally, this will be a term in
     * the Sequence Ontology. Identified features as "gene", etc...
     * For now, just use strings instead of OntologyTerms
     * OntologyTerm featureType;
     * </pre>
     */
    public java.lang.String getFeatureType() {
      java.lang.Object ref = featureType_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        featureType_ = s;
        return s;
      }
    }
    /**
     * <code>optional string featureType = 2;</code>
     *
     * <pre>
     * Feature that is annotated by this region.  Normally, this will be a term in
     * the Sequence Ontology. Identified features as "gene", etc...
     * For now, just use strings instead of OntologyTerms
     * OntologyTerm featureType;
     * </pre>
     */
    public com.google.protobuf.ByteString
        getFeatureTypeBytes() {
      java.lang.Object ref = featureType_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        featureType_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int ATTRIBUTES_FIELD_NUMBER = 3;
    private static final class AttributesDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.String, java.lang.String> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.String, java.lang.String>newDefaultInstance(
                  bmeg.gaea.schema.Variant.internal_static_bmeg_gaea_schema_Feature_AttributesEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "",
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "");
    }
    private com.google.protobuf.MapField<
        java.lang.String, java.lang.String> attributes_;
    private com.google.protobuf.MapField<java.lang.String, java.lang.String>
    internalGetAttributes() {
      if (attributes_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            AttributesDefaultEntryHolder.defaultEntry);
     }
      return attributes_;
    }
    /**
     * <code>map&lt;string, string&gt; attributes = 3;</code>
     *
     * <pre>
     * Data dump/placeholder field.
     * 
     * Name/value attributes of the annotation.  Attribute names follow the GFF3
     * naming convention of reserved names starting with an upper cases
     * character, and user-define names start with lower-case.  Most GFF3
     * pre-defined attributes apply, the exceptions are ID and Parent, which are
     * defined as fields. Additional, the following attributes are added:
     * * Score - the GFF3 score column
     * * Phase - the GFF3 phase column for CDS features.
     * </pre>
     */

    public java.util.Map<java.lang.String, java.lang.String> getAttributes() {
      return internalGetAttributes().getMap();
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (position_ != null) {
        output.writeMessage(1, getPosition());
      }
      if (!getFeatureTypeBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessage.writeString(output, 2, featureType_);
      }
      for (java.util.Map.Entry<java.lang.String, java.lang.String> entry
           : internalGetAttributes().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
        attributes = AttributesDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        output.writeMessage(3, attributes);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (position_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getPosition());
      }
      if (!getFeatureTypeBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(2, featureType_);
      }
      for (java.util.Map.Entry<java.lang.String, java.lang.String> entry
           : internalGetAttributes().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
        attributes = AttributesDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(3, attributes);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    public static bmeg.gaea.schema.Variant.Feature parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static bmeg.gaea.schema.Variant.Feature parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static bmeg.gaea.schema.Variant.Feature parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static bmeg.gaea.schema.Variant.Feature parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static bmeg.gaea.schema.Variant.Feature parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static bmeg.gaea.schema.Variant.Feature parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static bmeg.gaea.schema.Variant.Feature parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static bmeg.gaea.schema.Variant.Feature parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static bmeg.gaea.schema.Variant.Feature parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static bmeg.gaea.schema.Variant.Feature parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(bmeg.gaea.schema.Variant.Feature prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code bmeg.gaea.schema.Feature}
     *
     * <pre>
     * Annotation of a contiguous region of a sequence.
     * An example might be a gene or a protein.
     * For example, a position X might corresponds to gene/Feature TP53.
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:bmeg.gaea.schema.Feature)
        bmeg.gaea.schema.Variant.FeatureOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return bmeg.gaea.schema.Variant.internal_static_bmeg_gaea_schema_Feature_descriptor;
      }

      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMapField(
          int number) {
        switch (number) {
          case 3:
            return internalGetAttributes();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMutableMapField(
          int number) {
        switch (number) {
          case 3:
            return internalGetMutableAttributes();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return bmeg.gaea.schema.Variant.internal_static_bmeg_gaea_schema_Feature_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                bmeg.gaea.schema.Variant.Feature.class, bmeg.gaea.schema.Variant.Feature.Builder.class);
      }

      // Construct using bmeg.gaea.schema.Variant.Feature.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        if (positionBuilder_ == null) {
          position_ = null;
        } else {
          position_ = null;
          positionBuilder_ = null;
        }
        featureType_ = "";

        internalGetMutableAttributes().clear();
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return bmeg.gaea.schema.Variant.internal_static_bmeg_gaea_schema_Feature_descriptor;
      }

      public bmeg.gaea.schema.Variant.Feature getDefaultInstanceForType() {
        return bmeg.gaea.schema.Variant.Feature.getDefaultInstance();
      }

      public bmeg.gaea.schema.Variant.Feature build() {
        bmeg.gaea.schema.Variant.Feature result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public bmeg.gaea.schema.Variant.Feature buildPartial() {
        bmeg.gaea.schema.Variant.Feature result = new bmeg.gaea.schema.Variant.Feature(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (positionBuilder_ == null) {
          result.position_ = position_;
        } else {
          result.position_ = positionBuilder_.build();
        }
        result.featureType_ = featureType_;
        result.attributes_ = internalGetAttributes();
        result.attributes_.makeImmutable();
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof bmeg.gaea.schema.Variant.Feature) {
          return mergeFrom((bmeg.gaea.schema.Variant.Feature)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(bmeg.gaea.schema.Variant.Feature other) {
        if (other == bmeg.gaea.schema.Variant.Feature.getDefaultInstance()) return this;
        if (other.hasPosition()) {
          mergePosition(other.getPosition());
        }
        if (!other.getFeatureType().isEmpty()) {
          featureType_ = other.featureType_;
          onChanged();
        }
        internalGetMutableAttributes().mergeFrom(
            other.internalGetAttributes());
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        bmeg.gaea.schema.Variant.Feature parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (bmeg.gaea.schema.Variant.Feature) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private bmeg.gaea.schema.Variant.Position position_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          bmeg.gaea.schema.Variant.Position, bmeg.gaea.schema.Variant.Position.Builder, bmeg.gaea.schema.Variant.PositionOrBuilder> positionBuilder_;
      /**
       * <code>optional .bmeg.gaea.schema.Position position = 1;</code>
       *
       * <pre>
       * position at which this feature occurs (0-based).
       * Features spanning the join of circular genomes are represented as
       * two features one on each side of the join (position 0).
       * </pre>
       */
      public boolean hasPosition() {
        return positionBuilder_ != null || position_ != null;
      }
      /**
       * <code>optional .bmeg.gaea.schema.Position position = 1;</code>
       *
       * <pre>
       * position at which this feature occurs (0-based).
       * Features spanning the join of circular genomes are represented as
       * two features one on each side of the join (position 0).
       * </pre>
       */
      public bmeg.gaea.schema.Variant.Position getPosition() {
        if (positionBuilder_ == null) {
          return position_ == null ? bmeg.gaea.schema.Variant.Position.getDefaultInstance() : position_;
        } else {
          return positionBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .bmeg.gaea.schema.Position position = 1;</code>
       *
       * <pre>
       * position at which this feature occurs (0-based).
       * Features spanning the join of circular genomes are represented as
       * two features one on each side of the join (position 0).
       * </pre>
       */
      public Builder setPosition(bmeg.gaea.schema.Variant.Position value) {
        if (positionBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          position_ = value;
          onChanged();
        } else {
          positionBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .bmeg.gaea.schema.Position position = 1;</code>
       *
       * <pre>
       * position at which this feature occurs (0-based).
       * Features spanning the join of circular genomes are represented as
       * two features one on each side of the join (position 0).
       * </pre>
       */
      public Builder setPosition(
          bmeg.gaea.schema.Variant.Position.Builder builderForValue) {
        if (positionBuilder_ == null) {
          position_ = builderForValue.build();
          onChanged();
        } else {
          positionBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .bmeg.gaea.schema.Position position = 1;</code>
       *
       * <pre>
       * position at which this feature occurs (0-based).
       * Features spanning the join of circular genomes are represented as
       * two features one on each side of the join (position 0).
       * </pre>
       */
      public Builder mergePosition(bmeg.gaea.schema.Variant.Position value) {
        if (positionBuilder_ == null) {
          if (position_ != null) {
            position_ =
              bmeg.gaea.schema.Variant.Position.newBuilder(position_).mergeFrom(value).buildPartial();
          } else {
            position_ = value;
          }
          onChanged();
        } else {
          positionBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .bmeg.gaea.schema.Position position = 1;</code>
       *
       * <pre>
       * position at which this feature occurs (0-based).
       * Features spanning the join of circular genomes are represented as
       * two features one on each side of the join (position 0).
       * </pre>
       */
      public Builder clearPosition() {
        if (positionBuilder_ == null) {
          position_ = null;
          onChanged();
        } else {
          position_ = null;
          positionBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .bmeg.gaea.schema.Position position = 1;</code>
       *
       * <pre>
       * position at which this feature occurs (0-based).
       * Features spanning the join of circular genomes are represented as
       * two features one on each side of the join (position 0).
       * </pre>
       */
      public bmeg.gaea.schema.Variant.Position.Builder getPositionBuilder() {
        
        onChanged();
        return getPositionFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .bmeg.gaea.schema.Position position = 1;</code>
       *
       * <pre>
       * position at which this feature occurs (0-based).
       * Features spanning the join of circular genomes are represented as
       * two features one on each side of the join (position 0).
       * </pre>
       */
      public bmeg.gaea.schema.Variant.PositionOrBuilder getPositionOrBuilder() {
        if (positionBuilder_ != null) {
          return positionBuilder_.getMessageOrBuilder();
        } else {
          return position_ == null ?
              bmeg.gaea.schema.Variant.Position.getDefaultInstance() : position_;
        }
      }
      /**
       * <code>optional .bmeg.gaea.schema.Position position = 1;</code>
       *
       * <pre>
       * position at which this feature occurs (0-based).
       * Features spanning the join of circular genomes are represented as
       * two features one on each side of the join (position 0).
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          bmeg.gaea.schema.Variant.Position, bmeg.gaea.schema.Variant.Position.Builder, bmeg.gaea.schema.Variant.PositionOrBuilder> 
          getPositionFieldBuilder() {
        if (positionBuilder_ == null) {
          positionBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              bmeg.gaea.schema.Variant.Position, bmeg.gaea.schema.Variant.Position.Builder, bmeg.gaea.schema.Variant.PositionOrBuilder>(
                  getPosition(),
                  getParentForChildren(),
                  isClean());
          position_ = null;
        }
        return positionBuilder_;
      }

      private java.lang.Object featureType_ = "";
      /**
       * <code>optional string featureType = 2;</code>
       *
       * <pre>
       * Feature that is annotated by this region.  Normally, this will be a term in
       * the Sequence Ontology. Identified features as "gene", etc...
       * For now, just use strings instead of OntologyTerms
       * OntologyTerm featureType;
       * </pre>
       */
      public java.lang.String getFeatureType() {
        java.lang.Object ref = featureType_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          featureType_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string featureType = 2;</code>
       *
       * <pre>
       * Feature that is annotated by this region.  Normally, this will be a term in
       * the Sequence Ontology. Identified features as "gene", etc...
       * For now, just use strings instead of OntologyTerms
       * OntologyTerm featureType;
       * </pre>
       */
      public com.google.protobuf.ByteString
          getFeatureTypeBytes() {
        java.lang.Object ref = featureType_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          featureType_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string featureType = 2;</code>
       *
       * <pre>
       * Feature that is annotated by this region.  Normally, this will be a term in
       * the Sequence Ontology. Identified features as "gene", etc...
       * For now, just use strings instead of OntologyTerms
       * OntologyTerm featureType;
       * </pre>
       */
      public Builder setFeatureType(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        featureType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string featureType = 2;</code>
       *
       * <pre>
       * Feature that is annotated by this region.  Normally, this will be a term in
       * the Sequence Ontology. Identified features as "gene", etc...
       * For now, just use strings instead of OntologyTerms
       * OntologyTerm featureType;
       * </pre>
       */
      public Builder clearFeatureType() {
        
        featureType_ = getDefaultInstance().getFeatureType();
        onChanged();
        return this;
      }
      /**
       * <code>optional string featureType = 2;</code>
       *
       * <pre>
       * Feature that is annotated by this region.  Normally, this will be a term in
       * the Sequence Ontology. Identified features as "gene", etc...
       * For now, just use strings instead of OntologyTerms
       * OntologyTerm featureType;
       * </pre>
       */
      public Builder setFeatureTypeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        featureType_ = value;
        onChanged();
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.String, java.lang.String> attributes_;
      private com.google.protobuf.MapField<java.lang.String, java.lang.String>
      internalGetAttributes() {
        if (attributes_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              AttributesDefaultEntryHolder.defaultEntry);
       }
        return attributes_;
      }
      private com.google.protobuf.MapField<java.lang.String, java.lang.String>
      internalGetMutableAttributes() {
        onChanged();;
        if (attributes_ == null) {
          attributes_ = com.google.protobuf.MapField.newMapField(
              AttributesDefaultEntryHolder.defaultEntry);
        }
        if (!attributes_.isMutable()) {
          attributes_ = attributes_.copy();
        }
        return attributes_;
      }
      /**
       * <code>map&lt;string, string&gt; attributes = 3;</code>
       *
       * <pre>
       * Data dump/placeholder field.
       * 
       * Name/value attributes of the annotation.  Attribute names follow the GFF3
       * naming convention of reserved names starting with an upper cases
       * character, and user-define names start with lower-case.  Most GFF3
       * pre-defined attributes apply, the exceptions are ID and Parent, which are
       * defined as fields. Additional, the following attributes are added:
       * * Score - the GFF3 score column
       * * Phase - the GFF3 phase column for CDS features.
       * </pre>
       */
      public java.util.Map<java.lang.String, java.lang.String> getAttributes() {
        return internalGetAttributes().getMap();
      }
      /**
       * <code>map&lt;string, string&gt; attributes = 3;</code>
       *
       * <pre>
       * Data dump/placeholder field.
       * 
       * Name/value attributes of the annotation.  Attribute names follow the GFF3
       * naming convention of reserved names starting with an upper cases
       * character, and user-define names start with lower-case.  Most GFF3
       * pre-defined attributes apply, the exceptions are ID and Parent, which are
       * defined as fields. Additional, the following attributes are added:
       * * Score - the GFF3 score column
       * * Phase - the GFF3 phase column for CDS features.
       * </pre>
       */
      public java.util.Map<java.lang.String, java.lang.String>
      getMutableAttributes() {
        return internalGetMutableAttributes().getMutableMap();
      }
      /**
       * <code>map&lt;string, string&gt; attributes = 3;</code>
       *
       * <pre>
       * Data dump/placeholder field.
       * 
       * Name/value attributes of the annotation.  Attribute names follow the GFF3
       * naming convention of reserved names starting with an upper cases
       * character, and user-define names start with lower-case.  Most GFF3
       * pre-defined attributes apply, the exceptions are ID and Parent, which are
       * defined as fields. Additional, the following attributes are added:
       * * Score - the GFF3 score column
       * * Phase - the GFF3 phase column for CDS features.
       * </pre>
       */
      public Builder putAllAttributes(
          java.util.Map<java.lang.String, java.lang.String> values) {
        getMutableAttributes().putAll(values);
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:bmeg.gaea.schema.Feature)
    }

    // @@protoc_insertion_point(class_scope:bmeg.gaea.schema.Feature)
    private static final bmeg.gaea.schema.Variant.Feature DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new bmeg.gaea.schema.Variant.Feature();
    }

    public static bmeg.gaea.schema.Variant.Feature getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Feature>
        PARSER = new com.google.protobuf.AbstractParser<Feature>() {
      public Feature parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        try {
          return new Feature(input, extensionRegistry);
        } catch (RuntimeException e) {
          if (e.getCause() instanceof
              com.google.protobuf.InvalidProtocolBufferException) {
            throw (com.google.protobuf.InvalidProtocolBufferException)
                e.getCause();
          }
          throw e;
        }
      }
    };

    public static com.google.protobuf.Parser<Feature> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Feature> getParserForType() {
      return PARSER;
    }

    public bmeg.gaea.schema.Variant.Feature getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface VariantCallEffectOrBuilder extends
      // @@protoc_insertion_point(interface_extends:bmeg.gaea.schema.VariantCallEffect)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional string source = 1;</code>
     */
    java.lang.String getSource();
    /**
     * <code>optional string source = 1;</code>
     */
    com.google.protobuf.ByteString
        getSourceBytes();

    /**
     * <code>optional string feature = 2;</code>
     *
     * <pre>
     * The feature can mean either the gene or the protein this variant is associated with.
     * </pre>
     */
    java.lang.String getFeature();
    /**
     * <code>optional string feature = 2;</code>
     *
     * <pre>
     * The feature can mean either the gene or the protein this variant is associated with.
     * </pre>
     */
    com.google.protobuf.ByteString
        getFeatureBytes();

    /**
     * <code>optional string variantClassification = 3;</code>
     */
    java.lang.String getVariantClassification();
    /**
     * <code>optional string variantClassification = 3;</code>
     */
    com.google.protobuf.ByteString
        getVariantClassificationBytes();

    /**
     * <code>repeated string domains = 4;</code>
     */
    com.google.protobuf.ProtocolStringList
        getDomainsList();
    /**
     * <code>repeated string domains = 4;</code>
     */
    int getDomainsCount();
    /**
     * <code>repeated string domains = 4;</code>
     */
    java.lang.String getDomains(int index);
    /**
     * <code>repeated string domains = 4;</code>
     */
    com.google.protobuf.ByteString
        getDomainsBytes(int index);

    /**
     * <code>optional string dbsnpRS = 5;</code>
     */
    java.lang.String getDbsnpRS();
    /**
     * <code>optional string dbsnpRS = 5;</code>
     */
    com.google.protobuf.ByteString
        getDbsnpRSBytes();

    /**
     * <code>optional string dbsnpValStatus = 6;</code>
     */
    java.lang.String getDbsnpValStatus();
    /**
     * <code>optional string dbsnpValStatus = 6;</code>
     */
    com.google.protobuf.ByteString
        getDbsnpValStatusBytes();

    /**
     * <code>map&lt;string, string&gt; info = 7;</code>
     *
     * <pre>
     * For now, a placeholder field/data dump of maf file fields such as trvType, cPosition, and aminoAcidChange
     * (Might want to consider stealing HGVS annotation data structure from GA4GH for latter two)
     * </pre>
     */
    java.util.Map<java.lang.String, java.lang.String>
    getInfo();
  }
  /**
   * Protobuf type {@code bmeg.gaea.schema.VariantCallEffect}
   *
   * <pre>
   * How does a particular mutation affect a transcript/protein?
   * 
   * VariantCallEffect is most similar to the TranscriptEffect,
   * VariantAnnotation, and HGVSAnnotation concepts in 
   * https://github.com/ga4gh/schemas/blob/variation_annotation/src/main/resources/avro/alleleAnnotations.avdl
   * But MUCH simplified.
   * </pre>
   */
  public  static final class VariantCallEffect extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:bmeg.gaea.schema.VariantCallEffect)
      VariantCallEffectOrBuilder {
    // Use VariantCallEffect.newBuilder() to construct.
    private VariantCallEffect(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private VariantCallEffect() {
      source_ = "";
      feature_ = "";
      variantClassification_ = "";
      domains_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      dbsnpRS_ = "";
      dbsnpValStatus_ = "";
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private VariantCallEffect(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry) {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              source_ = s;
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              feature_ = s;
              break;
            }
            case 26: {
              java.lang.String s = input.readStringRequireUtf8();

              variantClassification_ = s;
              break;
            }
            case 34: {
              java.lang.String s = input.readStringRequireUtf8();
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                domains_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000008;
              }
              domains_.add(s);
              break;
            }
            case 42: {
              java.lang.String s = input.readStringRequireUtf8();

              dbsnpRS_ = s;
              break;
            }
            case 50: {
              java.lang.String s = input.readStringRequireUtf8();

              dbsnpValStatus_ = s;
              break;
            }
            case 58: {
              if (!((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
                info_ = com.google.protobuf.MapField.newMapField(
                    InfoDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000040;
              }
              com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
              info = input.readMessage(
                  InfoDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              info_.getMutableMap().put(info.getKey(), info.getValue());
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw new RuntimeException(e.setUnfinishedMessage(this));
      } catch (java.io.IOException e) {
        throw new RuntimeException(
            new com.google.protobuf.InvalidProtocolBufferException(
                e.getMessage()).setUnfinishedMessage(this));
      } finally {
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          domains_ = domains_.getUnmodifiableView();
        }
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return bmeg.gaea.schema.Variant.internal_static_bmeg_gaea_schema_VariantCallEffect_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 7:
          return internalGetInfo();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return bmeg.gaea.schema.Variant.internal_static_bmeg_gaea_schema_VariantCallEffect_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              bmeg.gaea.schema.Variant.VariantCallEffect.class, bmeg.gaea.schema.Variant.VariantCallEffect.Builder.class);
    }

    private int bitField0_;
    public static final int SOURCE_FIELD_NUMBER = 1;
    private volatile java.lang.Object source_;
    /**
     * <code>optional string source = 1;</code>
     */
    public java.lang.String getSource() {
      java.lang.Object ref = source_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        source_ = s;
        return s;
      }
    }
    /**
     * <code>optional string source = 1;</code>
     */
    public com.google.protobuf.ByteString
        getSourceBytes() {
      java.lang.Object ref = source_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        source_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int FEATURE_FIELD_NUMBER = 2;
    private volatile java.lang.Object feature_;
    /**
     * <code>optional string feature = 2;</code>
     *
     * <pre>
     * The feature can mean either the gene or the protein this variant is associated with.
     * </pre>
     */
    public java.lang.String getFeature() {
      java.lang.Object ref = feature_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        feature_ = s;
        return s;
      }
    }
    /**
     * <code>optional string feature = 2;</code>
     *
     * <pre>
     * The feature can mean either the gene or the protein this variant is associated with.
     * </pre>
     */
    public com.google.protobuf.ByteString
        getFeatureBytes() {
      java.lang.Object ref = feature_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        feature_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int VARIANTCLASSIFICATION_FIELD_NUMBER = 3;
    private volatile java.lang.Object variantClassification_;
    /**
     * <code>optional string variantClassification = 3;</code>
     */
    public java.lang.String getVariantClassification() {
      java.lang.Object ref = variantClassification_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        variantClassification_ = s;
        return s;
      }
    }
    /**
     * <code>optional string variantClassification = 3;</code>
     */
    public com.google.protobuf.ByteString
        getVariantClassificationBytes() {
      java.lang.Object ref = variantClassification_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        variantClassification_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int DOMAINS_FIELD_NUMBER = 4;
    private com.google.protobuf.LazyStringList domains_;
    /**
     * <code>repeated string domains = 4;</code>
     */
    public com.google.protobuf.ProtocolStringList
        getDomainsList() {
      return domains_;
    }
    /**
     * <code>repeated string domains = 4;</code>
     */
    public int getDomainsCount() {
      return domains_.size();
    }
    /**
     * <code>repeated string domains = 4;</code>
     */
    public java.lang.String getDomains(int index) {
      return domains_.get(index);
    }
    /**
     * <code>repeated string domains = 4;</code>
     */
    public com.google.protobuf.ByteString
        getDomainsBytes(int index) {
      return domains_.getByteString(index);
    }

    public static final int DBSNPRS_FIELD_NUMBER = 5;
    private volatile java.lang.Object dbsnpRS_;
    /**
     * <code>optional string dbsnpRS = 5;</code>
     */
    public java.lang.String getDbsnpRS() {
      java.lang.Object ref = dbsnpRS_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        dbsnpRS_ = s;
        return s;
      }
    }
    /**
     * <code>optional string dbsnpRS = 5;</code>
     */
    public com.google.protobuf.ByteString
        getDbsnpRSBytes() {
      java.lang.Object ref = dbsnpRS_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        dbsnpRS_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int DBSNPVALSTATUS_FIELD_NUMBER = 6;
    private volatile java.lang.Object dbsnpValStatus_;
    /**
     * <code>optional string dbsnpValStatus = 6;</code>
     */
    public java.lang.String getDbsnpValStatus() {
      java.lang.Object ref = dbsnpValStatus_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        dbsnpValStatus_ = s;
        return s;
      }
    }
    /**
     * <code>optional string dbsnpValStatus = 6;</code>
     */
    public com.google.protobuf.ByteString
        getDbsnpValStatusBytes() {
      java.lang.Object ref = dbsnpValStatus_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        dbsnpValStatus_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int INFO_FIELD_NUMBER = 7;
    private static final class InfoDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.String, java.lang.String> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.String, java.lang.String>newDefaultInstance(
                  bmeg.gaea.schema.Variant.internal_static_bmeg_gaea_schema_VariantCallEffect_InfoEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "",
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "");
    }
    private com.google.protobuf.MapField<
        java.lang.String, java.lang.String> info_;
    private com.google.protobuf.MapField<java.lang.String, java.lang.String>
    internalGetInfo() {
      if (info_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            InfoDefaultEntryHolder.defaultEntry);
     }
      return info_;
    }
    /**
     * <code>map&lt;string, string&gt; info = 7;</code>
     *
     * <pre>
     * For now, a placeholder field/data dump of maf file fields such as trvType, cPosition, and aminoAcidChange
     * (Might want to consider stealing HGVS annotation data structure from GA4GH for latter two)
     * </pre>
     */

    public java.util.Map<java.lang.String, java.lang.String> getInfo() {
      return internalGetInfo().getMap();
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getSourceBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessage.writeString(output, 1, source_);
      }
      if (!getFeatureBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessage.writeString(output, 2, feature_);
      }
      if (!getVariantClassificationBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessage.writeString(output, 3, variantClassification_);
      }
      for (int i = 0; i < domains_.size(); i++) {
        com.google.protobuf.GeneratedMessage.writeString(output, 4, domains_.getRaw(i));
      }
      if (!getDbsnpRSBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessage.writeString(output, 5, dbsnpRS_);
      }
      if (!getDbsnpValStatusBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessage.writeString(output, 6, dbsnpValStatus_);
      }
      for (java.util.Map.Entry<java.lang.String, java.lang.String> entry
           : internalGetInfo().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
        info = InfoDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        output.writeMessage(7, info);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getSourceBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(1, source_);
      }
      if (!getFeatureBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(2, feature_);
      }
      if (!getVariantClassificationBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(3, variantClassification_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < domains_.size(); i++) {
          dataSize += computeStringSizeNoTag(domains_.getRaw(i));
        }
        size += dataSize;
        size += 1 * getDomainsList().size();
      }
      if (!getDbsnpRSBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(5, dbsnpRS_);
      }
      if (!getDbsnpValStatusBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(6, dbsnpValStatus_);
      }
      for (java.util.Map.Entry<java.lang.String, java.lang.String> entry
           : internalGetInfo().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
        info = InfoDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(7, info);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    public static bmeg.gaea.schema.Variant.VariantCallEffect parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static bmeg.gaea.schema.Variant.VariantCallEffect parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static bmeg.gaea.schema.Variant.VariantCallEffect parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static bmeg.gaea.schema.Variant.VariantCallEffect parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static bmeg.gaea.schema.Variant.VariantCallEffect parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static bmeg.gaea.schema.Variant.VariantCallEffect parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static bmeg.gaea.schema.Variant.VariantCallEffect parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static bmeg.gaea.schema.Variant.VariantCallEffect parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static bmeg.gaea.schema.Variant.VariantCallEffect parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static bmeg.gaea.schema.Variant.VariantCallEffect parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(bmeg.gaea.schema.Variant.VariantCallEffect prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code bmeg.gaea.schema.VariantCallEffect}
     *
     * <pre>
     * How does a particular mutation affect a transcript/protein?
     * 
     * VariantCallEffect is most similar to the TranscriptEffect,
     * VariantAnnotation, and HGVSAnnotation concepts in 
     * https://github.com/ga4gh/schemas/blob/variation_annotation/src/main/resources/avro/alleleAnnotations.avdl
     * But MUCH simplified.
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:bmeg.gaea.schema.VariantCallEffect)
        bmeg.gaea.schema.Variant.VariantCallEffectOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return bmeg.gaea.schema.Variant.internal_static_bmeg_gaea_schema_VariantCallEffect_descriptor;
      }

      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMapField(
          int number) {
        switch (number) {
          case 7:
            return internalGetInfo();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMutableMapField(
          int number) {
        switch (number) {
          case 7:
            return internalGetMutableInfo();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return bmeg.gaea.schema.Variant.internal_static_bmeg_gaea_schema_VariantCallEffect_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                bmeg.gaea.schema.Variant.VariantCallEffect.class, bmeg.gaea.schema.Variant.VariantCallEffect.Builder.class);
      }

      // Construct using bmeg.gaea.schema.Variant.VariantCallEffect.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        source_ = "";

        feature_ = "";

        variantClassification_ = "";

        domains_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000008);
        dbsnpRS_ = "";

        dbsnpValStatus_ = "";

        internalGetMutableInfo().clear();
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return bmeg.gaea.schema.Variant.internal_static_bmeg_gaea_schema_VariantCallEffect_descriptor;
      }

      public bmeg.gaea.schema.Variant.VariantCallEffect getDefaultInstanceForType() {
        return bmeg.gaea.schema.Variant.VariantCallEffect.getDefaultInstance();
      }

      public bmeg.gaea.schema.Variant.VariantCallEffect build() {
        bmeg.gaea.schema.Variant.VariantCallEffect result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public bmeg.gaea.schema.Variant.VariantCallEffect buildPartial() {
        bmeg.gaea.schema.Variant.VariantCallEffect result = new bmeg.gaea.schema.Variant.VariantCallEffect(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        result.source_ = source_;
        result.feature_ = feature_;
        result.variantClassification_ = variantClassification_;
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          domains_ = domains_.getUnmodifiableView();
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.domains_ = domains_;
        result.dbsnpRS_ = dbsnpRS_;
        result.dbsnpValStatus_ = dbsnpValStatus_;
        result.info_ = internalGetInfo();
        result.info_.makeImmutable();
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof bmeg.gaea.schema.Variant.VariantCallEffect) {
          return mergeFrom((bmeg.gaea.schema.Variant.VariantCallEffect)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(bmeg.gaea.schema.Variant.VariantCallEffect other) {
        if (other == bmeg.gaea.schema.Variant.VariantCallEffect.getDefaultInstance()) return this;
        if (!other.getSource().isEmpty()) {
          source_ = other.source_;
          onChanged();
        }
        if (!other.getFeature().isEmpty()) {
          feature_ = other.feature_;
          onChanged();
        }
        if (!other.getVariantClassification().isEmpty()) {
          variantClassification_ = other.variantClassification_;
          onChanged();
        }
        if (!other.domains_.isEmpty()) {
          if (domains_.isEmpty()) {
            domains_ = other.domains_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureDomainsIsMutable();
            domains_.addAll(other.domains_);
          }
          onChanged();
        }
        if (!other.getDbsnpRS().isEmpty()) {
          dbsnpRS_ = other.dbsnpRS_;
          onChanged();
        }
        if (!other.getDbsnpValStatus().isEmpty()) {
          dbsnpValStatus_ = other.dbsnpValStatus_;
          onChanged();
        }
        internalGetMutableInfo().mergeFrom(
            other.internalGetInfo());
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        bmeg.gaea.schema.Variant.VariantCallEffect parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (bmeg.gaea.schema.Variant.VariantCallEffect) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object source_ = "";
      /**
       * <code>optional string source = 1;</code>
       */
      public java.lang.String getSource() {
        java.lang.Object ref = source_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          source_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string source = 1;</code>
       */
      public com.google.protobuf.ByteString
          getSourceBytes() {
        java.lang.Object ref = source_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          source_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string source = 1;</code>
       */
      public Builder setSource(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        source_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string source = 1;</code>
       */
      public Builder clearSource() {
        
        source_ = getDefaultInstance().getSource();
        onChanged();
        return this;
      }
      /**
       * <code>optional string source = 1;</code>
       */
      public Builder setSourceBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        source_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object feature_ = "";
      /**
       * <code>optional string feature = 2;</code>
       *
       * <pre>
       * The feature can mean either the gene or the protein this variant is associated with.
       * </pre>
       */
      public java.lang.String getFeature() {
        java.lang.Object ref = feature_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          feature_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string feature = 2;</code>
       *
       * <pre>
       * The feature can mean either the gene or the protein this variant is associated with.
       * </pre>
       */
      public com.google.protobuf.ByteString
          getFeatureBytes() {
        java.lang.Object ref = feature_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          feature_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string feature = 2;</code>
       *
       * <pre>
       * The feature can mean either the gene or the protein this variant is associated with.
       * </pre>
       */
      public Builder setFeature(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        feature_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string feature = 2;</code>
       *
       * <pre>
       * The feature can mean either the gene or the protein this variant is associated with.
       * </pre>
       */
      public Builder clearFeature() {
        
        feature_ = getDefaultInstance().getFeature();
        onChanged();
        return this;
      }
      /**
       * <code>optional string feature = 2;</code>
       *
       * <pre>
       * The feature can mean either the gene or the protein this variant is associated with.
       * </pre>
       */
      public Builder setFeatureBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        feature_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object variantClassification_ = "";
      /**
       * <code>optional string variantClassification = 3;</code>
       */
      public java.lang.String getVariantClassification() {
        java.lang.Object ref = variantClassification_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          variantClassification_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string variantClassification = 3;</code>
       */
      public com.google.protobuf.ByteString
          getVariantClassificationBytes() {
        java.lang.Object ref = variantClassification_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          variantClassification_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string variantClassification = 3;</code>
       */
      public Builder setVariantClassification(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        variantClassification_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string variantClassification = 3;</code>
       */
      public Builder clearVariantClassification() {
        
        variantClassification_ = getDefaultInstance().getVariantClassification();
        onChanged();
        return this;
      }
      /**
       * <code>optional string variantClassification = 3;</code>
       */
      public Builder setVariantClassificationBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        variantClassification_ = value;
        onChanged();
        return this;
      }

      private com.google.protobuf.LazyStringList domains_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureDomainsIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          domains_ = new com.google.protobuf.LazyStringArrayList(domains_);
          bitField0_ |= 0x00000008;
         }
      }
      /**
       * <code>repeated string domains = 4;</code>
       */
      public com.google.protobuf.ProtocolStringList
          getDomainsList() {
        return domains_.getUnmodifiableView();
      }
      /**
       * <code>repeated string domains = 4;</code>
       */
      public int getDomainsCount() {
        return domains_.size();
      }
      /**
       * <code>repeated string domains = 4;</code>
       */
      public java.lang.String getDomains(int index) {
        return domains_.get(index);
      }
      /**
       * <code>repeated string domains = 4;</code>
       */
      public com.google.protobuf.ByteString
          getDomainsBytes(int index) {
        return domains_.getByteString(index);
      }
      /**
       * <code>repeated string domains = 4;</code>
       */
      public Builder setDomains(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureDomainsIsMutable();
        domains_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string domains = 4;</code>
       */
      public Builder addDomains(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureDomainsIsMutable();
        domains_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string domains = 4;</code>
       */
      public Builder addAllDomains(
          java.lang.Iterable<java.lang.String> values) {
        ensureDomainsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, domains_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string domains = 4;</code>
       */
      public Builder clearDomains() {
        domains_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string domains = 4;</code>
       */
      public Builder addDomainsBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        ensureDomainsIsMutable();
        domains_.add(value);
        onChanged();
        return this;
      }

      private java.lang.Object dbsnpRS_ = "";
      /**
       * <code>optional string dbsnpRS = 5;</code>
       */
      public java.lang.String getDbsnpRS() {
        java.lang.Object ref = dbsnpRS_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          dbsnpRS_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string dbsnpRS = 5;</code>
       */
      public com.google.protobuf.ByteString
          getDbsnpRSBytes() {
        java.lang.Object ref = dbsnpRS_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          dbsnpRS_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string dbsnpRS = 5;</code>
       */
      public Builder setDbsnpRS(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        dbsnpRS_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string dbsnpRS = 5;</code>
       */
      public Builder clearDbsnpRS() {
        
        dbsnpRS_ = getDefaultInstance().getDbsnpRS();
        onChanged();
        return this;
      }
      /**
       * <code>optional string dbsnpRS = 5;</code>
       */
      public Builder setDbsnpRSBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        dbsnpRS_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object dbsnpValStatus_ = "";
      /**
       * <code>optional string dbsnpValStatus = 6;</code>
       */
      public java.lang.String getDbsnpValStatus() {
        java.lang.Object ref = dbsnpValStatus_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          dbsnpValStatus_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string dbsnpValStatus = 6;</code>
       */
      public com.google.protobuf.ByteString
          getDbsnpValStatusBytes() {
        java.lang.Object ref = dbsnpValStatus_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          dbsnpValStatus_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string dbsnpValStatus = 6;</code>
       */
      public Builder setDbsnpValStatus(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        dbsnpValStatus_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string dbsnpValStatus = 6;</code>
       */
      public Builder clearDbsnpValStatus() {
        
        dbsnpValStatus_ = getDefaultInstance().getDbsnpValStatus();
        onChanged();
        return this;
      }
      /**
       * <code>optional string dbsnpValStatus = 6;</code>
       */
      public Builder setDbsnpValStatusBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        dbsnpValStatus_ = value;
        onChanged();
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.String, java.lang.String> info_;
      private com.google.protobuf.MapField<java.lang.String, java.lang.String>
      internalGetInfo() {
        if (info_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              InfoDefaultEntryHolder.defaultEntry);
       }
        return info_;
      }
      private com.google.protobuf.MapField<java.lang.String, java.lang.String>
      internalGetMutableInfo() {
        onChanged();;
        if (info_ == null) {
          info_ = com.google.protobuf.MapField.newMapField(
              InfoDefaultEntryHolder.defaultEntry);
        }
        if (!info_.isMutable()) {
          info_ = info_.copy();
        }
        return info_;
      }
      /**
       * <code>map&lt;string, string&gt; info = 7;</code>
       *
       * <pre>
       * For now, a placeholder field/data dump of maf file fields such as trvType, cPosition, and aminoAcidChange
       * (Might want to consider stealing HGVS annotation data structure from GA4GH for latter two)
       * </pre>
       */
      public java.util.Map<java.lang.String, java.lang.String> getInfo() {
        return internalGetInfo().getMap();
      }
      /**
       * <code>map&lt;string, string&gt; info = 7;</code>
       *
       * <pre>
       * For now, a placeholder field/data dump of maf file fields such as trvType, cPosition, and aminoAcidChange
       * (Might want to consider stealing HGVS annotation data structure from GA4GH for latter two)
       * </pre>
       */
      public java.util.Map<java.lang.String, java.lang.String>
      getMutableInfo() {
        return internalGetMutableInfo().getMutableMap();
      }
      /**
       * <code>map&lt;string, string&gt; info = 7;</code>
       *
       * <pre>
       * For now, a placeholder field/data dump of maf file fields such as trvType, cPosition, and aminoAcidChange
       * (Might want to consider stealing HGVS annotation data structure from GA4GH for latter two)
       * </pre>
       */
      public Builder putAllInfo(
          java.util.Map<java.lang.String, java.lang.String> values) {
        getMutableInfo().putAll(values);
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:bmeg.gaea.schema.VariantCallEffect)
    }

    // @@protoc_insertion_point(class_scope:bmeg.gaea.schema.VariantCallEffect)
    private static final bmeg.gaea.schema.Variant.VariantCallEffect DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new bmeg.gaea.schema.Variant.VariantCallEffect();
    }

    public static bmeg.gaea.schema.Variant.VariantCallEffect getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<VariantCallEffect>
        PARSER = new com.google.protobuf.AbstractParser<VariantCallEffect>() {
      public VariantCallEffect parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        try {
          return new VariantCallEffect(input, extensionRegistry);
        } catch (RuntimeException e) {
          if (e.getCause() instanceof
              com.google.protobuf.InvalidProtocolBufferException) {
            throw (com.google.protobuf.InvalidProtocolBufferException)
                e.getCause();
          }
          throw e;
        }
      }
    };

    public static com.google.protobuf.Parser<VariantCallEffect> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<VariantCallEffect> getParserForType() {
      return PARSER;
    }

    public bmeg.gaea.schema.Variant.VariantCallEffect getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface VariantCallOrBuilder extends
      // @@protoc_insertion_point(interface_extends:bmeg.gaea.schema.VariantCall)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional string source = 1;</code>
     *
     * <pre>
     * The source of this data
     * </pre>
     */
    java.lang.String getSource();
    /**
     * <code>optional string source = 1;</code>
     *
     * <pre>
     * The source of this data
     * </pre>
     */
    com.google.protobuf.ByteString
        getSourceBytes();

    /**
     * <code>optional .bmeg.gaea.schema.Position position = 2;</code>
     *
     * <pre>
     * where on the genome this variant occurred 
     * </pre>
     */
    boolean hasPosition();
    /**
     * <code>optional .bmeg.gaea.schema.Position position = 2;</code>
     *
     * <pre>
     * where on the genome this variant occurred 
     * </pre>
     */
    bmeg.gaea.schema.Variant.Position getPosition();
    /**
     * <code>optional .bmeg.gaea.schema.Position position = 2;</code>
     *
     * <pre>
     * where on the genome this variant occurred 
     * </pre>
     */
    bmeg.gaea.schema.Variant.PositionOrBuilder getPositionOrBuilder();

    /**
     * <code>optional string variantType = 3;</code>
     */
    java.lang.String getVariantType();
    /**
     * <code>optional string variantType = 3;</code>
     */
    com.google.protobuf.ByteString
        getVariantTypeBytes();

    /**
     * <code>optional string referenceAllele = 4;</code>
     *
     * <pre>
     * The reference bases for this variant. They start at the given start
     * position. e.g. "T"
     * </pre>
     */
    java.lang.String getReferenceAllele();
    /**
     * <code>optional string referenceAllele = 4;</code>
     *
     * <pre>
     * The reference bases for this variant. They start at the given start
     * position. e.g. "T"
     * </pre>
     */
    com.google.protobuf.ByteString
        getReferenceAlleleBytes();

    /**
     * <code>optional string normalAllele1 = 5;</code>
     *
     * <pre>
     * The normal alleles for this sample
     * </pre>
     */
    java.lang.String getNormalAllele1();
    /**
     * <code>optional string normalAllele1 = 5;</code>
     *
     * <pre>
     * The normal alleles for this sample
     * </pre>
     */
    com.google.protobuf.ByteString
        getNormalAllele1Bytes();

    /**
     * <code>optional string normalAllele2 = 6;</code>
     */
    java.lang.String getNormalAllele2();
    /**
     * <code>optional string normalAllele2 = 6;</code>
     */
    com.google.protobuf.ByteString
        getNormalAllele2Bytes();

    /**
     * <code>optional string tumorAllele1 = 7;</code>
     *
     * <pre>
     * The genotype of this variant call. GA4GH uses int32. Here it is a string.
     * </pre>
     */
    java.lang.String getTumorAllele1();
    /**
     * <code>optional string tumorAllele1 = 7;</code>
     *
     * <pre>
     * The genotype of this variant call. GA4GH uses int32. Here it is a string.
     * </pre>
     */
    com.google.protobuf.ByteString
        getTumorAllele1Bytes();

    /**
     * <code>optional string tumorAllele2 = 8;</code>
     */
    java.lang.String getTumorAllele2();
    /**
     * <code>optional string tumorAllele2 = 8;</code>
     */
    com.google.protobuf.ByteString
        getTumorAllele2Bytes();

    /**
     * <code>optional string sequencer = 9;</code>
     */
    java.lang.String getSequencer();
    /**
     * <code>optional string sequencer = 9;</code>
     */
    com.google.protobuf.ByteString
        getSequencerBytes();

    /**
     * <code>optional string tumorSampleUUID = 10;</code>
     */
    java.lang.String getTumorSampleUUID();
    /**
     * <code>optional string tumorSampleUUID = 10;</code>
     */
    com.google.protobuf.ByteString
        getTumorSampleUUIDBytes();

    /**
     * <code>optional string matchedNormSampleUUID = 11;</code>
     */
    java.lang.String getMatchedNormSampleUUID();
    /**
     * <code>optional string matchedNormSampleUUID = 11;</code>
     */
    com.google.protobuf.ByteString
        getMatchedNormSampleUUIDBytes();

    /**
     * <code>repeated .bmeg.gaea.schema.VariantCallEffect variantCallEffects = 12;</code>
     */
    java.util.List<bmeg.gaea.schema.Variant.VariantCallEffect> 
        getVariantCallEffectsList();
    /**
     * <code>repeated .bmeg.gaea.schema.VariantCallEffect variantCallEffects = 12;</code>
     */
    bmeg.gaea.schema.Variant.VariantCallEffect getVariantCallEffects(int index);
    /**
     * <code>repeated .bmeg.gaea.schema.VariantCallEffect variantCallEffects = 12;</code>
     */
    int getVariantCallEffectsCount();
    /**
     * <code>repeated .bmeg.gaea.schema.VariantCallEffect variantCallEffects = 12;</code>
     */
    java.util.List<? extends bmeg.gaea.schema.Variant.VariantCallEffectOrBuilder> 
        getVariantCallEffectsOrBuilderList();
    /**
     * <code>repeated .bmeg.gaea.schema.VariantCallEffect variantCallEffects = 12;</code>
     */
    bmeg.gaea.schema.Variant.VariantCallEffectOrBuilder getVariantCallEffectsOrBuilder(
        int index);

    /**
     * <code>map&lt;string, string&gt; info = 13;</code>
     *
     * <pre>
     * A map of additional variant call information, including a Feature Id for now...
     * </pre>
     */
    java.util.Map<java.lang.String, java.lang.String>
    getInfo();
  }
  /**
   * Protobuf type {@code bmeg.gaea.schema.VariantCall}
   *
   * <pre>
   * Here, a VariantCall is a combination of the 'Variant' and 'Call'
   * types in GA4GH. Therefore it contains information about 1) genomic location
   * (reserved for 'Variant' in GA4GH) and 2) a particular sample's genotype at that
   * location (reserved for `Call` in GA4GH). Sample-id in
   * GA4GH is contained within 'CallSet'. Here it is a VariantCall field.
   * Genomic location has been replaced by a 'Position' object.
   * </pre>
   */
  public  static final class VariantCall extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:bmeg.gaea.schema.VariantCall)
      VariantCallOrBuilder {
    // Use VariantCall.newBuilder() to construct.
    private VariantCall(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private VariantCall() {
      source_ = "";
      variantType_ = "";
      referenceAllele_ = "";
      normalAllele1_ = "";
      normalAllele2_ = "";
      tumorAllele1_ = "";
      tumorAllele2_ = "";
      sequencer_ = "";
      tumorSampleUUID_ = "";
      matchedNormSampleUUID_ = "";
      variantCallEffects_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private VariantCall(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry) {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              source_ = s;
              break;
            }
            case 18: {
              bmeg.gaea.schema.Variant.Position.Builder subBuilder = null;
              if (position_ != null) {
                subBuilder = position_.toBuilder();
              }
              position_ = input.readMessage(bmeg.gaea.schema.Variant.Position.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(position_);
                position_ = subBuilder.buildPartial();
              }

              break;
            }
            case 26: {
              java.lang.String s = input.readStringRequireUtf8();

              variantType_ = s;
              break;
            }
            case 34: {
              java.lang.String s = input.readStringRequireUtf8();

              referenceAllele_ = s;
              break;
            }
            case 42: {
              java.lang.String s = input.readStringRequireUtf8();

              normalAllele1_ = s;
              break;
            }
            case 50: {
              java.lang.String s = input.readStringRequireUtf8();

              normalAllele2_ = s;
              break;
            }
            case 58: {
              java.lang.String s = input.readStringRequireUtf8();

              tumorAllele1_ = s;
              break;
            }
            case 66: {
              java.lang.String s = input.readStringRequireUtf8();

              tumorAllele2_ = s;
              break;
            }
            case 74: {
              java.lang.String s = input.readStringRequireUtf8();

              sequencer_ = s;
              break;
            }
            case 82: {
              java.lang.String s = input.readStringRequireUtf8();

              tumorSampleUUID_ = s;
              break;
            }
            case 90: {
              java.lang.String s = input.readStringRequireUtf8();

              matchedNormSampleUUID_ = s;
              break;
            }
            case 98: {
              if (!((mutable_bitField0_ & 0x00000800) == 0x00000800)) {
                variantCallEffects_ = new java.util.ArrayList<bmeg.gaea.schema.Variant.VariantCallEffect>();
                mutable_bitField0_ |= 0x00000800;
              }
              variantCallEffects_.add(input.readMessage(bmeg.gaea.schema.Variant.VariantCallEffect.parser(), extensionRegistry));
              break;
            }
            case 106: {
              if (!((mutable_bitField0_ & 0x00001000) == 0x00001000)) {
                info_ = com.google.protobuf.MapField.newMapField(
                    InfoDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00001000;
              }
              com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
              info = input.readMessage(
                  InfoDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              info_.getMutableMap().put(info.getKey(), info.getValue());
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw new RuntimeException(e.setUnfinishedMessage(this));
      } catch (java.io.IOException e) {
        throw new RuntimeException(
            new com.google.protobuf.InvalidProtocolBufferException(
                e.getMessage()).setUnfinishedMessage(this));
      } finally {
        if (((mutable_bitField0_ & 0x00000800) == 0x00000800)) {
          variantCallEffects_ = java.util.Collections.unmodifiableList(variantCallEffects_);
        }
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return bmeg.gaea.schema.Variant.internal_static_bmeg_gaea_schema_VariantCall_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 13:
          return internalGetInfo();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return bmeg.gaea.schema.Variant.internal_static_bmeg_gaea_schema_VariantCall_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              bmeg.gaea.schema.Variant.VariantCall.class, bmeg.gaea.schema.Variant.VariantCall.Builder.class);
    }

    private int bitField0_;
    public static final int SOURCE_FIELD_NUMBER = 1;
    private volatile java.lang.Object source_;
    /**
     * <code>optional string source = 1;</code>
     *
     * <pre>
     * The source of this data
     * </pre>
     */
    public java.lang.String getSource() {
      java.lang.Object ref = source_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        source_ = s;
        return s;
      }
    }
    /**
     * <code>optional string source = 1;</code>
     *
     * <pre>
     * The source of this data
     * </pre>
     */
    public com.google.protobuf.ByteString
        getSourceBytes() {
      java.lang.Object ref = source_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        source_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int POSITION_FIELD_NUMBER = 2;
    private bmeg.gaea.schema.Variant.Position position_;
    /**
     * <code>optional .bmeg.gaea.schema.Position position = 2;</code>
     *
     * <pre>
     * where on the genome this variant occurred 
     * </pre>
     */
    public boolean hasPosition() {
      return position_ != null;
    }
    /**
     * <code>optional .bmeg.gaea.schema.Position position = 2;</code>
     *
     * <pre>
     * where on the genome this variant occurred 
     * </pre>
     */
    public bmeg.gaea.schema.Variant.Position getPosition() {
      return position_ == null ? bmeg.gaea.schema.Variant.Position.getDefaultInstance() : position_;
    }
    /**
     * <code>optional .bmeg.gaea.schema.Position position = 2;</code>
     *
     * <pre>
     * where on the genome this variant occurred 
     * </pre>
     */
    public bmeg.gaea.schema.Variant.PositionOrBuilder getPositionOrBuilder() {
      return getPosition();
    }

    public static final int VARIANTTYPE_FIELD_NUMBER = 3;
    private volatile java.lang.Object variantType_;
    /**
     * <code>optional string variantType = 3;</code>
     */
    public java.lang.String getVariantType() {
      java.lang.Object ref = variantType_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        variantType_ = s;
        return s;
      }
    }
    /**
     * <code>optional string variantType = 3;</code>
     */
    public com.google.protobuf.ByteString
        getVariantTypeBytes() {
      java.lang.Object ref = variantType_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        variantType_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int REFERENCEALLELE_FIELD_NUMBER = 4;
    private volatile java.lang.Object referenceAllele_;
    /**
     * <code>optional string referenceAllele = 4;</code>
     *
     * <pre>
     * The reference bases for this variant. They start at the given start
     * position. e.g. "T"
     * </pre>
     */
    public java.lang.String getReferenceAllele() {
      java.lang.Object ref = referenceAllele_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        referenceAllele_ = s;
        return s;
      }
    }
    /**
     * <code>optional string referenceAllele = 4;</code>
     *
     * <pre>
     * The reference bases for this variant. They start at the given start
     * position. e.g. "T"
     * </pre>
     */
    public com.google.protobuf.ByteString
        getReferenceAlleleBytes() {
      java.lang.Object ref = referenceAllele_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        referenceAllele_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int NORMALALLELE1_FIELD_NUMBER = 5;
    private volatile java.lang.Object normalAllele1_;
    /**
     * <code>optional string normalAllele1 = 5;</code>
     *
     * <pre>
     * The normal alleles for this sample
     * </pre>
     */
    public java.lang.String getNormalAllele1() {
      java.lang.Object ref = normalAllele1_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        normalAllele1_ = s;
        return s;
      }
    }
    /**
     * <code>optional string normalAllele1 = 5;</code>
     *
     * <pre>
     * The normal alleles for this sample
     * </pre>
     */
    public com.google.protobuf.ByteString
        getNormalAllele1Bytes() {
      java.lang.Object ref = normalAllele1_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        normalAllele1_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int NORMALALLELE2_FIELD_NUMBER = 6;
    private volatile java.lang.Object normalAllele2_;
    /**
     * <code>optional string normalAllele2 = 6;</code>
     */
    public java.lang.String getNormalAllele2() {
      java.lang.Object ref = normalAllele2_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        normalAllele2_ = s;
        return s;
      }
    }
    /**
     * <code>optional string normalAllele2 = 6;</code>
     */
    public com.google.protobuf.ByteString
        getNormalAllele2Bytes() {
      java.lang.Object ref = normalAllele2_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        normalAllele2_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int TUMORALLELE1_FIELD_NUMBER = 7;
    private volatile java.lang.Object tumorAllele1_;
    /**
     * <code>optional string tumorAllele1 = 7;</code>
     *
     * <pre>
     * The genotype of this variant call. GA4GH uses int32. Here it is a string.
     * </pre>
     */
    public java.lang.String getTumorAllele1() {
      java.lang.Object ref = tumorAllele1_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        tumorAllele1_ = s;
        return s;
      }
    }
    /**
     * <code>optional string tumorAllele1 = 7;</code>
     *
     * <pre>
     * The genotype of this variant call. GA4GH uses int32. Here it is a string.
     * </pre>
     */
    public com.google.protobuf.ByteString
        getTumorAllele1Bytes() {
      java.lang.Object ref = tumorAllele1_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        tumorAllele1_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int TUMORALLELE2_FIELD_NUMBER = 8;
    private volatile java.lang.Object tumorAllele2_;
    /**
     * <code>optional string tumorAllele2 = 8;</code>
     */
    public java.lang.String getTumorAllele2() {
      java.lang.Object ref = tumorAllele2_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        tumorAllele2_ = s;
        return s;
      }
    }
    /**
     * <code>optional string tumorAllele2 = 8;</code>
     */
    public com.google.protobuf.ByteString
        getTumorAllele2Bytes() {
      java.lang.Object ref = tumorAllele2_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        tumorAllele2_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SEQUENCER_FIELD_NUMBER = 9;
    private volatile java.lang.Object sequencer_;
    /**
     * <code>optional string sequencer = 9;</code>
     */
    public java.lang.String getSequencer() {
      java.lang.Object ref = sequencer_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        sequencer_ = s;
        return s;
      }
    }
    /**
     * <code>optional string sequencer = 9;</code>
     */
    public com.google.protobuf.ByteString
        getSequencerBytes() {
      java.lang.Object ref = sequencer_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        sequencer_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int TUMORSAMPLEUUID_FIELD_NUMBER = 10;
    private volatile java.lang.Object tumorSampleUUID_;
    /**
     * <code>optional string tumorSampleUUID = 10;</code>
     */
    public java.lang.String getTumorSampleUUID() {
      java.lang.Object ref = tumorSampleUUID_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        tumorSampleUUID_ = s;
        return s;
      }
    }
    /**
     * <code>optional string tumorSampleUUID = 10;</code>
     */
    public com.google.protobuf.ByteString
        getTumorSampleUUIDBytes() {
      java.lang.Object ref = tumorSampleUUID_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        tumorSampleUUID_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int MATCHEDNORMSAMPLEUUID_FIELD_NUMBER = 11;
    private volatile java.lang.Object matchedNormSampleUUID_;
    /**
     * <code>optional string matchedNormSampleUUID = 11;</code>
     */
    public java.lang.String getMatchedNormSampleUUID() {
      java.lang.Object ref = matchedNormSampleUUID_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        matchedNormSampleUUID_ = s;
        return s;
      }
    }
    /**
     * <code>optional string matchedNormSampleUUID = 11;</code>
     */
    public com.google.protobuf.ByteString
        getMatchedNormSampleUUIDBytes() {
      java.lang.Object ref = matchedNormSampleUUID_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        matchedNormSampleUUID_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int VARIANTCALLEFFECTS_FIELD_NUMBER = 12;
    private java.util.List<bmeg.gaea.schema.Variant.VariantCallEffect> variantCallEffects_;
    /**
     * <code>repeated .bmeg.gaea.schema.VariantCallEffect variantCallEffects = 12;</code>
     */
    public java.util.List<bmeg.gaea.schema.Variant.VariantCallEffect> getVariantCallEffectsList() {
      return variantCallEffects_;
    }
    /**
     * <code>repeated .bmeg.gaea.schema.VariantCallEffect variantCallEffects = 12;</code>
     */
    public java.util.List<? extends bmeg.gaea.schema.Variant.VariantCallEffectOrBuilder> 
        getVariantCallEffectsOrBuilderList() {
      return variantCallEffects_;
    }
    /**
     * <code>repeated .bmeg.gaea.schema.VariantCallEffect variantCallEffects = 12;</code>
     */
    public int getVariantCallEffectsCount() {
      return variantCallEffects_.size();
    }
    /**
     * <code>repeated .bmeg.gaea.schema.VariantCallEffect variantCallEffects = 12;</code>
     */
    public bmeg.gaea.schema.Variant.VariantCallEffect getVariantCallEffects(int index) {
      return variantCallEffects_.get(index);
    }
    /**
     * <code>repeated .bmeg.gaea.schema.VariantCallEffect variantCallEffects = 12;</code>
     */
    public bmeg.gaea.schema.Variant.VariantCallEffectOrBuilder getVariantCallEffectsOrBuilder(
        int index) {
      return variantCallEffects_.get(index);
    }

    public static final int INFO_FIELD_NUMBER = 13;
    private static final class InfoDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.String, java.lang.String> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.String, java.lang.String>newDefaultInstance(
                  bmeg.gaea.schema.Variant.internal_static_bmeg_gaea_schema_VariantCall_InfoEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "",
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "");
    }
    private com.google.protobuf.MapField<
        java.lang.String, java.lang.String> info_;
    private com.google.protobuf.MapField<java.lang.String, java.lang.String>
    internalGetInfo() {
      if (info_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            InfoDefaultEntryHolder.defaultEntry);
     }
      return info_;
    }
    /**
     * <code>map&lt;string, string&gt; info = 13;</code>
     *
     * <pre>
     * A map of additional variant call information, including a Feature Id for now...
     * </pre>
     */

    public java.util.Map<java.lang.String, java.lang.String> getInfo() {
      return internalGetInfo().getMap();
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getSourceBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessage.writeString(output, 1, source_);
      }
      if (position_ != null) {
        output.writeMessage(2, getPosition());
      }
      if (!getVariantTypeBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessage.writeString(output, 3, variantType_);
      }
      if (!getReferenceAlleleBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessage.writeString(output, 4, referenceAllele_);
      }
      if (!getNormalAllele1Bytes().isEmpty()) {
        com.google.protobuf.GeneratedMessage.writeString(output, 5, normalAllele1_);
      }
      if (!getNormalAllele2Bytes().isEmpty()) {
        com.google.protobuf.GeneratedMessage.writeString(output, 6, normalAllele2_);
      }
      if (!getTumorAllele1Bytes().isEmpty()) {
        com.google.protobuf.GeneratedMessage.writeString(output, 7, tumorAllele1_);
      }
      if (!getTumorAllele2Bytes().isEmpty()) {
        com.google.protobuf.GeneratedMessage.writeString(output, 8, tumorAllele2_);
      }
      if (!getSequencerBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessage.writeString(output, 9, sequencer_);
      }
      if (!getTumorSampleUUIDBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessage.writeString(output, 10, tumorSampleUUID_);
      }
      if (!getMatchedNormSampleUUIDBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessage.writeString(output, 11, matchedNormSampleUUID_);
      }
      for (int i = 0; i < variantCallEffects_.size(); i++) {
        output.writeMessage(12, variantCallEffects_.get(i));
      }
      for (java.util.Map.Entry<java.lang.String, java.lang.String> entry
           : internalGetInfo().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
        info = InfoDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        output.writeMessage(13, info);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getSourceBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(1, source_);
      }
      if (position_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getPosition());
      }
      if (!getVariantTypeBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(3, variantType_);
      }
      if (!getReferenceAlleleBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(4, referenceAllele_);
      }
      if (!getNormalAllele1Bytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(5, normalAllele1_);
      }
      if (!getNormalAllele2Bytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(6, normalAllele2_);
      }
      if (!getTumorAllele1Bytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(7, tumorAllele1_);
      }
      if (!getTumorAllele2Bytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(8, tumorAllele2_);
      }
      if (!getSequencerBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(9, sequencer_);
      }
      if (!getTumorSampleUUIDBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(10, tumorSampleUUID_);
      }
      if (!getMatchedNormSampleUUIDBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(11, matchedNormSampleUUID_);
      }
      for (int i = 0; i < variantCallEffects_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(12, variantCallEffects_.get(i));
      }
      for (java.util.Map.Entry<java.lang.String, java.lang.String> entry
           : internalGetInfo().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
        info = InfoDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(13, info);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    public static bmeg.gaea.schema.Variant.VariantCall parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static bmeg.gaea.schema.Variant.VariantCall parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static bmeg.gaea.schema.Variant.VariantCall parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static bmeg.gaea.schema.Variant.VariantCall parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static bmeg.gaea.schema.Variant.VariantCall parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static bmeg.gaea.schema.Variant.VariantCall parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static bmeg.gaea.schema.Variant.VariantCall parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static bmeg.gaea.schema.Variant.VariantCall parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static bmeg.gaea.schema.Variant.VariantCall parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static bmeg.gaea.schema.Variant.VariantCall parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(bmeg.gaea.schema.Variant.VariantCall prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code bmeg.gaea.schema.VariantCall}
     *
     * <pre>
     * Here, a VariantCall is a combination of the 'Variant' and 'Call'
     * types in GA4GH. Therefore it contains information about 1) genomic location
     * (reserved for 'Variant' in GA4GH) and 2) a particular sample's genotype at that
     * location (reserved for `Call` in GA4GH). Sample-id in
     * GA4GH is contained within 'CallSet'. Here it is a VariantCall field.
     * Genomic location has been replaced by a 'Position' object.
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:bmeg.gaea.schema.VariantCall)
        bmeg.gaea.schema.Variant.VariantCallOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return bmeg.gaea.schema.Variant.internal_static_bmeg_gaea_schema_VariantCall_descriptor;
      }

      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMapField(
          int number) {
        switch (number) {
          case 13:
            return internalGetInfo();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMutableMapField(
          int number) {
        switch (number) {
          case 13:
            return internalGetMutableInfo();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return bmeg.gaea.schema.Variant.internal_static_bmeg_gaea_schema_VariantCall_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                bmeg.gaea.schema.Variant.VariantCall.class, bmeg.gaea.schema.Variant.VariantCall.Builder.class);
      }

      // Construct using bmeg.gaea.schema.Variant.VariantCall.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getVariantCallEffectsFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        source_ = "";

        if (positionBuilder_ == null) {
          position_ = null;
        } else {
          position_ = null;
          positionBuilder_ = null;
        }
        variantType_ = "";

        referenceAllele_ = "";

        normalAllele1_ = "";

        normalAllele2_ = "";

        tumorAllele1_ = "";

        tumorAllele2_ = "";

        sequencer_ = "";

        tumorSampleUUID_ = "";

        matchedNormSampleUUID_ = "";

        if (variantCallEffectsBuilder_ == null) {
          variantCallEffects_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000800);
        } else {
          variantCallEffectsBuilder_.clear();
        }
        internalGetMutableInfo().clear();
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return bmeg.gaea.schema.Variant.internal_static_bmeg_gaea_schema_VariantCall_descriptor;
      }

      public bmeg.gaea.schema.Variant.VariantCall getDefaultInstanceForType() {
        return bmeg.gaea.schema.Variant.VariantCall.getDefaultInstance();
      }

      public bmeg.gaea.schema.Variant.VariantCall build() {
        bmeg.gaea.schema.Variant.VariantCall result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public bmeg.gaea.schema.Variant.VariantCall buildPartial() {
        bmeg.gaea.schema.Variant.VariantCall result = new bmeg.gaea.schema.Variant.VariantCall(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        result.source_ = source_;
        if (positionBuilder_ == null) {
          result.position_ = position_;
        } else {
          result.position_ = positionBuilder_.build();
        }
        result.variantType_ = variantType_;
        result.referenceAllele_ = referenceAllele_;
        result.normalAllele1_ = normalAllele1_;
        result.normalAllele2_ = normalAllele2_;
        result.tumorAllele1_ = tumorAllele1_;
        result.tumorAllele2_ = tumorAllele2_;
        result.sequencer_ = sequencer_;
        result.tumorSampleUUID_ = tumorSampleUUID_;
        result.matchedNormSampleUUID_ = matchedNormSampleUUID_;
        if (variantCallEffectsBuilder_ == null) {
          if (((bitField0_ & 0x00000800) == 0x00000800)) {
            variantCallEffects_ = java.util.Collections.unmodifiableList(variantCallEffects_);
            bitField0_ = (bitField0_ & ~0x00000800);
          }
          result.variantCallEffects_ = variantCallEffects_;
        } else {
          result.variantCallEffects_ = variantCallEffectsBuilder_.build();
        }
        result.info_ = internalGetInfo();
        result.info_.makeImmutable();
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof bmeg.gaea.schema.Variant.VariantCall) {
          return mergeFrom((bmeg.gaea.schema.Variant.VariantCall)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(bmeg.gaea.schema.Variant.VariantCall other) {
        if (other == bmeg.gaea.schema.Variant.VariantCall.getDefaultInstance()) return this;
        if (!other.getSource().isEmpty()) {
          source_ = other.source_;
          onChanged();
        }
        if (other.hasPosition()) {
          mergePosition(other.getPosition());
        }
        if (!other.getVariantType().isEmpty()) {
          variantType_ = other.variantType_;
          onChanged();
        }
        if (!other.getReferenceAllele().isEmpty()) {
          referenceAllele_ = other.referenceAllele_;
          onChanged();
        }
        if (!other.getNormalAllele1().isEmpty()) {
          normalAllele1_ = other.normalAllele1_;
          onChanged();
        }
        if (!other.getNormalAllele2().isEmpty()) {
          normalAllele2_ = other.normalAllele2_;
          onChanged();
        }
        if (!other.getTumorAllele1().isEmpty()) {
          tumorAllele1_ = other.tumorAllele1_;
          onChanged();
        }
        if (!other.getTumorAllele2().isEmpty()) {
          tumorAllele2_ = other.tumorAllele2_;
          onChanged();
        }
        if (!other.getSequencer().isEmpty()) {
          sequencer_ = other.sequencer_;
          onChanged();
        }
        if (!other.getTumorSampleUUID().isEmpty()) {
          tumorSampleUUID_ = other.tumorSampleUUID_;
          onChanged();
        }
        if (!other.getMatchedNormSampleUUID().isEmpty()) {
          matchedNormSampleUUID_ = other.matchedNormSampleUUID_;
          onChanged();
        }
        if (variantCallEffectsBuilder_ == null) {
          if (!other.variantCallEffects_.isEmpty()) {
            if (variantCallEffects_.isEmpty()) {
              variantCallEffects_ = other.variantCallEffects_;
              bitField0_ = (bitField0_ & ~0x00000800);
            } else {
              ensureVariantCallEffectsIsMutable();
              variantCallEffects_.addAll(other.variantCallEffects_);
            }
            onChanged();
          }
        } else {
          if (!other.variantCallEffects_.isEmpty()) {
            if (variantCallEffectsBuilder_.isEmpty()) {
              variantCallEffectsBuilder_.dispose();
              variantCallEffectsBuilder_ = null;
              variantCallEffects_ = other.variantCallEffects_;
              bitField0_ = (bitField0_ & ~0x00000800);
              variantCallEffectsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getVariantCallEffectsFieldBuilder() : null;
            } else {
              variantCallEffectsBuilder_.addAllMessages(other.variantCallEffects_);
            }
          }
        }
        internalGetMutableInfo().mergeFrom(
            other.internalGetInfo());
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        bmeg.gaea.schema.Variant.VariantCall parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (bmeg.gaea.schema.Variant.VariantCall) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object source_ = "";
      /**
       * <code>optional string source = 1;</code>
       *
       * <pre>
       * The source of this data
       * </pre>
       */
      public java.lang.String getSource() {
        java.lang.Object ref = source_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          source_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string source = 1;</code>
       *
       * <pre>
       * The source of this data
       * </pre>
       */
      public com.google.protobuf.ByteString
          getSourceBytes() {
        java.lang.Object ref = source_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          source_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string source = 1;</code>
       *
       * <pre>
       * The source of this data
       * </pre>
       */
      public Builder setSource(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        source_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string source = 1;</code>
       *
       * <pre>
       * The source of this data
       * </pre>
       */
      public Builder clearSource() {
        
        source_ = getDefaultInstance().getSource();
        onChanged();
        return this;
      }
      /**
       * <code>optional string source = 1;</code>
       *
       * <pre>
       * The source of this data
       * </pre>
       */
      public Builder setSourceBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        source_ = value;
        onChanged();
        return this;
      }

      private bmeg.gaea.schema.Variant.Position position_ = null;
      private com.google.protobuf.SingleFieldBuilder<
          bmeg.gaea.schema.Variant.Position, bmeg.gaea.schema.Variant.Position.Builder, bmeg.gaea.schema.Variant.PositionOrBuilder> positionBuilder_;
      /**
       * <code>optional .bmeg.gaea.schema.Position position = 2;</code>
       *
       * <pre>
       * where on the genome this variant occurred 
       * </pre>
       */
      public boolean hasPosition() {
        return positionBuilder_ != null || position_ != null;
      }
      /**
       * <code>optional .bmeg.gaea.schema.Position position = 2;</code>
       *
       * <pre>
       * where on the genome this variant occurred 
       * </pre>
       */
      public bmeg.gaea.schema.Variant.Position getPosition() {
        if (positionBuilder_ == null) {
          return position_ == null ? bmeg.gaea.schema.Variant.Position.getDefaultInstance() : position_;
        } else {
          return positionBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .bmeg.gaea.schema.Position position = 2;</code>
       *
       * <pre>
       * where on the genome this variant occurred 
       * </pre>
       */
      public Builder setPosition(bmeg.gaea.schema.Variant.Position value) {
        if (positionBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          position_ = value;
          onChanged();
        } else {
          positionBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>optional .bmeg.gaea.schema.Position position = 2;</code>
       *
       * <pre>
       * where on the genome this variant occurred 
       * </pre>
       */
      public Builder setPosition(
          bmeg.gaea.schema.Variant.Position.Builder builderForValue) {
        if (positionBuilder_ == null) {
          position_ = builderForValue.build();
          onChanged();
        } else {
          positionBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>optional .bmeg.gaea.schema.Position position = 2;</code>
       *
       * <pre>
       * where on the genome this variant occurred 
       * </pre>
       */
      public Builder mergePosition(bmeg.gaea.schema.Variant.Position value) {
        if (positionBuilder_ == null) {
          if (position_ != null) {
            position_ =
              bmeg.gaea.schema.Variant.Position.newBuilder(position_).mergeFrom(value).buildPartial();
          } else {
            position_ = value;
          }
          onChanged();
        } else {
          positionBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>optional .bmeg.gaea.schema.Position position = 2;</code>
       *
       * <pre>
       * where on the genome this variant occurred 
       * </pre>
       */
      public Builder clearPosition() {
        if (positionBuilder_ == null) {
          position_ = null;
          onChanged();
        } else {
          position_ = null;
          positionBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>optional .bmeg.gaea.schema.Position position = 2;</code>
       *
       * <pre>
       * where on the genome this variant occurred 
       * </pre>
       */
      public bmeg.gaea.schema.Variant.Position.Builder getPositionBuilder() {
        
        onChanged();
        return getPositionFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .bmeg.gaea.schema.Position position = 2;</code>
       *
       * <pre>
       * where on the genome this variant occurred 
       * </pre>
       */
      public bmeg.gaea.schema.Variant.PositionOrBuilder getPositionOrBuilder() {
        if (positionBuilder_ != null) {
          return positionBuilder_.getMessageOrBuilder();
        } else {
          return position_ == null ?
              bmeg.gaea.schema.Variant.Position.getDefaultInstance() : position_;
        }
      }
      /**
       * <code>optional .bmeg.gaea.schema.Position position = 2;</code>
       *
       * <pre>
       * where on the genome this variant occurred 
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          bmeg.gaea.schema.Variant.Position, bmeg.gaea.schema.Variant.Position.Builder, bmeg.gaea.schema.Variant.PositionOrBuilder> 
          getPositionFieldBuilder() {
        if (positionBuilder_ == null) {
          positionBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              bmeg.gaea.schema.Variant.Position, bmeg.gaea.schema.Variant.Position.Builder, bmeg.gaea.schema.Variant.PositionOrBuilder>(
                  getPosition(),
                  getParentForChildren(),
                  isClean());
          position_ = null;
        }
        return positionBuilder_;
      }

      private java.lang.Object variantType_ = "";
      /**
       * <code>optional string variantType = 3;</code>
       */
      public java.lang.String getVariantType() {
        java.lang.Object ref = variantType_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          variantType_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string variantType = 3;</code>
       */
      public com.google.protobuf.ByteString
          getVariantTypeBytes() {
        java.lang.Object ref = variantType_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          variantType_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string variantType = 3;</code>
       */
      public Builder setVariantType(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        variantType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string variantType = 3;</code>
       */
      public Builder clearVariantType() {
        
        variantType_ = getDefaultInstance().getVariantType();
        onChanged();
        return this;
      }
      /**
       * <code>optional string variantType = 3;</code>
       */
      public Builder setVariantTypeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        variantType_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object referenceAllele_ = "";
      /**
       * <code>optional string referenceAllele = 4;</code>
       *
       * <pre>
       * The reference bases for this variant. They start at the given start
       * position. e.g. "T"
       * </pre>
       */
      public java.lang.String getReferenceAllele() {
        java.lang.Object ref = referenceAllele_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          referenceAllele_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string referenceAllele = 4;</code>
       *
       * <pre>
       * The reference bases for this variant. They start at the given start
       * position. e.g. "T"
       * </pre>
       */
      public com.google.protobuf.ByteString
          getReferenceAlleleBytes() {
        java.lang.Object ref = referenceAllele_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          referenceAllele_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string referenceAllele = 4;</code>
       *
       * <pre>
       * The reference bases for this variant. They start at the given start
       * position. e.g. "T"
       * </pre>
       */
      public Builder setReferenceAllele(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        referenceAllele_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string referenceAllele = 4;</code>
       *
       * <pre>
       * The reference bases for this variant. They start at the given start
       * position. e.g. "T"
       * </pre>
       */
      public Builder clearReferenceAllele() {
        
        referenceAllele_ = getDefaultInstance().getReferenceAllele();
        onChanged();
        return this;
      }
      /**
       * <code>optional string referenceAllele = 4;</code>
       *
       * <pre>
       * The reference bases for this variant. They start at the given start
       * position. e.g. "T"
       * </pre>
       */
      public Builder setReferenceAlleleBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        referenceAllele_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object normalAllele1_ = "";
      /**
       * <code>optional string normalAllele1 = 5;</code>
       *
       * <pre>
       * The normal alleles for this sample
       * </pre>
       */
      public java.lang.String getNormalAllele1() {
        java.lang.Object ref = normalAllele1_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          normalAllele1_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string normalAllele1 = 5;</code>
       *
       * <pre>
       * The normal alleles for this sample
       * </pre>
       */
      public com.google.protobuf.ByteString
          getNormalAllele1Bytes() {
        java.lang.Object ref = normalAllele1_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          normalAllele1_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string normalAllele1 = 5;</code>
       *
       * <pre>
       * The normal alleles for this sample
       * </pre>
       */
      public Builder setNormalAllele1(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        normalAllele1_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string normalAllele1 = 5;</code>
       *
       * <pre>
       * The normal alleles for this sample
       * </pre>
       */
      public Builder clearNormalAllele1() {
        
        normalAllele1_ = getDefaultInstance().getNormalAllele1();
        onChanged();
        return this;
      }
      /**
       * <code>optional string normalAllele1 = 5;</code>
       *
       * <pre>
       * The normal alleles for this sample
       * </pre>
       */
      public Builder setNormalAllele1Bytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        normalAllele1_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object normalAllele2_ = "";
      /**
       * <code>optional string normalAllele2 = 6;</code>
       */
      public java.lang.String getNormalAllele2() {
        java.lang.Object ref = normalAllele2_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          normalAllele2_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string normalAllele2 = 6;</code>
       */
      public com.google.protobuf.ByteString
          getNormalAllele2Bytes() {
        java.lang.Object ref = normalAllele2_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          normalAllele2_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string normalAllele2 = 6;</code>
       */
      public Builder setNormalAllele2(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        normalAllele2_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string normalAllele2 = 6;</code>
       */
      public Builder clearNormalAllele2() {
        
        normalAllele2_ = getDefaultInstance().getNormalAllele2();
        onChanged();
        return this;
      }
      /**
       * <code>optional string normalAllele2 = 6;</code>
       */
      public Builder setNormalAllele2Bytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        normalAllele2_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object tumorAllele1_ = "";
      /**
       * <code>optional string tumorAllele1 = 7;</code>
       *
       * <pre>
       * The genotype of this variant call. GA4GH uses int32. Here it is a string.
       * </pre>
       */
      public java.lang.String getTumorAllele1() {
        java.lang.Object ref = tumorAllele1_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          tumorAllele1_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string tumorAllele1 = 7;</code>
       *
       * <pre>
       * The genotype of this variant call. GA4GH uses int32. Here it is a string.
       * </pre>
       */
      public com.google.protobuf.ByteString
          getTumorAllele1Bytes() {
        java.lang.Object ref = tumorAllele1_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          tumorAllele1_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string tumorAllele1 = 7;</code>
       *
       * <pre>
       * The genotype of this variant call. GA4GH uses int32. Here it is a string.
       * </pre>
       */
      public Builder setTumorAllele1(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        tumorAllele1_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string tumorAllele1 = 7;</code>
       *
       * <pre>
       * The genotype of this variant call. GA4GH uses int32. Here it is a string.
       * </pre>
       */
      public Builder clearTumorAllele1() {
        
        tumorAllele1_ = getDefaultInstance().getTumorAllele1();
        onChanged();
        return this;
      }
      /**
       * <code>optional string tumorAllele1 = 7;</code>
       *
       * <pre>
       * The genotype of this variant call. GA4GH uses int32. Here it is a string.
       * </pre>
       */
      public Builder setTumorAllele1Bytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        tumorAllele1_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object tumorAllele2_ = "";
      /**
       * <code>optional string tumorAllele2 = 8;</code>
       */
      public java.lang.String getTumorAllele2() {
        java.lang.Object ref = tumorAllele2_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          tumorAllele2_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string tumorAllele2 = 8;</code>
       */
      public com.google.protobuf.ByteString
          getTumorAllele2Bytes() {
        java.lang.Object ref = tumorAllele2_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          tumorAllele2_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string tumorAllele2 = 8;</code>
       */
      public Builder setTumorAllele2(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        tumorAllele2_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string tumorAllele2 = 8;</code>
       */
      public Builder clearTumorAllele2() {
        
        tumorAllele2_ = getDefaultInstance().getTumorAllele2();
        onChanged();
        return this;
      }
      /**
       * <code>optional string tumorAllele2 = 8;</code>
       */
      public Builder setTumorAllele2Bytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        tumorAllele2_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object sequencer_ = "";
      /**
       * <code>optional string sequencer = 9;</code>
       */
      public java.lang.String getSequencer() {
        java.lang.Object ref = sequencer_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          sequencer_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string sequencer = 9;</code>
       */
      public com.google.protobuf.ByteString
          getSequencerBytes() {
        java.lang.Object ref = sequencer_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          sequencer_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string sequencer = 9;</code>
       */
      public Builder setSequencer(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        sequencer_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string sequencer = 9;</code>
       */
      public Builder clearSequencer() {
        
        sequencer_ = getDefaultInstance().getSequencer();
        onChanged();
        return this;
      }
      /**
       * <code>optional string sequencer = 9;</code>
       */
      public Builder setSequencerBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        sequencer_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object tumorSampleUUID_ = "";
      /**
       * <code>optional string tumorSampleUUID = 10;</code>
       */
      public java.lang.String getTumorSampleUUID() {
        java.lang.Object ref = tumorSampleUUID_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          tumorSampleUUID_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string tumorSampleUUID = 10;</code>
       */
      public com.google.protobuf.ByteString
          getTumorSampleUUIDBytes() {
        java.lang.Object ref = tumorSampleUUID_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          tumorSampleUUID_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string tumorSampleUUID = 10;</code>
       */
      public Builder setTumorSampleUUID(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        tumorSampleUUID_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string tumorSampleUUID = 10;</code>
       */
      public Builder clearTumorSampleUUID() {
        
        tumorSampleUUID_ = getDefaultInstance().getTumorSampleUUID();
        onChanged();
        return this;
      }
      /**
       * <code>optional string tumorSampleUUID = 10;</code>
       */
      public Builder setTumorSampleUUIDBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        tumorSampleUUID_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object matchedNormSampleUUID_ = "";
      /**
       * <code>optional string matchedNormSampleUUID = 11;</code>
       */
      public java.lang.String getMatchedNormSampleUUID() {
        java.lang.Object ref = matchedNormSampleUUID_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          matchedNormSampleUUID_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string matchedNormSampleUUID = 11;</code>
       */
      public com.google.protobuf.ByteString
          getMatchedNormSampleUUIDBytes() {
        java.lang.Object ref = matchedNormSampleUUID_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          matchedNormSampleUUID_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string matchedNormSampleUUID = 11;</code>
       */
      public Builder setMatchedNormSampleUUID(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        matchedNormSampleUUID_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string matchedNormSampleUUID = 11;</code>
       */
      public Builder clearMatchedNormSampleUUID() {
        
        matchedNormSampleUUID_ = getDefaultInstance().getMatchedNormSampleUUID();
        onChanged();
        return this;
      }
      /**
       * <code>optional string matchedNormSampleUUID = 11;</code>
       */
      public Builder setMatchedNormSampleUUIDBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        matchedNormSampleUUID_ = value;
        onChanged();
        return this;
      }

      private java.util.List<bmeg.gaea.schema.Variant.VariantCallEffect> variantCallEffects_ =
        java.util.Collections.emptyList();
      private void ensureVariantCallEffectsIsMutable() {
        if (!((bitField0_ & 0x00000800) == 0x00000800)) {
          variantCallEffects_ = new java.util.ArrayList<bmeg.gaea.schema.Variant.VariantCallEffect>(variantCallEffects_);
          bitField0_ |= 0x00000800;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          bmeg.gaea.schema.Variant.VariantCallEffect, bmeg.gaea.schema.Variant.VariantCallEffect.Builder, bmeg.gaea.schema.Variant.VariantCallEffectOrBuilder> variantCallEffectsBuilder_;

      /**
       * <code>repeated .bmeg.gaea.schema.VariantCallEffect variantCallEffects = 12;</code>
       */
      public java.util.List<bmeg.gaea.schema.Variant.VariantCallEffect> getVariantCallEffectsList() {
        if (variantCallEffectsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(variantCallEffects_);
        } else {
          return variantCallEffectsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .bmeg.gaea.schema.VariantCallEffect variantCallEffects = 12;</code>
       */
      public int getVariantCallEffectsCount() {
        if (variantCallEffectsBuilder_ == null) {
          return variantCallEffects_.size();
        } else {
          return variantCallEffectsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .bmeg.gaea.schema.VariantCallEffect variantCallEffects = 12;</code>
       */
      public bmeg.gaea.schema.Variant.VariantCallEffect getVariantCallEffects(int index) {
        if (variantCallEffectsBuilder_ == null) {
          return variantCallEffects_.get(index);
        } else {
          return variantCallEffectsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .bmeg.gaea.schema.VariantCallEffect variantCallEffects = 12;</code>
       */
      public Builder setVariantCallEffects(
          int index, bmeg.gaea.schema.Variant.VariantCallEffect value) {
        if (variantCallEffectsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureVariantCallEffectsIsMutable();
          variantCallEffects_.set(index, value);
          onChanged();
        } else {
          variantCallEffectsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .bmeg.gaea.schema.VariantCallEffect variantCallEffects = 12;</code>
       */
      public Builder setVariantCallEffects(
          int index, bmeg.gaea.schema.Variant.VariantCallEffect.Builder builderForValue) {
        if (variantCallEffectsBuilder_ == null) {
          ensureVariantCallEffectsIsMutable();
          variantCallEffects_.set(index, builderForValue.build());
          onChanged();
        } else {
          variantCallEffectsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .bmeg.gaea.schema.VariantCallEffect variantCallEffects = 12;</code>
       */
      public Builder addVariantCallEffects(bmeg.gaea.schema.Variant.VariantCallEffect value) {
        if (variantCallEffectsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureVariantCallEffectsIsMutable();
          variantCallEffects_.add(value);
          onChanged();
        } else {
          variantCallEffectsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .bmeg.gaea.schema.VariantCallEffect variantCallEffects = 12;</code>
       */
      public Builder addVariantCallEffects(
          int index, bmeg.gaea.schema.Variant.VariantCallEffect value) {
        if (variantCallEffectsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureVariantCallEffectsIsMutable();
          variantCallEffects_.add(index, value);
          onChanged();
        } else {
          variantCallEffectsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .bmeg.gaea.schema.VariantCallEffect variantCallEffects = 12;</code>
       */
      public Builder addVariantCallEffects(
          bmeg.gaea.schema.Variant.VariantCallEffect.Builder builderForValue) {
        if (variantCallEffectsBuilder_ == null) {
          ensureVariantCallEffectsIsMutable();
          variantCallEffects_.add(builderForValue.build());
          onChanged();
        } else {
          variantCallEffectsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .bmeg.gaea.schema.VariantCallEffect variantCallEffects = 12;</code>
       */
      public Builder addVariantCallEffects(
          int index, bmeg.gaea.schema.Variant.VariantCallEffect.Builder builderForValue) {
        if (variantCallEffectsBuilder_ == null) {
          ensureVariantCallEffectsIsMutable();
          variantCallEffects_.add(index, builderForValue.build());
          onChanged();
        } else {
          variantCallEffectsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .bmeg.gaea.schema.VariantCallEffect variantCallEffects = 12;</code>
       */
      public Builder addAllVariantCallEffects(
          java.lang.Iterable<? extends bmeg.gaea.schema.Variant.VariantCallEffect> values) {
        if (variantCallEffectsBuilder_ == null) {
          ensureVariantCallEffectsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, variantCallEffects_);
          onChanged();
        } else {
          variantCallEffectsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .bmeg.gaea.schema.VariantCallEffect variantCallEffects = 12;</code>
       */
      public Builder clearVariantCallEffects() {
        if (variantCallEffectsBuilder_ == null) {
          variantCallEffects_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000800);
          onChanged();
        } else {
          variantCallEffectsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .bmeg.gaea.schema.VariantCallEffect variantCallEffects = 12;</code>
       */
      public Builder removeVariantCallEffects(int index) {
        if (variantCallEffectsBuilder_ == null) {
          ensureVariantCallEffectsIsMutable();
          variantCallEffects_.remove(index);
          onChanged();
        } else {
          variantCallEffectsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .bmeg.gaea.schema.VariantCallEffect variantCallEffects = 12;</code>
       */
      public bmeg.gaea.schema.Variant.VariantCallEffect.Builder getVariantCallEffectsBuilder(
          int index) {
        return getVariantCallEffectsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .bmeg.gaea.schema.VariantCallEffect variantCallEffects = 12;</code>
       */
      public bmeg.gaea.schema.Variant.VariantCallEffectOrBuilder getVariantCallEffectsOrBuilder(
          int index) {
        if (variantCallEffectsBuilder_ == null) {
          return variantCallEffects_.get(index);  } else {
          return variantCallEffectsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .bmeg.gaea.schema.VariantCallEffect variantCallEffects = 12;</code>
       */
      public java.util.List<? extends bmeg.gaea.schema.Variant.VariantCallEffectOrBuilder> 
           getVariantCallEffectsOrBuilderList() {
        if (variantCallEffectsBuilder_ != null) {
          return variantCallEffectsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(variantCallEffects_);
        }
      }
      /**
       * <code>repeated .bmeg.gaea.schema.VariantCallEffect variantCallEffects = 12;</code>
       */
      public bmeg.gaea.schema.Variant.VariantCallEffect.Builder addVariantCallEffectsBuilder() {
        return getVariantCallEffectsFieldBuilder().addBuilder(
            bmeg.gaea.schema.Variant.VariantCallEffect.getDefaultInstance());
      }
      /**
       * <code>repeated .bmeg.gaea.schema.VariantCallEffect variantCallEffects = 12;</code>
       */
      public bmeg.gaea.schema.Variant.VariantCallEffect.Builder addVariantCallEffectsBuilder(
          int index) {
        return getVariantCallEffectsFieldBuilder().addBuilder(
            index, bmeg.gaea.schema.Variant.VariantCallEffect.getDefaultInstance());
      }
      /**
       * <code>repeated .bmeg.gaea.schema.VariantCallEffect variantCallEffects = 12;</code>
       */
      public java.util.List<bmeg.gaea.schema.Variant.VariantCallEffect.Builder> 
           getVariantCallEffectsBuilderList() {
        return getVariantCallEffectsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          bmeg.gaea.schema.Variant.VariantCallEffect, bmeg.gaea.schema.Variant.VariantCallEffect.Builder, bmeg.gaea.schema.Variant.VariantCallEffectOrBuilder> 
          getVariantCallEffectsFieldBuilder() {
        if (variantCallEffectsBuilder_ == null) {
          variantCallEffectsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              bmeg.gaea.schema.Variant.VariantCallEffect, bmeg.gaea.schema.Variant.VariantCallEffect.Builder, bmeg.gaea.schema.Variant.VariantCallEffectOrBuilder>(
                  variantCallEffects_,
                  ((bitField0_ & 0x00000800) == 0x00000800),
                  getParentForChildren(),
                  isClean());
          variantCallEffects_ = null;
        }
        return variantCallEffectsBuilder_;
      }

      private com.google.protobuf.MapField<
          java.lang.String, java.lang.String> info_;
      private com.google.protobuf.MapField<java.lang.String, java.lang.String>
      internalGetInfo() {
        if (info_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              InfoDefaultEntryHolder.defaultEntry);
       }
        return info_;
      }
      private com.google.protobuf.MapField<java.lang.String, java.lang.String>
      internalGetMutableInfo() {
        onChanged();;
        if (info_ == null) {
          info_ = com.google.protobuf.MapField.newMapField(
              InfoDefaultEntryHolder.defaultEntry);
        }
        if (!info_.isMutable()) {
          info_ = info_.copy();
        }
        return info_;
      }
      /**
       * <code>map&lt;string, string&gt; info = 13;</code>
       *
       * <pre>
       * A map of additional variant call information, including a Feature Id for now...
       * </pre>
       */
      public java.util.Map<java.lang.String, java.lang.String> getInfo() {
        return internalGetInfo().getMap();
      }
      /**
       * <code>map&lt;string, string&gt; info = 13;</code>
       *
       * <pre>
       * A map of additional variant call information, including a Feature Id for now...
       * </pre>
       */
      public java.util.Map<java.lang.String, java.lang.String>
      getMutableInfo() {
        return internalGetMutableInfo().getMutableMap();
      }
      /**
       * <code>map&lt;string, string&gt; info = 13;</code>
       *
       * <pre>
       * A map of additional variant call information, including a Feature Id for now...
       * </pre>
       */
      public Builder putAllInfo(
          java.util.Map<java.lang.String, java.lang.String> values) {
        getMutableInfo().putAll(values);
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:bmeg.gaea.schema.VariantCall)
    }

    // @@protoc_insertion_point(class_scope:bmeg.gaea.schema.VariantCall)
    private static final bmeg.gaea.schema.Variant.VariantCall DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new bmeg.gaea.schema.Variant.VariantCall();
    }

    public static bmeg.gaea.schema.Variant.VariantCall getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<VariantCall>
        PARSER = new com.google.protobuf.AbstractParser<VariantCall>() {
      public VariantCall parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        try {
          return new VariantCall(input, extensionRegistry);
        } catch (RuntimeException e) {
          if (e.getCause() instanceof
              com.google.protobuf.InvalidProtocolBufferException) {
            throw (com.google.protobuf.InvalidProtocolBufferException)
                e.getCause();
          }
          throw e;
        }
      }
    };

    public static com.google.protobuf.Parser<VariantCall> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<VariantCall> getParserForType() {
      return PARSER;
    }

    public bmeg.gaea.schema.Variant.VariantCall getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface BioSampleOrBuilder extends
      // @@protoc_insertion_point(interface_extends:bmeg.gaea.schema.BioSample)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional string tumor = 1;</code>
     *
     * <pre>
     * label or symbolic identifier for the biosample, from the original datasource
     * 
     * In the context of TCGA, might be TCGA-A1-A0SB-01A-11D-A142-09 TCGA-A1-A0SB-10B-01D-A142-09
     * this is a tumor and normal id concatenated together....assuming a VariantCall only involves
     * one BioSample (bad practice).
     * </pre>
     */
    java.lang.String getTumor();
    /**
     * <code>optional string tumor = 1;</code>
     *
     * <pre>
     * label or symbolic identifier for the biosample, from the original datasource
     * 
     * In the context of TCGA, might be TCGA-A1-A0SB-01A-11D-A142-09 TCGA-A1-A0SB-10B-01D-A142-09
     * this is a tumor and normal id concatenated together....assuming a VariantCall only involves
     * one BioSample (bad practice).
     * </pre>
     */
    com.google.protobuf.ByteString
        getTumorBytes();

    /**
     * <code>optional string normal = 2;</code>
     */
    java.lang.String getNormal();
    /**
     * <code>optional string normal = 2;</code>
     */
    com.google.protobuf.ByteString
        getNormalBytes();

    /**
     * <code>optional string source = 3;</code>
     *
     * <pre>
     * the source of this data
     * </pre>
     */
    java.lang.String getSource();
    /**
     * <code>optional string source = 3;</code>
     *
     * <pre>
     * the source of this data
     * </pre>
     */
    com.google.protobuf.ByteString
        getSourceBytes();

    /**
     * <code>optional string individualName = 4;</code>
     *
     * <pre>
     * The name of the individual this biosample was derived from.
     * </pre>
     */
    java.lang.String getIndividualName();
    /**
     * <code>optional string individualName = 4;</code>
     *
     * <pre>
     * The name of the individual this biosample was derived from.
     * </pre>
     */
    com.google.protobuf.ByteString
        getIndividualNameBytes();

    /**
     * <code>repeated .bmeg.gaea.schema.VariantCall variantCalls = 5;</code>
     *
     * <pre>
     * When necessary, some way to add BioSample observations might be nice, like: map&lt;string, sring&gt; observations = 4;
     * </pre>
     */
    java.util.List<bmeg.gaea.schema.Variant.VariantCall> 
        getVariantCallsList();
    /**
     * <code>repeated .bmeg.gaea.schema.VariantCall variantCalls = 5;</code>
     *
     * <pre>
     * When necessary, some way to add BioSample observations might be nice, like: map&lt;string, sring&gt; observations = 4;
     * </pre>
     */
    bmeg.gaea.schema.Variant.VariantCall getVariantCalls(int index);
    /**
     * <code>repeated .bmeg.gaea.schema.VariantCall variantCalls = 5;</code>
     *
     * <pre>
     * When necessary, some way to add BioSample observations might be nice, like: map&lt;string, sring&gt; observations = 4;
     * </pre>
     */
    int getVariantCallsCount();
    /**
     * <code>repeated .bmeg.gaea.schema.VariantCall variantCalls = 5;</code>
     *
     * <pre>
     * When necessary, some way to add BioSample observations might be nice, like: map&lt;string, sring&gt; observations = 4;
     * </pre>
     */
    java.util.List<? extends bmeg.gaea.schema.Variant.VariantCallOrBuilder> 
        getVariantCallsOrBuilderList();
    /**
     * <code>repeated .bmeg.gaea.schema.VariantCall variantCalls = 5;</code>
     *
     * <pre>
     * When necessary, some way to add BioSample observations might be nice, like: map&lt;string, sring&gt; observations = 4;
     * </pre>
     */
    bmeg.gaea.schema.Variant.VariantCallOrBuilder getVariantCallsOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code bmeg.gaea.schema.BioSample}
   *
   * <pre>
   * From GA4GH:
   *    A BioSample refers to a unit of biological material from which the substrate
   *   molecules (e.g. genomic DNA, RNA, proteins) for molecular analyses (e.g.
   *   sequencing, array hybridisation, mass-spectrometry) are extracted. Examples
   *   would be a tissue biopsy, a single cell from a culture for single cell genome
   *   sequencing or a protein fraction from a gradient centrifugation.
   *   Several instances (e.g. technical replicates) or types of experiments (e.g.
   *   genomic array as well as RNA-seq experiments) may refer to the same BioSample.
   *   In the context of the GA4GH metadata schema, BioSample constitutes the central
   *   reference object.
   * 
   * Heavily simplified for BMEG.
   * </pre>
   */
  public  static final class BioSample extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:bmeg.gaea.schema.BioSample)
      BioSampleOrBuilder {
    // Use BioSample.newBuilder() to construct.
    private BioSample(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private BioSample() {
      tumor_ = "";
      normal_ = "";
      source_ = "";
      individualName_ = "";
      variantCalls_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private BioSample(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry) {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              tumor_ = s;
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              normal_ = s;
              break;
            }
            case 26: {
              java.lang.String s = input.readStringRequireUtf8();

              source_ = s;
              break;
            }
            case 34: {
              java.lang.String s = input.readStringRequireUtf8();

              individualName_ = s;
              break;
            }
            case 42: {
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                variantCalls_ = new java.util.ArrayList<bmeg.gaea.schema.Variant.VariantCall>();
                mutable_bitField0_ |= 0x00000010;
              }
              variantCalls_.add(input.readMessage(bmeg.gaea.schema.Variant.VariantCall.parser(), extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw new RuntimeException(e.setUnfinishedMessage(this));
      } catch (java.io.IOException e) {
        throw new RuntimeException(
            new com.google.protobuf.InvalidProtocolBufferException(
                e.getMessage()).setUnfinishedMessage(this));
      } finally {
        if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
          variantCalls_ = java.util.Collections.unmodifiableList(variantCalls_);
        }
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return bmeg.gaea.schema.Variant.internal_static_bmeg_gaea_schema_BioSample_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return bmeg.gaea.schema.Variant.internal_static_bmeg_gaea_schema_BioSample_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              bmeg.gaea.schema.Variant.BioSample.class, bmeg.gaea.schema.Variant.BioSample.Builder.class);
    }

    private int bitField0_;
    public static final int TUMOR_FIELD_NUMBER = 1;
    private volatile java.lang.Object tumor_;
    /**
     * <code>optional string tumor = 1;</code>
     *
     * <pre>
     * label or symbolic identifier for the biosample, from the original datasource
     * 
     * In the context of TCGA, might be TCGA-A1-A0SB-01A-11D-A142-09 TCGA-A1-A0SB-10B-01D-A142-09
     * this is a tumor and normal id concatenated together....assuming a VariantCall only involves
     * one BioSample (bad practice).
     * </pre>
     */
    public java.lang.String getTumor() {
      java.lang.Object ref = tumor_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        tumor_ = s;
        return s;
      }
    }
    /**
     * <code>optional string tumor = 1;</code>
     *
     * <pre>
     * label or symbolic identifier for the biosample, from the original datasource
     * 
     * In the context of TCGA, might be TCGA-A1-A0SB-01A-11D-A142-09 TCGA-A1-A0SB-10B-01D-A142-09
     * this is a tumor and normal id concatenated together....assuming a VariantCall only involves
     * one BioSample (bad practice).
     * </pre>
     */
    public com.google.protobuf.ByteString
        getTumorBytes() {
      java.lang.Object ref = tumor_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        tumor_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int NORMAL_FIELD_NUMBER = 2;
    private volatile java.lang.Object normal_;
    /**
     * <code>optional string normal = 2;</code>
     */
    public java.lang.String getNormal() {
      java.lang.Object ref = normal_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        normal_ = s;
        return s;
      }
    }
    /**
     * <code>optional string normal = 2;</code>
     */
    public com.google.protobuf.ByteString
        getNormalBytes() {
      java.lang.Object ref = normal_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        normal_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SOURCE_FIELD_NUMBER = 3;
    private volatile java.lang.Object source_;
    /**
     * <code>optional string source = 3;</code>
     *
     * <pre>
     * the source of this data
     * </pre>
     */
    public java.lang.String getSource() {
      java.lang.Object ref = source_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        source_ = s;
        return s;
      }
    }
    /**
     * <code>optional string source = 3;</code>
     *
     * <pre>
     * the source of this data
     * </pre>
     */
    public com.google.protobuf.ByteString
        getSourceBytes() {
      java.lang.Object ref = source_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        source_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int INDIVIDUALNAME_FIELD_NUMBER = 4;
    private volatile java.lang.Object individualName_;
    /**
     * <code>optional string individualName = 4;</code>
     *
     * <pre>
     * The name of the individual this biosample was derived from.
     * </pre>
     */
    public java.lang.String getIndividualName() {
      java.lang.Object ref = individualName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        individualName_ = s;
        return s;
      }
    }
    /**
     * <code>optional string individualName = 4;</code>
     *
     * <pre>
     * The name of the individual this biosample was derived from.
     * </pre>
     */
    public com.google.protobuf.ByteString
        getIndividualNameBytes() {
      java.lang.Object ref = individualName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        individualName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int VARIANTCALLS_FIELD_NUMBER = 5;
    private java.util.List<bmeg.gaea.schema.Variant.VariantCall> variantCalls_;
    /**
     * <code>repeated .bmeg.gaea.schema.VariantCall variantCalls = 5;</code>
     *
     * <pre>
     * When necessary, some way to add BioSample observations might be nice, like: map&lt;string, sring&gt; observations = 4;
     * </pre>
     */
    public java.util.List<bmeg.gaea.schema.Variant.VariantCall> getVariantCallsList() {
      return variantCalls_;
    }
    /**
     * <code>repeated .bmeg.gaea.schema.VariantCall variantCalls = 5;</code>
     *
     * <pre>
     * When necessary, some way to add BioSample observations might be nice, like: map&lt;string, sring&gt; observations = 4;
     * </pre>
     */
    public java.util.List<? extends bmeg.gaea.schema.Variant.VariantCallOrBuilder> 
        getVariantCallsOrBuilderList() {
      return variantCalls_;
    }
    /**
     * <code>repeated .bmeg.gaea.schema.VariantCall variantCalls = 5;</code>
     *
     * <pre>
     * When necessary, some way to add BioSample observations might be nice, like: map&lt;string, sring&gt; observations = 4;
     * </pre>
     */
    public int getVariantCallsCount() {
      return variantCalls_.size();
    }
    /**
     * <code>repeated .bmeg.gaea.schema.VariantCall variantCalls = 5;</code>
     *
     * <pre>
     * When necessary, some way to add BioSample observations might be nice, like: map&lt;string, sring&gt; observations = 4;
     * </pre>
     */
    public bmeg.gaea.schema.Variant.VariantCall getVariantCalls(int index) {
      return variantCalls_.get(index);
    }
    /**
     * <code>repeated .bmeg.gaea.schema.VariantCall variantCalls = 5;</code>
     *
     * <pre>
     * When necessary, some way to add BioSample observations might be nice, like: map&lt;string, sring&gt; observations = 4;
     * </pre>
     */
    public bmeg.gaea.schema.Variant.VariantCallOrBuilder getVariantCallsOrBuilder(
        int index) {
      return variantCalls_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getTumorBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessage.writeString(output, 1, tumor_);
      }
      if (!getNormalBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessage.writeString(output, 2, normal_);
      }
      if (!getSourceBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessage.writeString(output, 3, source_);
      }
      if (!getIndividualNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessage.writeString(output, 4, individualName_);
      }
      for (int i = 0; i < variantCalls_.size(); i++) {
        output.writeMessage(5, variantCalls_.get(i));
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getTumorBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(1, tumor_);
      }
      if (!getNormalBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(2, normal_);
      }
      if (!getSourceBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(3, source_);
      }
      if (!getIndividualNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(4, individualName_);
      }
      for (int i = 0; i < variantCalls_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, variantCalls_.get(i));
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    public static bmeg.gaea.schema.Variant.BioSample parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static bmeg.gaea.schema.Variant.BioSample parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static bmeg.gaea.schema.Variant.BioSample parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static bmeg.gaea.schema.Variant.BioSample parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static bmeg.gaea.schema.Variant.BioSample parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static bmeg.gaea.schema.Variant.BioSample parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static bmeg.gaea.schema.Variant.BioSample parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static bmeg.gaea.schema.Variant.BioSample parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static bmeg.gaea.schema.Variant.BioSample parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static bmeg.gaea.schema.Variant.BioSample parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(bmeg.gaea.schema.Variant.BioSample prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code bmeg.gaea.schema.BioSample}
     *
     * <pre>
     * From GA4GH:
     *    A BioSample refers to a unit of biological material from which the substrate
     *   molecules (e.g. genomic DNA, RNA, proteins) for molecular analyses (e.g.
     *   sequencing, array hybridisation, mass-spectrometry) are extracted. Examples
     *   would be a tissue biopsy, a single cell from a culture for single cell genome
     *   sequencing or a protein fraction from a gradient centrifugation.
     *   Several instances (e.g. technical replicates) or types of experiments (e.g.
     *   genomic array as well as RNA-seq experiments) may refer to the same BioSample.
     *   In the context of the GA4GH metadata schema, BioSample constitutes the central
     *   reference object.
     * 
     * Heavily simplified for BMEG.
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:bmeg.gaea.schema.BioSample)
        bmeg.gaea.schema.Variant.BioSampleOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return bmeg.gaea.schema.Variant.internal_static_bmeg_gaea_schema_BioSample_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return bmeg.gaea.schema.Variant.internal_static_bmeg_gaea_schema_BioSample_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                bmeg.gaea.schema.Variant.BioSample.class, bmeg.gaea.schema.Variant.BioSample.Builder.class);
      }

      // Construct using bmeg.gaea.schema.Variant.BioSample.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getVariantCallsFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        tumor_ = "";

        normal_ = "";

        source_ = "";

        individualName_ = "";

        if (variantCallsBuilder_ == null) {
          variantCalls_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
        } else {
          variantCallsBuilder_.clear();
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return bmeg.gaea.schema.Variant.internal_static_bmeg_gaea_schema_BioSample_descriptor;
      }

      public bmeg.gaea.schema.Variant.BioSample getDefaultInstanceForType() {
        return bmeg.gaea.schema.Variant.BioSample.getDefaultInstance();
      }

      public bmeg.gaea.schema.Variant.BioSample build() {
        bmeg.gaea.schema.Variant.BioSample result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public bmeg.gaea.schema.Variant.BioSample buildPartial() {
        bmeg.gaea.schema.Variant.BioSample result = new bmeg.gaea.schema.Variant.BioSample(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        result.tumor_ = tumor_;
        result.normal_ = normal_;
        result.source_ = source_;
        result.individualName_ = individualName_;
        if (variantCallsBuilder_ == null) {
          if (((bitField0_ & 0x00000010) == 0x00000010)) {
            variantCalls_ = java.util.Collections.unmodifiableList(variantCalls_);
            bitField0_ = (bitField0_ & ~0x00000010);
          }
          result.variantCalls_ = variantCalls_;
        } else {
          result.variantCalls_ = variantCallsBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof bmeg.gaea.schema.Variant.BioSample) {
          return mergeFrom((bmeg.gaea.schema.Variant.BioSample)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(bmeg.gaea.schema.Variant.BioSample other) {
        if (other == bmeg.gaea.schema.Variant.BioSample.getDefaultInstance()) return this;
        if (!other.getTumor().isEmpty()) {
          tumor_ = other.tumor_;
          onChanged();
        }
        if (!other.getNormal().isEmpty()) {
          normal_ = other.normal_;
          onChanged();
        }
        if (!other.getSource().isEmpty()) {
          source_ = other.source_;
          onChanged();
        }
        if (!other.getIndividualName().isEmpty()) {
          individualName_ = other.individualName_;
          onChanged();
        }
        if (variantCallsBuilder_ == null) {
          if (!other.variantCalls_.isEmpty()) {
            if (variantCalls_.isEmpty()) {
              variantCalls_ = other.variantCalls_;
              bitField0_ = (bitField0_ & ~0x00000010);
            } else {
              ensureVariantCallsIsMutable();
              variantCalls_.addAll(other.variantCalls_);
            }
            onChanged();
          }
        } else {
          if (!other.variantCalls_.isEmpty()) {
            if (variantCallsBuilder_.isEmpty()) {
              variantCallsBuilder_.dispose();
              variantCallsBuilder_ = null;
              variantCalls_ = other.variantCalls_;
              bitField0_ = (bitField0_ & ~0x00000010);
              variantCallsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getVariantCallsFieldBuilder() : null;
            } else {
              variantCallsBuilder_.addAllMessages(other.variantCalls_);
            }
          }
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        bmeg.gaea.schema.Variant.BioSample parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (bmeg.gaea.schema.Variant.BioSample) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object tumor_ = "";
      /**
       * <code>optional string tumor = 1;</code>
       *
       * <pre>
       * label or symbolic identifier for the biosample, from the original datasource
       * 
       * In the context of TCGA, might be TCGA-A1-A0SB-01A-11D-A142-09 TCGA-A1-A0SB-10B-01D-A142-09
       * this is a tumor and normal id concatenated together....assuming a VariantCall only involves
       * one BioSample (bad practice).
       * </pre>
       */
      public java.lang.String getTumor() {
        java.lang.Object ref = tumor_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          tumor_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string tumor = 1;</code>
       *
       * <pre>
       * label or symbolic identifier for the biosample, from the original datasource
       * 
       * In the context of TCGA, might be TCGA-A1-A0SB-01A-11D-A142-09 TCGA-A1-A0SB-10B-01D-A142-09
       * this is a tumor and normal id concatenated together....assuming a VariantCall only involves
       * one BioSample (bad practice).
       * </pre>
       */
      public com.google.protobuf.ByteString
          getTumorBytes() {
        java.lang.Object ref = tumor_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          tumor_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string tumor = 1;</code>
       *
       * <pre>
       * label or symbolic identifier for the biosample, from the original datasource
       * 
       * In the context of TCGA, might be TCGA-A1-A0SB-01A-11D-A142-09 TCGA-A1-A0SB-10B-01D-A142-09
       * this is a tumor and normal id concatenated together....assuming a VariantCall only involves
       * one BioSample (bad practice).
       * </pre>
       */
      public Builder setTumor(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        tumor_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string tumor = 1;</code>
       *
       * <pre>
       * label or symbolic identifier for the biosample, from the original datasource
       * 
       * In the context of TCGA, might be TCGA-A1-A0SB-01A-11D-A142-09 TCGA-A1-A0SB-10B-01D-A142-09
       * this is a tumor and normal id concatenated together....assuming a VariantCall only involves
       * one BioSample (bad practice).
       * </pre>
       */
      public Builder clearTumor() {
        
        tumor_ = getDefaultInstance().getTumor();
        onChanged();
        return this;
      }
      /**
       * <code>optional string tumor = 1;</code>
       *
       * <pre>
       * label or symbolic identifier for the biosample, from the original datasource
       * 
       * In the context of TCGA, might be TCGA-A1-A0SB-01A-11D-A142-09 TCGA-A1-A0SB-10B-01D-A142-09
       * this is a tumor and normal id concatenated together....assuming a VariantCall only involves
       * one BioSample (bad practice).
       * </pre>
       */
      public Builder setTumorBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        tumor_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object normal_ = "";
      /**
       * <code>optional string normal = 2;</code>
       */
      public java.lang.String getNormal() {
        java.lang.Object ref = normal_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          normal_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string normal = 2;</code>
       */
      public com.google.protobuf.ByteString
          getNormalBytes() {
        java.lang.Object ref = normal_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          normal_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string normal = 2;</code>
       */
      public Builder setNormal(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        normal_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string normal = 2;</code>
       */
      public Builder clearNormal() {
        
        normal_ = getDefaultInstance().getNormal();
        onChanged();
        return this;
      }
      /**
       * <code>optional string normal = 2;</code>
       */
      public Builder setNormalBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        normal_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object source_ = "";
      /**
       * <code>optional string source = 3;</code>
       *
       * <pre>
       * the source of this data
       * </pre>
       */
      public java.lang.String getSource() {
        java.lang.Object ref = source_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          source_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string source = 3;</code>
       *
       * <pre>
       * the source of this data
       * </pre>
       */
      public com.google.protobuf.ByteString
          getSourceBytes() {
        java.lang.Object ref = source_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          source_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string source = 3;</code>
       *
       * <pre>
       * the source of this data
       * </pre>
       */
      public Builder setSource(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        source_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string source = 3;</code>
       *
       * <pre>
       * the source of this data
       * </pre>
       */
      public Builder clearSource() {
        
        source_ = getDefaultInstance().getSource();
        onChanged();
        return this;
      }
      /**
       * <code>optional string source = 3;</code>
       *
       * <pre>
       * the source of this data
       * </pre>
       */
      public Builder setSourceBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        source_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object individualName_ = "";
      /**
       * <code>optional string individualName = 4;</code>
       *
       * <pre>
       * The name of the individual this biosample was derived from.
       * </pre>
       */
      public java.lang.String getIndividualName() {
        java.lang.Object ref = individualName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          individualName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string individualName = 4;</code>
       *
       * <pre>
       * The name of the individual this biosample was derived from.
       * </pre>
       */
      public com.google.protobuf.ByteString
          getIndividualNameBytes() {
        java.lang.Object ref = individualName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          individualName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string individualName = 4;</code>
       *
       * <pre>
       * The name of the individual this biosample was derived from.
       * </pre>
       */
      public Builder setIndividualName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        individualName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string individualName = 4;</code>
       *
       * <pre>
       * The name of the individual this biosample was derived from.
       * </pre>
       */
      public Builder clearIndividualName() {
        
        individualName_ = getDefaultInstance().getIndividualName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string individualName = 4;</code>
       *
       * <pre>
       * The name of the individual this biosample was derived from.
       * </pre>
       */
      public Builder setIndividualNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        individualName_ = value;
        onChanged();
        return this;
      }

      private java.util.List<bmeg.gaea.schema.Variant.VariantCall> variantCalls_ =
        java.util.Collections.emptyList();
      private void ensureVariantCallsIsMutable() {
        if (!((bitField0_ & 0x00000010) == 0x00000010)) {
          variantCalls_ = new java.util.ArrayList<bmeg.gaea.schema.Variant.VariantCall>(variantCalls_);
          bitField0_ |= 0x00000010;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          bmeg.gaea.schema.Variant.VariantCall, bmeg.gaea.schema.Variant.VariantCall.Builder, bmeg.gaea.schema.Variant.VariantCallOrBuilder> variantCallsBuilder_;

      /**
       * <code>repeated .bmeg.gaea.schema.VariantCall variantCalls = 5;</code>
       *
       * <pre>
       * When necessary, some way to add BioSample observations might be nice, like: map&lt;string, sring&gt; observations = 4;
       * </pre>
       */
      public java.util.List<bmeg.gaea.schema.Variant.VariantCall> getVariantCallsList() {
        if (variantCallsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(variantCalls_);
        } else {
          return variantCallsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .bmeg.gaea.schema.VariantCall variantCalls = 5;</code>
       *
       * <pre>
       * When necessary, some way to add BioSample observations might be nice, like: map&lt;string, sring&gt; observations = 4;
       * </pre>
       */
      public int getVariantCallsCount() {
        if (variantCallsBuilder_ == null) {
          return variantCalls_.size();
        } else {
          return variantCallsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .bmeg.gaea.schema.VariantCall variantCalls = 5;</code>
       *
       * <pre>
       * When necessary, some way to add BioSample observations might be nice, like: map&lt;string, sring&gt; observations = 4;
       * </pre>
       */
      public bmeg.gaea.schema.Variant.VariantCall getVariantCalls(int index) {
        if (variantCallsBuilder_ == null) {
          return variantCalls_.get(index);
        } else {
          return variantCallsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .bmeg.gaea.schema.VariantCall variantCalls = 5;</code>
       *
       * <pre>
       * When necessary, some way to add BioSample observations might be nice, like: map&lt;string, sring&gt; observations = 4;
       * </pre>
       */
      public Builder setVariantCalls(
          int index, bmeg.gaea.schema.Variant.VariantCall value) {
        if (variantCallsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureVariantCallsIsMutable();
          variantCalls_.set(index, value);
          onChanged();
        } else {
          variantCallsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .bmeg.gaea.schema.VariantCall variantCalls = 5;</code>
       *
       * <pre>
       * When necessary, some way to add BioSample observations might be nice, like: map&lt;string, sring&gt; observations = 4;
       * </pre>
       */
      public Builder setVariantCalls(
          int index, bmeg.gaea.schema.Variant.VariantCall.Builder builderForValue) {
        if (variantCallsBuilder_ == null) {
          ensureVariantCallsIsMutable();
          variantCalls_.set(index, builderForValue.build());
          onChanged();
        } else {
          variantCallsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .bmeg.gaea.schema.VariantCall variantCalls = 5;</code>
       *
       * <pre>
       * When necessary, some way to add BioSample observations might be nice, like: map&lt;string, sring&gt; observations = 4;
       * </pre>
       */
      public Builder addVariantCalls(bmeg.gaea.schema.Variant.VariantCall value) {
        if (variantCallsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureVariantCallsIsMutable();
          variantCalls_.add(value);
          onChanged();
        } else {
          variantCallsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .bmeg.gaea.schema.VariantCall variantCalls = 5;</code>
       *
       * <pre>
       * When necessary, some way to add BioSample observations might be nice, like: map&lt;string, sring&gt; observations = 4;
       * </pre>
       */
      public Builder addVariantCalls(
          int index, bmeg.gaea.schema.Variant.VariantCall value) {
        if (variantCallsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureVariantCallsIsMutable();
          variantCalls_.add(index, value);
          onChanged();
        } else {
          variantCallsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .bmeg.gaea.schema.VariantCall variantCalls = 5;</code>
       *
       * <pre>
       * When necessary, some way to add BioSample observations might be nice, like: map&lt;string, sring&gt; observations = 4;
       * </pre>
       */
      public Builder addVariantCalls(
          bmeg.gaea.schema.Variant.VariantCall.Builder builderForValue) {
        if (variantCallsBuilder_ == null) {
          ensureVariantCallsIsMutable();
          variantCalls_.add(builderForValue.build());
          onChanged();
        } else {
          variantCallsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .bmeg.gaea.schema.VariantCall variantCalls = 5;</code>
       *
       * <pre>
       * When necessary, some way to add BioSample observations might be nice, like: map&lt;string, sring&gt; observations = 4;
       * </pre>
       */
      public Builder addVariantCalls(
          int index, bmeg.gaea.schema.Variant.VariantCall.Builder builderForValue) {
        if (variantCallsBuilder_ == null) {
          ensureVariantCallsIsMutable();
          variantCalls_.add(index, builderForValue.build());
          onChanged();
        } else {
          variantCallsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .bmeg.gaea.schema.VariantCall variantCalls = 5;</code>
       *
       * <pre>
       * When necessary, some way to add BioSample observations might be nice, like: map&lt;string, sring&gt; observations = 4;
       * </pre>
       */
      public Builder addAllVariantCalls(
          java.lang.Iterable<? extends bmeg.gaea.schema.Variant.VariantCall> values) {
        if (variantCallsBuilder_ == null) {
          ensureVariantCallsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, variantCalls_);
          onChanged();
        } else {
          variantCallsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .bmeg.gaea.schema.VariantCall variantCalls = 5;</code>
       *
       * <pre>
       * When necessary, some way to add BioSample observations might be nice, like: map&lt;string, sring&gt; observations = 4;
       * </pre>
       */
      public Builder clearVariantCalls() {
        if (variantCallsBuilder_ == null) {
          variantCalls_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
          onChanged();
        } else {
          variantCallsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .bmeg.gaea.schema.VariantCall variantCalls = 5;</code>
       *
       * <pre>
       * When necessary, some way to add BioSample observations might be nice, like: map&lt;string, sring&gt; observations = 4;
       * </pre>
       */
      public Builder removeVariantCalls(int index) {
        if (variantCallsBuilder_ == null) {
          ensureVariantCallsIsMutable();
          variantCalls_.remove(index);
          onChanged();
        } else {
          variantCallsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .bmeg.gaea.schema.VariantCall variantCalls = 5;</code>
       *
       * <pre>
       * When necessary, some way to add BioSample observations might be nice, like: map&lt;string, sring&gt; observations = 4;
       * </pre>
       */
      public bmeg.gaea.schema.Variant.VariantCall.Builder getVariantCallsBuilder(
          int index) {
        return getVariantCallsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .bmeg.gaea.schema.VariantCall variantCalls = 5;</code>
       *
       * <pre>
       * When necessary, some way to add BioSample observations might be nice, like: map&lt;string, sring&gt; observations = 4;
       * </pre>
       */
      public bmeg.gaea.schema.Variant.VariantCallOrBuilder getVariantCallsOrBuilder(
          int index) {
        if (variantCallsBuilder_ == null) {
          return variantCalls_.get(index);  } else {
          return variantCallsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .bmeg.gaea.schema.VariantCall variantCalls = 5;</code>
       *
       * <pre>
       * When necessary, some way to add BioSample observations might be nice, like: map&lt;string, sring&gt; observations = 4;
       * </pre>
       */
      public java.util.List<? extends bmeg.gaea.schema.Variant.VariantCallOrBuilder> 
           getVariantCallsOrBuilderList() {
        if (variantCallsBuilder_ != null) {
          return variantCallsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(variantCalls_);
        }
      }
      /**
       * <code>repeated .bmeg.gaea.schema.VariantCall variantCalls = 5;</code>
       *
       * <pre>
       * When necessary, some way to add BioSample observations might be nice, like: map&lt;string, sring&gt; observations = 4;
       * </pre>
       */
      public bmeg.gaea.schema.Variant.VariantCall.Builder addVariantCallsBuilder() {
        return getVariantCallsFieldBuilder().addBuilder(
            bmeg.gaea.schema.Variant.VariantCall.getDefaultInstance());
      }
      /**
       * <code>repeated .bmeg.gaea.schema.VariantCall variantCalls = 5;</code>
       *
       * <pre>
       * When necessary, some way to add BioSample observations might be nice, like: map&lt;string, sring&gt; observations = 4;
       * </pre>
       */
      public bmeg.gaea.schema.Variant.VariantCall.Builder addVariantCallsBuilder(
          int index) {
        return getVariantCallsFieldBuilder().addBuilder(
            index, bmeg.gaea.schema.Variant.VariantCall.getDefaultInstance());
      }
      /**
       * <code>repeated .bmeg.gaea.schema.VariantCall variantCalls = 5;</code>
       *
       * <pre>
       * When necessary, some way to add BioSample observations might be nice, like: map&lt;string, sring&gt; observations = 4;
       * </pre>
       */
      public java.util.List<bmeg.gaea.schema.Variant.VariantCall.Builder> 
           getVariantCallsBuilderList() {
        return getVariantCallsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          bmeg.gaea.schema.Variant.VariantCall, bmeg.gaea.schema.Variant.VariantCall.Builder, bmeg.gaea.schema.Variant.VariantCallOrBuilder> 
          getVariantCallsFieldBuilder() {
        if (variantCallsBuilder_ == null) {
          variantCallsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              bmeg.gaea.schema.Variant.VariantCall, bmeg.gaea.schema.Variant.VariantCall.Builder, bmeg.gaea.schema.Variant.VariantCallOrBuilder>(
                  variantCalls_,
                  ((bitField0_ & 0x00000010) == 0x00000010),
                  getParentForChildren(),
                  isClean());
          variantCalls_ = null;
        }
        return variantCallsBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:bmeg.gaea.schema.BioSample)
    }

    // @@protoc_insertion_point(class_scope:bmeg.gaea.schema.BioSample)
    private static final bmeg.gaea.schema.Variant.BioSample DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new bmeg.gaea.schema.Variant.BioSample();
    }

    public static bmeg.gaea.schema.Variant.BioSample getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<BioSample>
        PARSER = new com.google.protobuf.AbstractParser<BioSample>() {
      public BioSample parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        try {
          return new BioSample(input, extensionRegistry);
        } catch (RuntimeException e) {
          if (e.getCause() instanceof
              com.google.protobuf.InvalidProtocolBufferException) {
            throw (com.google.protobuf.InvalidProtocolBufferException)
                e.getCause();
          }
          throw e;
        }
      }
    };

    public static com.google.protobuf.Parser<BioSample> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<BioSample> getParserForType() {
      return PARSER;
    }

    public bmeg.gaea.schema.Variant.BioSample getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface IndividualOrBuilder extends
      // @@protoc_insertion_point(interface_extends:bmeg.gaea.schema.Individual)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional string name = 1;</code>
     *
     * <pre>
     * label or symbolic identifier for Individual, from original database.
     * In the context of TCGA, might be "TCGA-AG-3582" from "barcode" column in summary_patient_metadata_pancan.tsv
     * </pre>
     */
    java.lang.String getName();
    /**
     * <code>optional string name = 1;</code>
     *
     * <pre>
     * label or symbolic identifier for Individual, from original database.
     * In the context of TCGA, might be "TCGA-AG-3582" from "barcode" column in summary_patient_metadata_pancan.tsv
     * </pre>
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <code>optional string source = 2;</code>
     *
     * <pre>
     * the source of this data
     * </pre>
     */
    java.lang.String getSource();
    /**
     * <code>optional string source = 2;</code>
     *
     * <pre>
     * the source of this data
     * </pre>
     */
    com.google.protobuf.ByteString
        getSourceBytes();

    /**
     * <code>repeated .bmeg.gaea.schema.BioSample bioSamples = 3;</code>
     */
    java.util.List<bmeg.gaea.schema.Variant.BioSample> 
        getBioSamplesList();
    /**
     * <code>repeated .bmeg.gaea.schema.BioSample bioSamples = 3;</code>
     */
    bmeg.gaea.schema.Variant.BioSample getBioSamples(int index);
    /**
     * <code>repeated .bmeg.gaea.schema.BioSample bioSamples = 3;</code>
     */
    int getBioSamplesCount();
    /**
     * <code>repeated .bmeg.gaea.schema.BioSample bioSamples = 3;</code>
     */
    java.util.List<? extends bmeg.gaea.schema.Variant.BioSampleOrBuilder> 
        getBioSamplesOrBuilderList();
    /**
     * <code>repeated .bmeg.gaea.schema.BioSample bioSamples = 3;</code>
     */
    bmeg.gaea.schema.Variant.BioSampleOrBuilder getBioSamplesOrBuilder(
        int index);

    /**
     * <code>map&lt;string, string&gt; observations = 4;</code>
     *
     * <pre>
     * placeholder data dump of remaining 591 columns in summary_patient_metadata_pancan.tsv
     * </pre>
     */
    java.util.Map<java.lang.String, java.lang.String>
    getObservations();
  }
  /**
   * Protobuf type {@code bmeg.gaea.schema.Individual}
   */
  public  static final class Individual extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:bmeg.gaea.schema.Individual)
      IndividualOrBuilder {
    // Use Individual.newBuilder() to construct.
    private Individual(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private Individual() {
      name_ = "";
      source_ = "";
      bioSamples_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private Individual(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry) {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              name_ = s;
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              source_ = s;
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                bioSamples_ = new java.util.ArrayList<bmeg.gaea.schema.Variant.BioSample>();
                mutable_bitField0_ |= 0x00000004;
              }
              bioSamples_.add(input.readMessage(bmeg.gaea.schema.Variant.BioSample.parser(), extensionRegistry));
              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                observations_ = com.google.protobuf.MapField.newMapField(
                    ObservationsDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000008;
              }
              com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
              observations = input.readMessage(
                  ObservationsDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              observations_.getMutableMap().put(observations.getKey(), observations.getValue());
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw new RuntimeException(e.setUnfinishedMessage(this));
      } catch (java.io.IOException e) {
        throw new RuntimeException(
            new com.google.protobuf.InvalidProtocolBufferException(
                e.getMessage()).setUnfinishedMessage(this));
      } finally {
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          bioSamples_ = java.util.Collections.unmodifiableList(bioSamples_);
        }
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return bmeg.gaea.schema.Variant.internal_static_bmeg_gaea_schema_Individual_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 4:
          return internalGetObservations();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return bmeg.gaea.schema.Variant.internal_static_bmeg_gaea_schema_Individual_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              bmeg.gaea.schema.Variant.Individual.class, bmeg.gaea.schema.Variant.Individual.Builder.class);
    }

    private int bitField0_;
    public static final int NAME_FIELD_NUMBER = 1;
    private volatile java.lang.Object name_;
    /**
     * <code>optional string name = 1;</code>
     *
     * <pre>
     * label or symbolic identifier for Individual, from original database.
     * In the context of TCGA, might be "TCGA-AG-3582" from "barcode" column in summary_patient_metadata_pancan.tsv
     * </pre>
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      }
    }
    /**
     * <code>optional string name = 1;</code>
     *
     * <pre>
     * label or symbolic identifier for Individual, from original database.
     * In the context of TCGA, might be "TCGA-AG-3582" from "barcode" column in summary_patient_metadata_pancan.tsv
     * </pre>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SOURCE_FIELD_NUMBER = 2;
    private volatile java.lang.Object source_;
    /**
     * <code>optional string source = 2;</code>
     *
     * <pre>
     * the source of this data
     * </pre>
     */
    public java.lang.String getSource() {
      java.lang.Object ref = source_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        source_ = s;
        return s;
      }
    }
    /**
     * <code>optional string source = 2;</code>
     *
     * <pre>
     * the source of this data
     * </pre>
     */
    public com.google.protobuf.ByteString
        getSourceBytes() {
      java.lang.Object ref = source_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        source_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int BIOSAMPLES_FIELD_NUMBER = 3;
    private java.util.List<bmeg.gaea.schema.Variant.BioSample> bioSamples_;
    /**
     * <code>repeated .bmeg.gaea.schema.BioSample bioSamples = 3;</code>
     */
    public java.util.List<bmeg.gaea.schema.Variant.BioSample> getBioSamplesList() {
      return bioSamples_;
    }
    /**
     * <code>repeated .bmeg.gaea.schema.BioSample bioSamples = 3;</code>
     */
    public java.util.List<? extends bmeg.gaea.schema.Variant.BioSampleOrBuilder> 
        getBioSamplesOrBuilderList() {
      return bioSamples_;
    }
    /**
     * <code>repeated .bmeg.gaea.schema.BioSample bioSamples = 3;</code>
     */
    public int getBioSamplesCount() {
      return bioSamples_.size();
    }
    /**
     * <code>repeated .bmeg.gaea.schema.BioSample bioSamples = 3;</code>
     */
    public bmeg.gaea.schema.Variant.BioSample getBioSamples(int index) {
      return bioSamples_.get(index);
    }
    /**
     * <code>repeated .bmeg.gaea.schema.BioSample bioSamples = 3;</code>
     */
    public bmeg.gaea.schema.Variant.BioSampleOrBuilder getBioSamplesOrBuilder(
        int index) {
      return bioSamples_.get(index);
    }

    public static final int OBSERVATIONS_FIELD_NUMBER = 4;
    private static final class ObservationsDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.String, java.lang.String> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.String, java.lang.String>newDefaultInstance(
                  bmeg.gaea.schema.Variant.internal_static_bmeg_gaea_schema_Individual_ObservationsEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "",
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "");
    }
    private com.google.protobuf.MapField<
        java.lang.String, java.lang.String> observations_;
    private com.google.protobuf.MapField<java.lang.String, java.lang.String>
    internalGetObservations() {
      if (observations_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            ObservationsDefaultEntryHolder.defaultEntry);
     }
      return observations_;
    }
    /**
     * <code>map&lt;string, string&gt; observations = 4;</code>
     *
     * <pre>
     * placeholder data dump of remaining 591 columns in summary_patient_metadata_pancan.tsv
     * </pre>
     */

    public java.util.Map<java.lang.String, java.lang.String> getObservations() {
      return internalGetObservations().getMap();
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessage.writeString(output, 1, name_);
      }
      if (!getSourceBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessage.writeString(output, 2, source_);
      }
      for (int i = 0; i < bioSamples_.size(); i++) {
        output.writeMessage(3, bioSamples_.get(i));
      }
      for (java.util.Map.Entry<java.lang.String, java.lang.String> entry
           : internalGetObservations().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
        observations = ObservationsDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        output.writeMessage(4, observations);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(1, name_);
      }
      if (!getSourceBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(2, source_);
      }
      for (int i = 0; i < bioSamples_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, bioSamples_.get(i));
      }
      for (java.util.Map.Entry<java.lang.String, java.lang.String> entry
           : internalGetObservations().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
        observations = ObservationsDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(4, observations);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    public static bmeg.gaea.schema.Variant.Individual parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static bmeg.gaea.schema.Variant.Individual parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static bmeg.gaea.schema.Variant.Individual parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static bmeg.gaea.schema.Variant.Individual parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static bmeg.gaea.schema.Variant.Individual parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static bmeg.gaea.schema.Variant.Individual parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static bmeg.gaea.schema.Variant.Individual parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static bmeg.gaea.schema.Variant.Individual parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static bmeg.gaea.schema.Variant.Individual parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static bmeg.gaea.schema.Variant.Individual parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(bmeg.gaea.schema.Variant.Individual prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code bmeg.gaea.schema.Individual}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:bmeg.gaea.schema.Individual)
        bmeg.gaea.schema.Variant.IndividualOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return bmeg.gaea.schema.Variant.internal_static_bmeg_gaea_schema_Individual_descriptor;
      }

      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMapField(
          int number) {
        switch (number) {
          case 4:
            return internalGetObservations();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMutableMapField(
          int number) {
        switch (number) {
          case 4:
            return internalGetMutableObservations();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return bmeg.gaea.schema.Variant.internal_static_bmeg_gaea_schema_Individual_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                bmeg.gaea.schema.Variant.Individual.class, bmeg.gaea.schema.Variant.Individual.Builder.class);
      }

      // Construct using bmeg.gaea.schema.Variant.Individual.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getBioSamplesFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        name_ = "";

        source_ = "";

        if (bioSamplesBuilder_ == null) {
          bioSamples_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          bioSamplesBuilder_.clear();
        }
        internalGetMutableObservations().clear();
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return bmeg.gaea.schema.Variant.internal_static_bmeg_gaea_schema_Individual_descriptor;
      }

      public bmeg.gaea.schema.Variant.Individual getDefaultInstanceForType() {
        return bmeg.gaea.schema.Variant.Individual.getDefaultInstance();
      }

      public bmeg.gaea.schema.Variant.Individual build() {
        bmeg.gaea.schema.Variant.Individual result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public bmeg.gaea.schema.Variant.Individual buildPartial() {
        bmeg.gaea.schema.Variant.Individual result = new bmeg.gaea.schema.Variant.Individual(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        result.name_ = name_;
        result.source_ = source_;
        if (bioSamplesBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            bioSamples_ = java.util.Collections.unmodifiableList(bioSamples_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.bioSamples_ = bioSamples_;
        } else {
          result.bioSamples_ = bioSamplesBuilder_.build();
        }
        result.observations_ = internalGetObservations();
        result.observations_.makeImmutable();
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof bmeg.gaea.schema.Variant.Individual) {
          return mergeFrom((bmeg.gaea.schema.Variant.Individual)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(bmeg.gaea.schema.Variant.Individual other) {
        if (other == bmeg.gaea.schema.Variant.Individual.getDefaultInstance()) return this;
        if (!other.getName().isEmpty()) {
          name_ = other.name_;
          onChanged();
        }
        if (!other.getSource().isEmpty()) {
          source_ = other.source_;
          onChanged();
        }
        if (bioSamplesBuilder_ == null) {
          if (!other.bioSamples_.isEmpty()) {
            if (bioSamples_.isEmpty()) {
              bioSamples_ = other.bioSamples_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureBioSamplesIsMutable();
              bioSamples_.addAll(other.bioSamples_);
            }
            onChanged();
          }
        } else {
          if (!other.bioSamples_.isEmpty()) {
            if (bioSamplesBuilder_.isEmpty()) {
              bioSamplesBuilder_.dispose();
              bioSamplesBuilder_ = null;
              bioSamples_ = other.bioSamples_;
              bitField0_ = (bitField0_ & ~0x00000004);
              bioSamplesBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getBioSamplesFieldBuilder() : null;
            } else {
              bioSamplesBuilder_.addAllMessages(other.bioSamples_);
            }
          }
        }
        internalGetMutableObservations().mergeFrom(
            other.internalGetObservations());
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        bmeg.gaea.schema.Variant.Individual parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (bmeg.gaea.schema.Variant.Individual) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object name_ = "";
      /**
       * <code>optional string name = 1;</code>
       *
       * <pre>
       * label or symbolic identifier for Individual, from original database.
       * In the context of TCGA, might be "TCGA-AG-3582" from "barcode" column in summary_patient_metadata_pancan.tsv
       * </pre>
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string name = 1;</code>
       *
       * <pre>
       * label or symbolic identifier for Individual, from original database.
       * In the context of TCGA, might be "TCGA-AG-3582" from "barcode" column in summary_patient_metadata_pancan.tsv
       * </pre>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string name = 1;</code>
       *
       * <pre>
       * label or symbolic identifier for Individual, from original database.
       * In the context of TCGA, might be "TCGA-AG-3582" from "barcode" column in summary_patient_metadata_pancan.tsv
       * </pre>
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string name = 1;</code>
       *
       * <pre>
       * label or symbolic identifier for Individual, from original database.
       * In the context of TCGA, might be "TCGA-AG-3582" from "barcode" column in summary_patient_metadata_pancan.tsv
       * </pre>
       */
      public Builder clearName() {
        
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string name = 1;</code>
       *
       * <pre>
       * label or symbolic identifier for Individual, from original database.
       * In the context of TCGA, might be "TCGA-AG-3582" from "barcode" column in summary_patient_metadata_pancan.tsv
       * </pre>
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        name_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object source_ = "";
      /**
       * <code>optional string source = 2;</code>
       *
       * <pre>
       * the source of this data
       * </pre>
       */
      public java.lang.String getSource() {
        java.lang.Object ref = source_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          source_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string source = 2;</code>
       *
       * <pre>
       * the source of this data
       * </pre>
       */
      public com.google.protobuf.ByteString
          getSourceBytes() {
        java.lang.Object ref = source_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          source_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string source = 2;</code>
       *
       * <pre>
       * the source of this data
       * </pre>
       */
      public Builder setSource(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        source_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string source = 2;</code>
       *
       * <pre>
       * the source of this data
       * </pre>
       */
      public Builder clearSource() {
        
        source_ = getDefaultInstance().getSource();
        onChanged();
        return this;
      }
      /**
       * <code>optional string source = 2;</code>
       *
       * <pre>
       * the source of this data
       * </pre>
       */
      public Builder setSourceBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        source_ = value;
        onChanged();
        return this;
      }

      private java.util.List<bmeg.gaea.schema.Variant.BioSample> bioSamples_ =
        java.util.Collections.emptyList();
      private void ensureBioSamplesIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          bioSamples_ = new java.util.ArrayList<bmeg.gaea.schema.Variant.BioSample>(bioSamples_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          bmeg.gaea.schema.Variant.BioSample, bmeg.gaea.schema.Variant.BioSample.Builder, bmeg.gaea.schema.Variant.BioSampleOrBuilder> bioSamplesBuilder_;

      /**
       * <code>repeated .bmeg.gaea.schema.BioSample bioSamples = 3;</code>
       */
      public java.util.List<bmeg.gaea.schema.Variant.BioSample> getBioSamplesList() {
        if (bioSamplesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(bioSamples_);
        } else {
          return bioSamplesBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .bmeg.gaea.schema.BioSample bioSamples = 3;</code>
       */
      public int getBioSamplesCount() {
        if (bioSamplesBuilder_ == null) {
          return bioSamples_.size();
        } else {
          return bioSamplesBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .bmeg.gaea.schema.BioSample bioSamples = 3;</code>
       */
      public bmeg.gaea.schema.Variant.BioSample getBioSamples(int index) {
        if (bioSamplesBuilder_ == null) {
          return bioSamples_.get(index);
        } else {
          return bioSamplesBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .bmeg.gaea.schema.BioSample bioSamples = 3;</code>
       */
      public Builder setBioSamples(
          int index, bmeg.gaea.schema.Variant.BioSample value) {
        if (bioSamplesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureBioSamplesIsMutable();
          bioSamples_.set(index, value);
          onChanged();
        } else {
          bioSamplesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .bmeg.gaea.schema.BioSample bioSamples = 3;</code>
       */
      public Builder setBioSamples(
          int index, bmeg.gaea.schema.Variant.BioSample.Builder builderForValue) {
        if (bioSamplesBuilder_ == null) {
          ensureBioSamplesIsMutable();
          bioSamples_.set(index, builderForValue.build());
          onChanged();
        } else {
          bioSamplesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .bmeg.gaea.schema.BioSample bioSamples = 3;</code>
       */
      public Builder addBioSamples(bmeg.gaea.schema.Variant.BioSample value) {
        if (bioSamplesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureBioSamplesIsMutable();
          bioSamples_.add(value);
          onChanged();
        } else {
          bioSamplesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .bmeg.gaea.schema.BioSample bioSamples = 3;</code>
       */
      public Builder addBioSamples(
          int index, bmeg.gaea.schema.Variant.BioSample value) {
        if (bioSamplesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureBioSamplesIsMutable();
          bioSamples_.add(index, value);
          onChanged();
        } else {
          bioSamplesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .bmeg.gaea.schema.BioSample bioSamples = 3;</code>
       */
      public Builder addBioSamples(
          bmeg.gaea.schema.Variant.BioSample.Builder builderForValue) {
        if (bioSamplesBuilder_ == null) {
          ensureBioSamplesIsMutable();
          bioSamples_.add(builderForValue.build());
          onChanged();
        } else {
          bioSamplesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .bmeg.gaea.schema.BioSample bioSamples = 3;</code>
       */
      public Builder addBioSamples(
          int index, bmeg.gaea.schema.Variant.BioSample.Builder builderForValue) {
        if (bioSamplesBuilder_ == null) {
          ensureBioSamplesIsMutable();
          bioSamples_.add(index, builderForValue.build());
          onChanged();
        } else {
          bioSamplesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .bmeg.gaea.schema.BioSample bioSamples = 3;</code>
       */
      public Builder addAllBioSamples(
          java.lang.Iterable<? extends bmeg.gaea.schema.Variant.BioSample> values) {
        if (bioSamplesBuilder_ == null) {
          ensureBioSamplesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, bioSamples_);
          onChanged();
        } else {
          bioSamplesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .bmeg.gaea.schema.BioSample bioSamples = 3;</code>
       */
      public Builder clearBioSamples() {
        if (bioSamplesBuilder_ == null) {
          bioSamples_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          bioSamplesBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .bmeg.gaea.schema.BioSample bioSamples = 3;</code>
       */
      public Builder removeBioSamples(int index) {
        if (bioSamplesBuilder_ == null) {
          ensureBioSamplesIsMutable();
          bioSamples_.remove(index);
          onChanged();
        } else {
          bioSamplesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .bmeg.gaea.schema.BioSample bioSamples = 3;</code>
       */
      public bmeg.gaea.schema.Variant.BioSample.Builder getBioSamplesBuilder(
          int index) {
        return getBioSamplesFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .bmeg.gaea.schema.BioSample bioSamples = 3;</code>
       */
      public bmeg.gaea.schema.Variant.BioSampleOrBuilder getBioSamplesOrBuilder(
          int index) {
        if (bioSamplesBuilder_ == null) {
          return bioSamples_.get(index);  } else {
          return bioSamplesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .bmeg.gaea.schema.BioSample bioSamples = 3;</code>
       */
      public java.util.List<? extends bmeg.gaea.schema.Variant.BioSampleOrBuilder> 
           getBioSamplesOrBuilderList() {
        if (bioSamplesBuilder_ != null) {
          return bioSamplesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(bioSamples_);
        }
      }
      /**
       * <code>repeated .bmeg.gaea.schema.BioSample bioSamples = 3;</code>
       */
      public bmeg.gaea.schema.Variant.BioSample.Builder addBioSamplesBuilder() {
        return getBioSamplesFieldBuilder().addBuilder(
            bmeg.gaea.schema.Variant.BioSample.getDefaultInstance());
      }
      /**
       * <code>repeated .bmeg.gaea.schema.BioSample bioSamples = 3;</code>
       */
      public bmeg.gaea.schema.Variant.BioSample.Builder addBioSamplesBuilder(
          int index) {
        return getBioSamplesFieldBuilder().addBuilder(
            index, bmeg.gaea.schema.Variant.BioSample.getDefaultInstance());
      }
      /**
       * <code>repeated .bmeg.gaea.schema.BioSample bioSamples = 3;</code>
       */
      public java.util.List<bmeg.gaea.schema.Variant.BioSample.Builder> 
           getBioSamplesBuilderList() {
        return getBioSamplesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          bmeg.gaea.schema.Variant.BioSample, bmeg.gaea.schema.Variant.BioSample.Builder, bmeg.gaea.schema.Variant.BioSampleOrBuilder> 
          getBioSamplesFieldBuilder() {
        if (bioSamplesBuilder_ == null) {
          bioSamplesBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              bmeg.gaea.schema.Variant.BioSample, bmeg.gaea.schema.Variant.BioSample.Builder, bmeg.gaea.schema.Variant.BioSampleOrBuilder>(
                  bioSamples_,
                  ((bitField0_ & 0x00000004) == 0x00000004),
                  getParentForChildren(),
                  isClean());
          bioSamples_ = null;
        }
        return bioSamplesBuilder_;
      }

      private com.google.protobuf.MapField<
          java.lang.String, java.lang.String> observations_;
      private com.google.protobuf.MapField<java.lang.String, java.lang.String>
      internalGetObservations() {
        if (observations_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              ObservationsDefaultEntryHolder.defaultEntry);
       }
        return observations_;
      }
      private com.google.protobuf.MapField<java.lang.String, java.lang.String>
      internalGetMutableObservations() {
        onChanged();;
        if (observations_ == null) {
          observations_ = com.google.protobuf.MapField.newMapField(
              ObservationsDefaultEntryHolder.defaultEntry);
        }
        if (!observations_.isMutable()) {
          observations_ = observations_.copy();
        }
        return observations_;
      }
      /**
       * <code>map&lt;string, string&gt; observations = 4;</code>
       *
       * <pre>
       * placeholder data dump of remaining 591 columns in summary_patient_metadata_pancan.tsv
       * </pre>
       */
      public java.util.Map<java.lang.String, java.lang.String> getObservations() {
        return internalGetObservations().getMap();
      }
      /**
       * <code>map&lt;string, string&gt; observations = 4;</code>
       *
       * <pre>
       * placeholder data dump of remaining 591 columns in summary_patient_metadata_pancan.tsv
       * </pre>
       */
      public java.util.Map<java.lang.String, java.lang.String>
      getMutableObservations() {
        return internalGetMutableObservations().getMutableMap();
      }
      /**
       * <code>map&lt;string, string&gt; observations = 4;</code>
       *
       * <pre>
       * placeholder data dump of remaining 591 columns in summary_patient_metadata_pancan.tsv
       * </pre>
       */
      public Builder putAllObservations(
          java.util.Map<java.lang.String, java.lang.String> values) {
        getMutableObservations().putAll(values);
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:bmeg.gaea.schema.Individual)
    }

    // @@protoc_insertion_point(class_scope:bmeg.gaea.schema.Individual)
    private static final bmeg.gaea.schema.Variant.Individual DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new bmeg.gaea.schema.Variant.Individual();
    }

    public static bmeg.gaea.schema.Variant.Individual getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Individual>
        PARSER = new com.google.protobuf.AbstractParser<Individual>() {
      public Individual parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        try {
          return new Individual(input, extensionRegistry);
        } catch (RuntimeException e) {
          if (e.getCause() instanceof
              com.google.protobuf.InvalidProtocolBufferException) {
            throw (com.google.protobuf.InvalidProtocolBufferException)
                e.getCause();
          }
          throw e;
        }
      }
    };

    public static com.google.protobuf.Parser<Individual> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Individual> getParserForType() {
      return PARSER;
    }

    public bmeg.gaea.schema.Variant.Individual getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface GeneExpressionOrBuilder extends
      // @@protoc_insertion_point(interface_extends:bmeg.gaea.schema.GeneExpression)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional string barcode = 1;</code>
     */
    java.lang.String getBarcode();
    /**
     * <code>optional string barcode = 1;</code>
     */
    com.google.protobuf.ByteString
        getBarcodeBytes();

    /**
     * <code>optional string source = 2;</code>
     */
    java.lang.String getSource();
    /**
     * <code>optional string source = 2;</code>
     */
    com.google.protobuf.ByteString
        getSourceBytes();

    /**
     * <code>map&lt;string, string&gt; expressions = 3;</code>
     */
    java.util.Map<java.lang.String, java.lang.String>
    getExpressions();
  }
  /**
   * Protobuf type {@code bmeg.gaea.schema.GeneExpression}
   */
  public  static final class GeneExpression extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:bmeg.gaea.schema.GeneExpression)
      GeneExpressionOrBuilder {
    // Use GeneExpression.newBuilder() to construct.
    private GeneExpression(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private GeneExpression() {
      barcode_ = "";
      source_ = "";
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private GeneExpression(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry) {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              barcode_ = s;
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              source_ = s;
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                expressions_ = com.google.protobuf.MapField.newMapField(
                    ExpressionsDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000004;
              }
              com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
              expressions = input.readMessage(
                  ExpressionsDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              expressions_.getMutableMap().put(expressions.getKey(), expressions.getValue());
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw new RuntimeException(e.setUnfinishedMessage(this));
      } catch (java.io.IOException e) {
        throw new RuntimeException(
            new com.google.protobuf.InvalidProtocolBufferException(
                e.getMessage()).setUnfinishedMessage(this));
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return bmeg.gaea.schema.Variant.internal_static_bmeg_gaea_schema_GeneExpression_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 3:
          return internalGetExpressions();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return bmeg.gaea.schema.Variant.internal_static_bmeg_gaea_schema_GeneExpression_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              bmeg.gaea.schema.Variant.GeneExpression.class, bmeg.gaea.schema.Variant.GeneExpression.Builder.class);
    }

    private int bitField0_;
    public static final int BARCODE_FIELD_NUMBER = 1;
    private volatile java.lang.Object barcode_;
    /**
     * <code>optional string barcode = 1;</code>
     */
    public java.lang.String getBarcode() {
      java.lang.Object ref = barcode_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        barcode_ = s;
        return s;
      }
    }
    /**
     * <code>optional string barcode = 1;</code>
     */
    public com.google.protobuf.ByteString
        getBarcodeBytes() {
      java.lang.Object ref = barcode_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        barcode_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SOURCE_FIELD_NUMBER = 2;
    private volatile java.lang.Object source_;
    /**
     * <code>optional string source = 2;</code>
     */
    public java.lang.String getSource() {
      java.lang.Object ref = source_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        source_ = s;
        return s;
      }
    }
    /**
     * <code>optional string source = 2;</code>
     */
    public com.google.protobuf.ByteString
        getSourceBytes() {
      java.lang.Object ref = source_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        source_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int EXPRESSIONS_FIELD_NUMBER = 3;
    private static final class ExpressionsDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.String, java.lang.String> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.String, java.lang.String>newDefaultInstance(
                  bmeg.gaea.schema.Variant.internal_static_bmeg_gaea_schema_GeneExpression_ExpressionsEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "",
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "");
    }
    private com.google.protobuf.MapField<
        java.lang.String, java.lang.String> expressions_;
    private com.google.protobuf.MapField<java.lang.String, java.lang.String>
    internalGetExpressions() {
      if (expressions_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            ExpressionsDefaultEntryHolder.defaultEntry);
     }
      return expressions_;
    }
    /**
     * <code>map&lt;string, string&gt; expressions = 3;</code>
     */

    public java.util.Map<java.lang.String, java.lang.String> getExpressions() {
      return internalGetExpressions().getMap();
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getBarcodeBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessage.writeString(output, 1, barcode_);
      }
      if (!getSourceBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessage.writeString(output, 2, source_);
      }
      for (java.util.Map.Entry<java.lang.String, java.lang.String> entry
           : internalGetExpressions().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
        expressions = ExpressionsDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        output.writeMessage(3, expressions);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getBarcodeBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(1, barcode_);
      }
      if (!getSourceBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(2, source_);
      }
      for (java.util.Map.Entry<java.lang.String, java.lang.String> entry
           : internalGetExpressions().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
        expressions = ExpressionsDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(3, expressions);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    public static bmeg.gaea.schema.Variant.GeneExpression parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static bmeg.gaea.schema.Variant.GeneExpression parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static bmeg.gaea.schema.Variant.GeneExpression parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static bmeg.gaea.schema.Variant.GeneExpression parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static bmeg.gaea.schema.Variant.GeneExpression parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static bmeg.gaea.schema.Variant.GeneExpression parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static bmeg.gaea.schema.Variant.GeneExpression parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static bmeg.gaea.schema.Variant.GeneExpression parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static bmeg.gaea.schema.Variant.GeneExpression parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static bmeg.gaea.schema.Variant.GeneExpression parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(bmeg.gaea.schema.Variant.GeneExpression prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code bmeg.gaea.schema.GeneExpression}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:bmeg.gaea.schema.GeneExpression)
        bmeg.gaea.schema.Variant.GeneExpressionOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return bmeg.gaea.schema.Variant.internal_static_bmeg_gaea_schema_GeneExpression_descriptor;
      }

      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMapField(
          int number) {
        switch (number) {
          case 3:
            return internalGetExpressions();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMutableMapField(
          int number) {
        switch (number) {
          case 3:
            return internalGetMutableExpressions();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return bmeg.gaea.schema.Variant.internal_static_bmeg_gaea_schema_GeneExpression_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                bmeg.gaea.schema.Variant.GeneExpression.class, bmeg.gaea.schema.Variant.GeneExpression.Builder.class);
      }

      // Construct using bmeg.gaea.schema.Variant.GeneExpression.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        barcode_ = "";

        source_ = "";

        internalGetMutableExpressions().clear();
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return bmeg.gaea.schema.Variant.internal_static_bmeg_gaea_schema_GeneExpression_descriptor;
      }

      public bmeg.gaea.schema.Variant.GeneExpression getDefaultInstanceForType() {
        return bmeg.gaea.schema.Variant.GeneExpression.getDefaultInstance();
      }

      public bmeg.gaea.schema.Variant.GeneExpression build() {
        bmeg.gaea.schema.Variant.GeneExpression result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public bmeg.gaea.schema.Variant.GeneExpression buildPartial() {
        bmeg.gaea.schema.Variant.GeneExpression result = new bmeg.gaea.schema.Variant.GeneExpression(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        result.barcode_ = barcode_;
        result.source_ = source_;
        result.expressions_ = internalGetExpressions();
        result.expressions_.makeImmutable();
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof bmeg.gaea.schema.Variant.GeneExpression) {
          return mergeFrom((bmeg.gaea.schema.Variant.GeneExpression)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(bmeg.gaea.schema.Variant.GeneExpression other) {
        if (other == bmeg.gaea.schema.Variant.GeneExpression.getDefaultInstance()) return this;
        if (!other.getBarcode().isEmpty()) {
          barcode_ = other.barcode_;
          onChanged();
        }
        if (!other.getSource().isEmpty()) {
          source_ = other.source_;
          onChanged();
        }
        internalGetMutableExpressions().mergeFrom(
            other.internalGetExpressions());
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        bmeg.gaea.schema.Variant.GeneExpression parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (bmeg.gaea.schema.Variant.GeneExpression) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object barcode_ = "";
      /**
       * <code>optional string barcode = 1;</code>
       */
      public java.lang.String getBarcode() {
        java.lang.Object ref = barcode_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          barcode_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string barcode = 1;</code>
       */
      public com.google.protobuf.ByteString
          getBarcodeBytes() {
        java.lang.Object ref = barcode_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          barcode_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string barcode = 1;</code>
       */
      public Builder setBarcode(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        barcode_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string barcode = 1;</code>
       */
      public Builder clearBarcode() {
        
        barcode_ = getDefaultInstance().getBarcode();
        onChanged();
        return this;
      }
      /**
       * <code>optional string barcode = 1;</code>
       */
      public Builder setBarcodeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        barcode_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object source_ = "";
      /**
       * <code>optional string source = 2;</code>
       */
      public java.lang.String getSource() {
        java.lang.Object ref = source_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          source_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string source = 2;</code>
       */
      public com.google.protobuf.ByteString
          getSourceBytes() {
        java.lang.Object ref = source_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          source_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string source = 2;</code>
       */
      public Builder setSource(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        source_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string source = 2;</code>
       */
      public Builder clearSource() {
        
        source_ = getDefaultInstance().getSource();
        onChanged();
        return this;
      }
      /**
       * <code>optional string source = 2;</code>
       */
      public Builder setSourceBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        source_ = value;
        onChanged();
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.String, java.lang.String> expressions_;
      private com.google.protobuf.MapField<java.lang.String, java.lang.String>
      internalGetExpressions() {
        if (expressions_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              ExpressionsDefaultEntryHolder.defaultEntry);
       }
        return expressions_;
      }
      private com.google.protobuf.MapField<java.lang.String, java.lang.String>
      internalGetMutableExpressions() {
        onChanged();;
        if (expressions_ == null) {
          expressions_ = com.google.protobuf.MapField.newMapField(
              ExpressionsDefaultEntryHolder.defaultEntry);
        }
        if (!expressions_.isMutable()) {
          expressions_ = expressions_.copy();
        }
        return expressions_;
      }
      /**
       * <code>map&lt;string, string&gt; expressions = 3;</code>
       */
      public java.util.Map<java.lang.String, java.lang.String> getExpressions() {
        return internalGetExpressions().getMap();
      }
      /**
       * <code>map&lt;string, string&gt; expressions = 3;</code>
       */
      public java.util.Map<java.lang.String, java.lang.String>
      getMutableExpressions() {
        return internalGetMutableExpressions().getMutableMap();
      }
      /**
       * <code>map&lt;string, string&gt; expressions = 3;</code>
       */
      public Builder putAllExpressions(
          java.util.Map<java.lang.String, java.lang.String> values) {
        getMutableExpressions().putAll(values);
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:bmeg.gaea.schema.GeneExpression)
    }

    // @@protoc_insertion_point(class_scope:bmeg.gaea.schema.GeneExpression)
    private static final bmeg.gaea.schema.Variant.GeneExpression DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new bmeg.gaea.schema.Variant.GeneExpression();
    }

    public static bmeg.gaea.schema.Variant.GeneExpression getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<GeneExpression>
        PARSER = new com.google.protobuf.AbstractParser<GeneExpression>() {
      public GeneExpression parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        try {
          return new GeneExpression(input, extensionRegistry);
        } catch (RuntimeException e) {
          if (e.getCause() instanceof
              com.google.protobuf.InvalidProtocolBufferException) {
            throw (com.google.protobuf.InvalidProtocolBufferException)
                e.getCause();
          }
          throw e;
        }
      }
    };

    public static com.google.protobuf.Parser<GeneExpression> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<GeneExpression> getParserForType() {
      return PARSER;
    }

    public bmeg.gaea.schema.Variant.GeneExpression getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface IndividualListOrBuilder extends
      // @@protoc_insertion_point(interface_extends:bmeg.gaea.schema.IndividualList)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .bmeg.gaea.schema.Individual individuals = 1;</code>
     */
    java.util.List<bmeg.gaea.schema.Variant.Individual> 
        getIndividualsList();
    /**
     * <code>repeated .bmeg.gaea.schema.Individual individuals = 1;</code>
     */
    bmeg.gaea.schema.Variant.Individual getIndividuals(int index);
    /**
     * <code>repeated .bmeg.gaea.schema.Individual individuals = 1;</code>
     */
    int getIndividualsCount();
    /**
     * <code>repeated .bmeg.gaea.schema.Individual individuals = 1;</code>
     */
    java.util.List<? extends bmeg.gaea.schema.Variant.IndividualOrBuilder> 
        getIndividualsOrBuilderList();
    /**
     * <code>repeated .bmeg.gaea.schema.Individual individuals = 1;</code>
     */
    bmeg.gaea.schema.Variant.IndividualOrBuilder getIndividualsOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code bmeg.gaea.schema.IndividualList}
   */
  public  static final class IndividualList extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:bmeg.gaea.schema.IndividualList)
      IndividualListOrBuilder {
    // Use IndividualList.newBuilder() to construct.
    private IndividualList(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private IndividualList() {
      individuals_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private IndividualList(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry) {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                individuals_ = new java.util.ArrayList<bmeg.gaea.schema.Variant.Individual>();
                mutable_bitField0_ |= 0x00000001;
              }
              individuals_.add(input.readMessage(bmeg.gaea.schema.Variant.Individual.parser(), extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw new RuntimeException(e.setUnfinishedMessage(this));
      } catch (java.io.IOException e) {
        throw new RuntimeException(
            new com.google.protobuf.InvalidProtocolBufferException(
                e.getMessage()).setUnfinishedMessage(this));
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          individuals_ = java.util.Collections.unmodifiableList(individuals_);
        }
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return bmeg.gaea.schema.Variant.internal_static_bmeg_gaea_schema_IndividualList_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return bmeg.gaea.schema.Variant.internal_static_bmeg_gaea_schema_IndividualList_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              bmeg.gaea.schema.Variant.IndividualList.class, bmeg.gaea.schema.Variant.IndividualList.Builder.class);
    }

    public static final int INDIVIDUALS_FIELD_NUMBER = 1;
    private java.util.List<bmeg.gaea.schema.Variant.Individual> individuals_;
    /**
     * <code>repeated .bmeg.gaea.schema.Individual individuals = 1;</code>
     */
    public java.util.List<bmeg.gaea.schema.Variant.Individual> getIndividualsList() {
      return individuals_;
    }
    /**
     * <code>repeated .bmeg.gaea.schema.Individual individuals = 1;</code>
     */
    public java.util.List<? extends bmeg.gaea.schema.Variant.IndividualOrBuilder> 
        getIndividualsOrBuilderList() {
      return individuals_;
    }
    /**
     * <code>repeated .bmeg.gaea.schema.Individual individuals = 1;</code>
     */
    public int getIndividualsCount() {
      return individuals_.size();
    }
    /**
     * <code>repeated .bmeg.gaea.schema.Individual individuals = 1;</code>
     */
    public bmeg.gaea.schema.Variant.Individual getIndividuals(int index) {
      return individuals_.get(index);
    }
    /**
     * <code>repeated .bmeg.gaea.schema.Individual individuals = 1;</code>
     */
    public bmeg.gaea.schema.Variant.IndividualOrBuilder getIndividualsOrBuilder(
        int index) {
      return individuals_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < individuals_.size(); i++) {
        output.writeMessage(1, individuals_.get(i));
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < individuals_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, individuals_.get(i));
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    public static bmeg.gaea.schema.Variant.IndividualList parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static bmeg.gaea.schema.Variant.IndividualList parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static bmeg.gaea.schema.Variant.IndividualList parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static bmeg.gaea.schema.Variant.IndividualList parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static bmeg.gaea.schema.Variant.IndividualList parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static bmeg.gaea.schema.Variant.IndividualList parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static bmeg.gaea.schema.Variant.IndividualList parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static bmeg.gaea.schema.Variant.IndividualList parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static bmeg.gaea.schema.Variant.IndividualList parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static bmeg.gaea.schema.Variant.IndividualList parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(bmeg.gaea.schema.Variant.IndividualList prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code bmeg.gaea.schema.IndividualList}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:bmeg.gaea.schema.IndividualList)
        bmeg.gaea.schema.Variant.IndividualListOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return bmeg.gaea.schema.Variant.internal_static_bmeg_gaea_schema_IndividualList_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return bmeg.gaea.schema.Variant.internal_static_bmeg_gaea_schema_IndividualList_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                bmeg.gaea.schema.Variant.IndividualList.class, bmeg.gaea.schema.Variant.IndividualList.Builder.class);
      }

      // Construct using bmeg.gaea.schema.Variant.IndividualList.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getIndividualsFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        if (individualsBuilder_ == null) {
          individuals_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          individualsBuilder_.clear();
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return bmeg.gaea.schema.Variant.internal_static_bmeg_gaea_schema_IndividualList_descriptor;
      }

      public bmeg.gaea.schema.Variant.IndividualList getDefaultInstanceForType() {
        return bmeg.gaea.schema.Variant.IndividualList.getDefaultInstance();
      }

      public bmeg.gaea.schema.Variant.IndividualList build() {
        bmeg.gaea.schema.Variant.IndividualList result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public bmeg.gaea.schema.Variant.IndividualList buildPartial() {
        bmeg.gaea.schema.Variant.IndividualList result = new bmeg.gaea.schema.Variant.IndividualList(this);
        int from_bitField0_ = bitField0_;
        if (individualsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            individuals_ = java.util.Collections.unmodifiableList(individuals_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.individuals_ = individuals_;
        } else {
          result.individuals_ = individualsBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof bmeg.gaea.schema.Variant.IndividualList) {
          return mergeFrom((bmeg.gaea.schema.Variant.IndividualList)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(bmeg.gaea.schema.Variant.IndividualList other) {
        if (other == bmeg.gaea.schema.Variant.IndividualList.getDefaultInstance()) return this;
        if (individualsBuilder_ == null) {
          if (!other.individuals_.isEmpty()) {
            if (individuals_.isEmpty()) {
              individuals_ = other.individuals_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureIndividualsIsMutable();
              individuals_.addAll(other.individuals_);
            }
            onChanged();
          }
        } else {
          if (!other.individuals_.isEmpty()) {
            if (individualsBuilder_.isEmpty()) {
              individualsBuilder_.dispose();
              individualsBuilder_ = null;
              individuals_ = other.individuals_;
              bitField0_ = (bitField0_ & ~0x00000001);
              individualsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getIndividualsFieldBuilder() : null;
            } else {
              individualsBuilder_.addAllMessages(other.individuals_);
            }
          }
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        bmeg.gaea.schema.Variant.IndividualList parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (bmeg.gaea.schema.Variant.IndividualList) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<bmeg.gaea.schema.Variant.Individual> individuals_ =
        java.util.Collections.emptyList();
      private void ensureIndividualsIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          individuals_ = new java.util.ArrayList<bmeg.gaea.schema.Variant.Individual>(individuals_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          bmeg.gaea.schema.Variant.Individual, bmeg.gaea.schema.Variant.Individual.Builder, bmeg.gaea.schema.Variant.IndividualOrBuilder> individualsBuilder_;

      /**
       * <code>repeated .bmeg.gaea.schema.Individual individuals = 1;</code>
       */
      public java.util.List<bmeg.gaea.schema.Variant.Individual> getIndividualsList() {
        if (individualsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(individuals_);
        } else {
          return individualsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .bmeg.gaea.schema.Individual individuals = 1;</code>
       */
      public int getIndividualsCount() {
        if (individualsBuilder_ == null) {
          return individuals_.size();
        } else {
          return individualsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .bmeg.gaea.schema.Individual individuals = 1;</code>
       */
      public bmeg.gaea.schema.Variant.Individual getIndividuals(int index) {
        if (individualsBuilder_ == null) {
          return individuals_.get(index);
        } else {
          return individualsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .bmeg.gaea.schema.Individual individuals = 1;</code>
       */
      public Builder setIndividuals(
          int index, bmeg.gaea.schema.Variant.Individual value) {
        if (individualsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureIndividualsIsMutable();
          individuals_.set(index, value);
          onChanged();
        } else {
          individualsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .bmeg.gaea.schema.Individual individuals = 1;</code>
       */
      public Builder setIndividuals(
          int index, bmeg.gaea.schema.Variant.Individual.Builder builderForValue) {
        if (individualsBuilder_ == null) {
          ensureIndividualsIsMutable();
          individuals_.set(index, builderForValue.build());
          onChanged();
        } else {
          individualsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .bmeg.gaea.schema.Individual individuals = 1;</code>
       */
      public Builder addIndividuals(bmeg.gaea.schema.Variant.Individual value) {
        if (individualsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureIndividualsIsMutable();
          individuals_.add(value);
          onChanged();
        } else {
          individualsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .bmeg.gaea.schema.Individual individuals = 1;</code>
       */
      public Builder addIndividuals(
          int index, bmeg.gaea.schema.Variant.Individual value) {
        if (individualsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureIndividualsIsMutable();
          individuals_.add(index, value);
          onChanged();
        } else {
          individualsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .bmeg.gaea.schema.Individual individuals = 1;</code>
       */
      public Builder addIndividuals(
          bmeg.gaea.schema.Variant.Individual.Builder builderForValue) {
        if (individualsBuilder_ == null) {
          ensureIndividualsIsMutable();
          individuals_.add(builderForValue.build());
          onChanged();
        } else {
          individualsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .bmeg.gaea.schema.Individual individuals = 1;</code>
       */
      public Builder addIndividuals(
          int index, bmeg.gaea.schema.Variant.Individual.Builder builderForValue) {
        if (individualsBuilder_ == null) {
          ensureIndividualsIsMutable();
          individuals_.add(index, builderForValue.build());
          onChanged();
        } else {
          individualsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .bmeg.gaea.schema.Individual individuals = 1;</code>
       */
      public Builder addAllIndividuals(
          java.lang.Iterable<? extends bmeg.gaea.schema.Variant.Individual> values) {
        if (individualsBuilder_ == null) {
          ensureIndividualsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, individuals_);
          onChanged();
        } else {
          individualsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .bmeg.gaea.schema.Individual individuals = 1;</code>
       */
      public Builder clearIndividuals() {
        if (individualsBuilder_ == null) {
          individuals_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          individualsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .bmeg.gaea.schema.Individual individuals = 1;</code>
       */
      public Builder removeIndividuals(int index) {
        if (individualsBuilder_ == null) {
          ensureIndividualsIsMutable();
          individuals_.remove(index);
          onChanged();
        } else {
          individualsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .bmeg.gaea.schema.Individual individuals = 1;</code>
       */
      public bmeg.gaea.schema.Variant.Individual.Builder getIndividualsBuilder(
          int index) {
        return getIndividualsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .bmeg.gaea.schema.Individual individuals = 1;</code>
       */
      public bmeg.gaea.schema.Variant.IndividualOrBuilder getIndividualsOrBuilder(
          int index) {
        if (individualsBuilder_ == null) {
          return individuals_.get(index);  } else {
          return individualsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .bmeg.gaea.schema.Individual individuals = 1;</code>
       */
      public java.util.List<? extends bmeg.gaea.schema.Variant.IndividualOrBuilder> 
           getIndividualsOrBuilderList() {
        if (individualsBuilder_ != null) {
          return individualsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(individuals_);
        }
      }
      /**
       * <code>repeated .bmeg.gaea.schema.Individual individuals = 1;</code>
       */
      public bmeg.gaea.schema.Variant.Individual.Builder addIndividualsBuilder() {
        return getIndividualsFieldBuilder().addBuilder(
            bmeg.gaea.schema.Variant.Individual.getDefaultInstance());
      }
      /**
       * <code>repeated .bmeg.gaea.schema.Individual individuals = 1;</code>
       */
      public bmeg.gaea.schema.Variant.Individual.Builder addIndividualsBuilder(
          int index) {
        return getIndividualsFieldBuilder().addBuilder(
            index, bmeg.gaea.schema.Variant.Individual.getDefaultInstance());
      }
      /**
       * <code>repeated .bmeg.gaea.schema.Individual individuals = 1;</code>
       */
      public java.util.List<bmeg.gaea.schema.Variant.Individual.Builder> 
           getIndividualsBuilderList() {
        return getIndividualsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          bmeg.gaea.schema.Variant.Individual, bmeg.gaea.schema.Variant.Individual.Builder, bmeg.gaea.schema.Variant.IndividualOrBuilder> 
          getIndividualsFieldBuilder() {
        if (individualsBuilder_ == null) {
          individualsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              bmeg.gaea.schema.Variant.Individual, bmeg.gaea.schema.Variant.Individual.Builder, bmeg.gaea.schema.Variant.IndividualOrBuilder>(
                  individuals_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          individuals_ = null;
        }
        return individualsBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:bmeg.gaea.schema.IndividualList)
    }

    // @@protoc_insertion_point(class_scope:bmeg.gaea.schema.IndividualList)
    private static final bmeg.gaea.schema.Variant.IndividualList DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new bmeg.gaea.schema.Variant.IndividualList();
    }

    public static bmeg.gaea.schema.Variant.IndividualList getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<IndividualList>
        PARSER = new com.google.protobuf.AbstractParser<IndividualList>() {
      public IndividualList parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        try {
          return new IndividualList(input, extensionRegistry);
        } catch (RuntimeException e) {
          if (e.getCause() instanceof
              com.google.protobuf.InvalidProtocolBufferException) {
            throw (com.google.protobuf.InvalidProtocolBufferException)
                e.getCause();
          }
          throw e;
        }
      }
    };

    public static com.google.protobuf.Parser<IndividualList> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<IndividualList> getParserForType() {
      return PARSER;
    }

    public bmeg.gaea.schema.Variant.IndividualList getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_bmeg_gaea_schema_Position_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_bmeg_gaea_schema_Position_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_bmeg_gaea_schema_Feature_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_bmeg_gaea_schema_Feature_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_bmeg_gaea_schema_Feature_AttributesEntry_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_bmeg_gaea_schema_Feature_AttributesEntry_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_bmeg_gaea_schema_VariantCallEffect_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_bmeg_gaea_schema_VariantCallEffect_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_bmeg_gaea_schema_VariantCallEffect_InfoEntry_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_bmeg_gaea_schema_VariantCallEffect_InfoEntry_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_bmeg_gaea_schema_VariantCall_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_bmeg_gaea_schema_VariantCall_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_bmeg_gaea_schema_VariantCall_InfoEntry_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_bmeg_gaea_schema_VariantCall_InfoEntry_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_bmeg_gaea_schema_BioSample_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_bmeg_gaea_schema_BioSample_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_bmeg_gaea_schema_Individual_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_bmeg_gaea_schema_Individual_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_bmeg_gaea_schema_Individual_ObservationsEntry_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_bmeg_gaea_schema_Individual_ObservationsEntry_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_bmeg_gaea_schema_GeneExpression_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_bmeg_gaea_schema_GeneExpression_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_bmeg_gaea_schema_GeneExpression_ExpressionsEntry_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_bmeg_gaea_schema_GeneExpression_ExpressionsEntry_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_bmeg_gaea_schema_IndividualList_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_bmeg_gaea_schema_IndividualList_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n7server/src/main/protobuf/bmeg/gaea/sch" +
      "ema/variant.proto\022\020bmeg.gaea.schema\"I\n\010P" +
      "osition\022\021\n\treference\030\001 \001(\t\022\r\n\005start\030\002 \001(" +
      "\003\022\013\n\003end\030\003 \001(\003\022\016\n\006strand\030\004 \001(\t\"\276\001\n\007Featu" +
      "re\022,\n\010position\030\001 \001(\0132\032.bmeg.gaea.schema." +
      "Position\022\023\n\013featureType\030\002 \001(\t\022=\n\nattribu" +
      "tes\030\003 \003(\0132).bmeg.gaea.schema.Feature.Att" +
      "ributesEntry\0321\n\017AttributesEntry\022\013\n\003key\030\001" +
      " \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\"\367\001\n\021VariantCallE" +
      "ffect\022\016\n\006source\030\001 \001(\t\022\017\n\007feature\030\002 \001(\t\022\035",
      "\n\025variantClassification\030\003 \001(\t\022\017\n\007domains" +
      "\030\004 \003(\t\022\017\n\007dbsnpRS\030\005 \001(\t\022\026\n\016dbsnpValStatu" +
      "s\030\006 \001(\t\022;\n\004info\030\007 \003(\0132-.bmeg.gaea.schema" +
      ".VariantCallEffect.InfoEntry\032+\n\tInfoEntr" +
      "y\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\"\303\003\n\013Va" +
      "riantCall\022\016\n\006source\030\001 \001(\t\022,\n\010position\030\002 " +
      "\001(\0132\032.bmeg.gaea.schema.Position\022\023\n\013varia" +
      "ntType\030\003 \001(\t\022\027\n\017referenceAllele\030\004 \001(\t\022\025\n" +
      "\rnormalAllele1\030\005 \001(\t\022\025\n\rnormalAllele2\030\006 " +
      "\001(\t\022\024\n\014tumorAllele1\030\007 \001(\t\022\024\n\014tumorAllele",
      "2\030\010 \001(\t\022\021\n\tsequencer\030\t \001(\t\022\027\n\017tumorSampl" +
      "eUUID\030\n \001(\t\022\035\n\025matchedNormSampleUUID\030\013 \001" +
      "(\t\022?\n\022variantCallEffects\030\014 \003(\0132#.bmeg.ga" +
      "ea.schema.VariantCallEffect\0225\n\004info\030\r \003(" +
      "\0132\'.bmeg.gaea.schema.VariantCall.InfoEnt" +
      "ry\032+\n\tInfoEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 " +
      "\001(\t:\0028\001\"\207\001\n\tBioSample\022\r\n\005tumor\030\001 \001(\t\022\016\n\006" +
      "normal\030\002 \001(\t\022\016\n\006source\030\003 \001(\t\022\026\n\016individu" +
      "alName\030\004 \001(\t\0223\n\014variantCalls\030\005 \003(\0132\035.bme" +
      "g.gaea.schema.VariantCall\"\326\001\n\nIndividual",
      "\022\014\n\004name\030\001 \001(\t\022\016\n\006source\030\002 \001(\t\022/\n\nbioSam" +
      "ples\030\003 \003(\0132\033.bmeg.gaea.schema.BioSample\022" +
      "D\n\014observations\030\004 \003(\0132..bmeg.gaea.schema" +
      ".Individual.ObservationsEntry\0323\n\021Observa" +
      "tionsEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\002" +
      "8\001\"\255\001\n\016GeneExpression\022\017\n\007barcode\030\001 \001(\t\022\016" +
      "\n\006source\030\002 \001(\t\022F\n\013expressions\030\003 \003(\01321.bm" +
      "eg.gaea.schema.GeneExpression.Expression" +
      "sEntry\0322\n\020ExpressionsEntry\022\013\n\003key\030\001 \001(\t\022" +
      "\r\n\005value\030\002 \001(\t:\0028\001\"C\n\016IndividualList\0221\n\013",
      "individuals\030\001 \003(\0132\034.bmeg.gaea.schema.Ind" +
      "ividualb\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_bmeg_gaea_schema_Position_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_bmeg_gaea_schema_Position_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_bmeg_gaea_schema_Position_descriptor,
        new java.lang.String[] { "Reference", "Start", "End", "Strand", });
    internal_static_bmeg_gaea_schema_Feature_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_bmeg_gaea_schema_Feature_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_bmeg_gaea_schema_Feature_descriptor,
        new java.lang.String[] { "Position", "FeatureType", "Attributes", });
    internal_static_bmeg_gaea_schema_Feature_AttributesEntry_descriptor =
      internal_static_bmeg_gaea_schema_Feature_descriptor.getNestedTypes().get(0);
    internal_static_bmeg_gaea_schema_Feature_AttributesEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_bmeg_gaea_schema_Feature_AttributesEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_bmeg_gaea_schema_VariantCallEffect_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_bmeg_gaea_schema_VariantCallEffect_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_bmeg_gaea_schema_VariantCallEffect_descriptor,
        new java.lang.String[] { "Source", "Feature", "VariantClassification", "Domains", "DbsnpRS", "DbsnpValStatus", "Info", });
    internal_static_bmeg_gaea_schema_VariantCallEffect_InfoEntry_descriptor =
      internal_static_bmeg_gaea_schema_VariantCallEffect_descriptor.getNestedTypes().get(0);
    internal_static_bmeg_gaea_schema_VariantCallEffect_InfoEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_bmeg_gaea_schema_VariantCallEffect_InfoEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_bmeg_gaea_schema_VariantCall_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_bmeg_gaea_schema_VariantCall_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_bmeg_gaea_schema_VariantCall_descriptor,
        new java.lang.String[] { "Source", "Position", "VariantType", "ReferenceAllele", "NormalAllele1", "NormalAllele2", "TumorAllele1", "TumorAllele2", "Sequencer", "TumorSampleUUID", "MatchedNormSampleUUID", "VariantCallEffects", "Info", });
    internal_static_bmeg_gaea_schema_VariantCall_InfoEntry_descriptor =
      internal_static_bmeg_gaea_schema_VariantCall_descriptor.getNestedTypes().get(0);
    internal_static_bmeg_gaea_schema_VariantCall_InfoEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_bmeg_gaea_schema_VariantCall_InfoEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_bmeg_gaea_schema_BioSample_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_bmeg_gaea_schema_BioSample_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_bmeg_gaea_schema_BioSample_descriptor,
        new java.lang.String[] { "Tumor", "Normal", "Source", "IndividualName", "VariantCalls", });
    internal_static_bmeg_gaea_schema_Individual_descriptor =
      getDescriptor().getMessageTypes().get(5);
    internal_static_bmeg_gaea_schema_Individual_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_bmeg_gaea_schema_Individual_descriptor,
        new java.lang.String[] { "Name", "Source", "BioSamples", "Observations", });
    internal_static_bmeg_gaea_schema_Individual_ObservationsEntry_descriptor =
      internal_static_bmeg_gaea_schema_Individual_descriptor.getNestedTypes().get(0);
    internal_static_bmeg_gaea_schema_Individual_ObservationsEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_bmeg_gaea_schema_Individual_ObservationsEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_bmeg_gaea_schema_GeneExpression_descriptor =
      getDescriptor().getMessageTypes().get(6);
    internal_static_bmeg_gaea_schema_GeneExpression_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_bmeg_gaea_schema_GeneExpression_descriptor,
        new java.lang.String[] { "Barcode", "Source", "Expressions", });
    internal_static_bmeg_gaea_schema_GeneExpression_ExpressionsEntry_descriptor =
      internal_static_bmeg_gaea_schema_GeneExpression_descriptor.getNestedTypes().get(0);
    internal_static_bmeg_gaea_schema_GeneExpression_ExpressionsEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_bmeg_gaea_schema_GeneExpression_ExpressionsEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_bmeg_gaea_schema_IndividualList_descriptor =
      getDescriptor().getMessageTypes().get(7);
    internal_static_bmeg_gaea_schema_IndividualList_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_bmeg_gaea_schema_IndividualList_descriptor,
        new java.lang.String[] { "Individuals", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
